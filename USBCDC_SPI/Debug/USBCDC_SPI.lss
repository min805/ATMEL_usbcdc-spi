
USBCDC_SPI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004a44  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000000ec  20000000  00004a44  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000006ac  200000ec  00004b30  000200ec  2**2
                  ALLOC
  3 .stack        00002000  20000798  000051dc  000200ec  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  000200ec  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020114  2**0
                  CONTENTS, READONLY
  6 .debug_info   00038861  00000000  00000000  0002016d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004fb2  00000000  00000000  000589ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00008f9d  00000000  00000000  0005d980  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000009c8  00000000  00000000  0006691d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000b98  00000000  00000000  000672e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001dde5  00000000  00000000  00067e7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00011b13  00000000  00000000  00085c62  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00093fd4  00000000  00000000  00097775  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001988  00000000  00000000  0012b74c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	98 27 00 20 a9 40 00 00 a5 40 00 00 a5 40 00 00     .'. .@...@...@..
	...
      2c:	a5 40 00 00 00 00 00 00 00 00 00 00 a5 40 00 00     .@...........@..
      3c:	a5 40 00 00 a5 40 00 00 a5 40 00 00 a5 40 00 00     .@...@...@...@..
      4c:	a5 40 00 00 f1 11 00 00 a5 40 00 00 a5 40 00 00     .@.......@...@..
      5c:	cd 38 00 00 a5 40 00 00 5d 17 00 00 6d 17 00 00     .8...@..]...m...
      6c:	7d 17 00 00 8d 17 00 00 9d 17 00 00 ad 17 00 00     }...............
      7c:	a5 40 00 00 a5 40 00 00 a5 40 00 00 a5 40 00 00     .@...@...@...@..
      8c:	a5 40 00 00 a5 40 00 00 a5 40 00 00 a5 40 00 00     .@...@...@...@..
      9c:	a5 40 00 00 a5 40 00 00 a5 40 00 00 a5 40 00 00     .@...@...@...@..
      ac:	a5 40 00 00 00 00 00 00                             .@......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200000ec 	.word	0x200000ec
      d4:	00000000 	.word	0x00000000
      d8:	00004a44 	.word	0x00004a44

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200000f0 	.word	0x200000f0
     108:	00004a44 	.word	0x00004a44
     10c:	00004a44 	.word	0x00004a44
     110:	00000000 	.word	0x00000000

00000114 <ui_wakeup_handler>:
 * Note:
 * This interrupt is enable when the USB host enable remote wakeup feature
 * This interrupt wakeup the CPU if this one is in idle mode
 */
static void ui_wakeup_handler(void)
{
     114:	b510      	push	{r4, lr}
/*! \brief The USB driver sends a resume signal called \e "Upstream Resume"
 * This is authorized only when the remote wakeup feature is enabled by host.
 */
static inline void udc_remotewakeup(void)
{
	udd_send_remotewakeup();
     116:	4b03      	ldr	r3, [pc, #12]	; (124 <ui_wakeup_handler+0x10>)
     118:	4798      	blx	r3

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
	} else {
		port_base->OUTCLR.reg = pin_mask;
     11a:	2280      	movs	r2, #128	; 0x80
     11c:	05d2      	lsls	r2, r2, #23
     11e:	4b02      	ldr	r3, [pc, #8]	; (128 <ui_wakeup_handler+0x14>)
     120:	615a      	str	r2, [r3, #20]
	/* It is a wakeup then send wakeup USB */
	udc_remotewakeup();
	LED_On(LED_0_PIN);
}
     122:	bd10      	pop	{r4, pc}
     124:	00002ff9 	.word	0x00002ff9
     128:	41004480 	.word	0x41004480

0000012c <ui_init>:
#endif

void ui_init(void)
{
     12c:	b510      	push	{r4, lr}
     12e:	b084      	sub	sp, #16
#ifdef USB_DEVICE_LPM_SUPPORT
	struct extint_chan_conf config_extint_chan;

	extint_chan_get_config_defaults(&config_extint_chan);
     130:	ac01      	add	r4, sp, #4
     132:	0020      	movs	r0, r4
     134:	4b0e      	ldr	r3, [pc, #56]	; (170 <ui_init+0x44>)
     136:	4798      	blx	r3

	config_extint_chan.gpio_pin            = BUTTON_0_EIC_PIN;
     138:	230f      	movs	r3, #15
     13a:	9301      	str	r3, [sp, #4]
	config_extint_chan.gpio_pin_mux        = BUTTON_0_EIC_MUX;
     13c:	2300      	movs	r3, #0
     13e:	6063      	str	r3, [r4, #4]
	config_extint_chan.gpio_pin_pull       = EXTINT_PULL_UP;
     140:	3301      	adds	r3, #1
     142:	7223      	strb	r3, [r4, #8]
	config_extint_chan.filter_input_signal = true;
     144:	72a3      	strb	r3, [r4, #10]
	config_extint_chan.detection_criteria  = EXTINT_DETECT_FALLING;
     146:	3301      	adds	r3, #1
     148:	72e3      	strb	r3, [r4, #11]
	extint_chan_set_config(BUTTON_0_EIC_LINE, &config_extint_chan);
     14a:	0021      	movs	r1, r4
     14c:	200f      	movs	r0, #15
     14e:	4b09      	ldr	r3, [pc, #36]	; (174 <ui_init+0x48>)
     150:	4798      	blx	r3
	extint_register_callback(ui_wakeup_handler, BUTTON_0_EIC_LINE,
     152:	2200      	movs	r2, #0
     154:	210f      	movs	r1, #15
     156:	4808      	ldr	r0, [pc, #32]	; (178 <ui_init+0x4c>)
     158:	4b08      	ldr	r3, [pc, #32]	; (17c <ui_init+0x50>)
     15a:	4798      	blx	r3
			EXTINT_CALLBACK_TYPE_DETECT);
	extint_chan_enable_callback(BUTTON_0_EIC_LINE,EXTINT_CALLBACK_TYPE_DETECT);
     15c:	2100      	movs	r1, #0
     15e:	200f      	movs	r0, #15
     160:	4b07      	ldr	r3, [pc, #28]	; (180 <ui_init+0x54>)
     162:	4798      	blx	r3
		port_base->OUTSET.reg = pin_mask;
     164:	2280      	movs	r2, #128	; 0x80
     166:	05d2      	lsls	r2, r2, #23
     168:	4b06      	ldr	r3, [pc, #24]	; (184 <ui_init+0x58>)
     16a:	619a      	str	r2, [r3, #24]
#endif

	/* Initialize LEDs */
	LED_Off(LED_0_PIN);
}
     16c:	b004      	add	sp, #16
     16e:	bd10      	pop	{r4, pc}
     170:	000012c9 	.word	0x000012c9
     174:	000012dd 	.word	0x000012dd
     178:	00000115 	.word	0x00000115
     17c:	00001185 	.word	0x00001185
     180:	000011b1 	.word	0x000011b1
     184:	41004480 	.word	0x41004480

00000188 <ui_powerdown>:
     188:	2280      	movs	r2, #128	; 0x80
     18a:	05d2      	lsls	r2, r2, #23
     18c:	4b01      	ldr	r3, [pc, #4]	; (194 <ui_powerdown+0xc>)
     18e:	619a      	str	r2, [r3, #24]

void ui_powerdown(void)
{
	LED_Off(LED_0_PIN);
}
     190:	4770      	bx	lr
     192:	46c0      	nop			; (mov r8, r8)
     194:	41004480 	.word	0x41004480

00000198 <ui_wakeup_enable>:

#ifdef USB_DEVICE_LPM_SUPPORT
void ui_wakeup_enable(void)
{
     198:	b510      	push	{r4, lr}
	extint_chan_enable_callback(BUTTON_0_EIC_LINE,EXTINT_CALLBACK_TYPE_DETECT);
     19a:	2100      	movs	r1, #0
     19c:	200f      	movs	r0, #15
     19e:	4b01      	ldr	r3, [pc, #4]	; (1a4 <ui_wakeup_enable+0xc>)
     1a0:	4798      	blx	r3
}
     1a2:	bd10      	pop	{r4, pc}
     1a4:	000011b1 	.word	0x000011b1

000001a8 <ui_wakeup_disable>:

void ui_wakeup_disable(void)
{
     1a8:	b510      	push	{r4, lr}
	extint_chan_disable_callback(BUTTON_0_EIC_LINE,EXTINT_CALLBACK_TYPE_DETECT);
     1aa:	2100      	movs	r1, #0
     1ac:	200f      	movs	r0, #15
     1ae:	4b01      	ldr	r3, [pc, #4]	; (1b4 <ui_wakeup_disable+0xc>)
     1b0:	4798      	blx	r3
}
     1b2:	bd10      	pop	{r4, pc}
     1b4:	000011d1 	.word	0x000011d1

000001b8 <ui_wakeup>:
		port_base->OUTCLR.reg = pin_mask;
     1b8:	2280      	movs	r2, #128	; 0x80
     1ba:	05d2      	lsls	r2, r2, #23
     1bc:	4b01      	ldr	r3, [pc, #4]	; (1c4 <ui_wakeup+0xc>)
     1be:	615a      	str	r2, [r3, #20]
#endif // #ifdef USB_DEVICE_LPM_SUPPORT

void ui_wakeup(void)
{
	LED_On(LED_0_PIN);
}
     1c0:	4770      	bx	lr
     1c2:	46c0      	nop			; (mov r8, r8)
     1c4:	41004480 	.word	0x41004480

000001c8 <ui_com_open>:


void ui_com_open(uint8_t port)
{
	UNUSED(port);
}
     1c8:	4770      	bx	lr

000001ca <ui_com_close>:


void ui_com_close(uint8_t port)
{
	UNUSED(port);
}
     1ca:	4770      	bx	lr

000001cc <ui_com_rx_start>:


void ui_com_rx_start(void)
{

}
     1cc:	4770      	bx	lr

000001ce <ui_com_rx_stop>:


void ui_com_rx_stop(void)
{

}
     1ce:	4770      	bx	lr

000001d0 <ui_com_tx_start>:


void ui_com_tx_start(void)
{

}
     1d0:	4770      	bx	lr

000001d2 <ui_com_tx_stop>:


void ui_com_tx_stop(void)
{

}
     1d2:	4770      	bx	lr

000001d4 <ui_com_overflow>:


void ui_com_overflow(void)
{

}
     1d4:	4770      	bx	lr
	...

000001d8 <ui_process>:

void ui_process(uint16_t framenumber)
{
     1d8:	b510      	push	{r4, lr}
	if ((framenumber % 1000) == 0) {
     1da:	21fa      	movs	r1, #250	; 0xfa
     1dc:	0089      	lsls	r1, r1, #2
     1de:	4b09      	ldr	r3, [pc, #36]	; (204 <ui_process+0x2c>)
     1e0:	4798      	blx	r3
     1e2:	b289      	uxth	r1, r1
     1e4:	2900      	cmp	r1, #0
     1e6:	d104      	bne.n	1f2 <ui_process+0x1a>
     1e8:	2280      	movs	r2, #128	; 0x80
     1ea:	05d2      	lsls	r2, r2, #23
     1ec:	4b06      	ldr	r3, [pc, #24]	; (208 <ui_process+0x30>)
     1ee:	615a      	str	r2, [r3, #20]
		LED_On(LED_0_PIN);
	}
	if ((framenumber % 1000) == 500) {
		LED_Off(LED_0_PIN);
	}
}
     1f0:	bd10      	pop	{r4, pc}
	if ((framenumber % 1000) == 500) {
     1f2:	23fa      	movs	r3, #250	; 0xfa
     1f4:	005b      	lsls	r3, r3, #1
     1f6:	4299      	cmp	r1, r3
     1f8:	d1fa      	bne.n	1f0 <ui_process+0x18>
		port_base->OUTSET.reg = pin_mask;
     1fa:	2280      	movs	r2, #128	; 0x80
     1fc:	05d2      	lsls	r2, r2, #23
     1fe:	4b02      	ldr	r3, [pc, #8]	; (208 <ui_process+0x30>)
     200:	619a      	str	r2, [r3, #24]
}
     202:	e7f5      	b.n	1f0 <ui_process+0x18>
     204:	000046bd 	.word	0x000046bd
     208:	41004480 	.word	0x41004480

0000020c <udi_cdc_comm_disable>:
}

void udi_cdc_comm_disable(void)
{
	Assert(udi_cdc_nb_comm_enabled != 0);
	udi_cdc_nb_comm_enabled--;
     20c:	4a02      	ldr	r2, [pc, #8]	; (218 <udi_cdc_comm_disable+0xc>)
     20e:	7813      	ldrb	r3, [r2, #0]
     210:	3b01      	subs	r3, #1
     212:	b2db      	uxtb	r3, r3
     214:	7013      	strb	r3, [r2, #0]
}
     216:	4770      	bx	lr
     218:	20000113 	.word	0x20000113

0000021c <udi_cdc_data_setup>:
}

bool udi_cdc_data_setup(void)
{
	return false;  // request Not supported
}
     21c:	2000      	movs	r0, #0
     21e:	4770      	bx	lr

00000220 <udi_cdc_getsetting>:

uint8_t udi_cdc_getsetting(void)
{
	return 0;      // CDC don't have multiple alternate setting
}
     220:	2000      	movs	r0, #0
     222:	4770      	bx	lr

00000224 <udi_cdc_line_coding_received>:
	}
	return port;
}

static void udi_cdc_line_coding_received(void)
{
     224:	b510      	push	{r4, lr}
	uint8_t port = udi_cdc_setup_to_port();
	UNUSED(port);

	UDI_CDC_SET_CODING_EXT(port, (&udi_cdc_line_coding[port]));
     226:	4902      	ldr	r1, [pc, #8]	; (230 <udi_cdc_line_coding_received+0xc>)
     228:	2000      	movs	r0, #0
     22a:	4b02      	ldr	r3, [pc, #8]	; (234 <udi_cdc_line_coding_received+0x10>)
     22c:	4798      	blx	r3
}
     22e:	bd10      	pop	{r4, pc}
     230:	2000010c 	.word	0x2000010c
     234:	000043ad 	.word	0x000043ad

00000238 <udi_cdc_comm_enable>:
{
     238:	b510      	push	{r4, lr}
	udi_cdc_nb_comm_enabled = 0;
     23a:	2200      	movs	r2, #0
     23c:	4b12      	ldr	r3, [pc, #72]	; (288 <udi_cdc_comm_enable+0x50>)
     23e:	701a      	strb	r2, [r3, #0]
	udi_cdc_state[port] = CPU_TO_LE16(0);
     240:	2000      	movs	r0, #0
     242:	4b12      	ldr	r3, [pc, #72]	; (28c <udi_cdc_comm_enable+0x54>)
     244:	801a      	strh	r2, [r3, #0]
	uid_cdc_state_msg[port].header.bmRequestType =
     246:	4b12      	ldr	r3, [pc, #72]	; (290 <udi_cdc_comm_enable+0x58>)
     248:	21a1      	movs	r1, #161	; 0xa1
     24a:	7019      	strb	r1, [r3, #0]
	uid_cdc_state_msg[port].header.bNotification = USB_REQ_CDC_NOTIFY_SERIAL_STATE;
     24c:	3981      	subs	r1, #129	; 0x81
     24e:	7059      	strb	r1, [r3, #1]
	uid_cdc_state_msg[port].header.wValue = LE16(0);
     250:	805a      	strh	r2, [r3, #2]
	uid_cdc_state_msg[port].header.wIndex = LE16(iface_comm_num);
     252:	809a      	strh	r2, [r3, #4]
	uid_cdc_state_msg[port].header.wLength = LE16(2);
     254:	391e      	subs	r1, #30
     256:	80d9      	strh	r1, [r3, #6]
	uid_cdc_state_msg[port].value = CPU_TO_LE16(0);
     258:	811a      	strh	r2, [r3, #8]
	udi_cdc_line_coding[port].dwDTERate = CPU_TO_LE32(UDI_CDC_DEFAULT_RATE);
     25a:	490e      	ldr	r1, [pc, #56]	; (294 <udi_cdc_comm_enable+0x5c>)
     25c:	23e1      	movs	r3, #225	; 0xe1
     25e:	025b      	lsls	r3, r3, #9
     260:	600b      	str	r3, [r1, #0]
	udi_cdc_line_coding[port].bCharFormat = UDI_CDC_DEFAULT_STOPBITS;
     262:	7108      	strb	r0, [r1, #4]
	udi_cdc_line_coding[port].bParityType = UDI_CDC_DEFAULT_PARITY;
     264:	7148      	strb	r0, [r1, #5]
	udi_cdc_line_coding[port].bDataBits = UDI_CDC_DEFAULT_DATABITS;
     266:	2308      	movs	r3, #8
     268:	718b      	strb	r3, [r1, #6]
	UDI_CDC_SET_CODING_EXT(port,(&udi_cdc_line_coding[port]));
     26a:	2000      	movs	r0, #0
     26c:	4b0a      	ldr	r3, [pc, #40]	; (298 <udi_cdc_comm_enable+0x60>)
     26e:	4798      	blx	r3
	if (!UDI_CDC_ENABLE_EXT(port)) {
     270:	2000      	movs	r0, #0
     272:	4b0a      	ldr	r3, [pc, #40]	; (29c <udi_cdc_comm_enable+0x64>)
     274:	4798      	blx	r3
     276:	2800      	cmp	r0, #0
     278:	d004      	beq.n	284 <udi_cdc_comm_enable+0x4c>
	udi_cdc_nb_comm_enabled++;
     27a:	4a03      	ldr	r2, [pc, #12]	; (288 <udi_cdc_comm_enable+0x50>)
     27c:	7813      	ldrb	r3, [r2, #0]
     27e:	3301      	adds	r3, #1
     280:	b2db      	uxtb	r3, r3
     282:	7013      	strb	r3, [r2, #0]
}
     284:	bd10      	pop	{r4, pc}
     286:	46c0      	nop			; (mov r8, r8)
     288:	20000113 	.word	0x20000113
     28c:	200001ac 	.word	0x200001ac
     290:	20000244 	.word	0x20000244
     294:	2000010c 	.word	0x2000010c
     298:	000043ad 	.word	0x000043ad
     29c:	00004265 	.word	0x00004265

000002a0 <udi_cdc_tx_send>:
	udi_cdc_tx_send(port);
}


static void udi_cdc_tx_send(uint8_t port)
{
     2a0:	b570      	push	{r4, r5, r6, lr}
     2a2:	b084      	sub	sp, #16

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (udi_cdc_tx_trans_ongoing[port]) {
     2a4:	4b46      	ldr	r3, [pc, #280]	; (3c0 <udi_cdc_tx_send+0x120>)
     2a6:	781b      	ldrb	r3, [r3, #0]
     2a8:	2b00      	cmp	r3, #0
     2aa:	d001      	beq.n	2b0 <udi_cdc_tx_send+0x10>
	udd_ep_run( ep,
			b_short_packet,
			udi_cdc_tx_buf[port][buf_sel_trans],
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
			udi_cdc_data_sent);
}
     2ac:	b004      	add	sp, #16
     2ae:	bd70      	pop	{r4, r5, r6, pc}
	if (udd_is_high_speed()) {
     2b0:	4b44      	ldr	r3, [pc, #272]	; (3c4 <udi_cdc_tx_send+0x124>)
     2b2:	4798      	blx	r3
     2b4:	2800      	cmp	r0, #0
     2b6:	d043      	beq.n	340 <udi_cdc_tx_send+0xa0>
		if (udi_cdc_tx_sof_num[port] == udd_get_micro_frame_number()) {
     2b8:	4b43      	ldr	r3, [pc, #268]	; (3c8 <udi_cdc_tx_send+0x128>)
     2ba:	881c      	ldrh	r4, [r3, #0]
     2bc:	4b43      	ldr	r3, [pc, #268]	; (3cc <udi_cdc_tx_send+0x12c>)
     2be:	4798      	blx	r3
     2c0:	4284      	cmp	r4, r0
     2c2:	d0f3      	beq.n	2ac <udi_cdc_tx_send+0xc>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     2c4:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
     2c8:	425a      	negs	r2, r3
     2ca:	4153      	adcs	r3, r2
     2cc:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
     2ce:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
     2d0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     2d4:	2200      	movs	r2, #0
     2d6:	4b3e      	ldr	r3, [pc, #248]	; (3d0 <udi_cdc_tx_send+0x130>)
     2d8:	701a      	strb	r2, [r3, #0]
	return flags;
     2da:	9d03      	ldr	r5, [sp, #12]
	buf_sel_trans = udi_cdc_tx_buf_sel[port];
     2dc:	4b3d      	ldr	r3, [pc, #244]	; (3d4 <udi_cdc_tx_send+0x134>)
     2de:	781c      	ldrb	r4, [r3, #0]
     2e0:	b2e4      	uxtb	r4, r4
	if (udi_cdc_tx_buf_nb[port][buf_sel_trans] == 0) {
     2e2:	0062      	lsls	r2, r4, #1
     2e4:	4b3c      	ldr	r3, [pc, #240]	; (3d8 <udi_cdc_tx_send+0x138>)
     2e6:	5ad3      	ldrh	r3, [r2, r3]
     2e8:	2b00      	cmp	r3, #0
     2ea:	d030      	beq.n	34e <udi_cdc_tx_send+0xae>
	sof_zlp_counter = 0;
     2ec:	2200      	movs	r2, #0
     2ee:	4b3b      	ldr	r3, [pc, #236]	; (3dc <udi_cdc_tx_send+0x13c>)
     2f0:	801a      	strh	r2, [r3, #0]
	if (!udi_cdc_tx_both_buf_to_send[port]) {
     2f2:	4b3b      	ldr	r3, [pc, #236]	; (3e0 <udi_cdc_tx_send+0x140>)
     2f4:	781b      	ldrb	r3, [r3, #0]
     2f6:	2b00      	cmp	r3, #0
     2f8:	d148      	bne.n	38c <udi_cdc_tx_send+0xec>
		udi_cdc_tx_buf_sel[port] = (buf_sel_trans==0)?1:0;
     2fa:	4263      	negs	r3, r4
     2fc:	4163      	adcs	r3, r4
     2fe:	b2db      	uxtb	r3, r3
     300:	4a34      	ldr	r2, [pc, #208]	; (3d4 <udi_cdc_tx_send+0x134>)
     302:	7013      	strb	r3, [r2, #0]
	udi_cdc_tx_trans_ongoing[port] = true;
     304:	2201      	movs	r2, #1
     306:	4b2e      	ldr	r3, [pc, #184]	; (3c0 <udi_cdc_tx_send+0x120>)
     308:	701a      	strb	r2, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
     30a:	2d00      	cmp	r5, #0
     30c:	d004      	beq.n	318 <udi_cdc_tx_send+0x78>
		cpu_irq_enable();
     30e:	4b30      	ldr	r3, [pc, #192]	; (3d0 <udi_cdc_tx_send+0x130>)
     310:	701a      	strb	r2, [r3, #0]
     312:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     316:	b662      	cpsie	i
	b_short_packet = (udi_cdc_tx_buf_nb[port][buf_sel_trans] != UDI_CDC_TX_BUFFERS);
     318:	0026      	movs	r6, r4
     31a:	0063      	lsls	r3, r4, #1
     31c:	4a2e      	ldr	r2, [pc, #184]	; (3d8 <udi_cdc_tx_send+0x138>)
     31e:	5a9b      	ldrh	r3, [r3, r2]
     320:	001d      	movs	r5, r3
     322:	3d40      	subs	r5, #64	; 0x40
     324:	1e6a      	subs	r2, r5, #1
     326:	4195      	sbcs	r5, r2
     328:	b2ed      	uxtb	r5, r5
	if (b_short_packet) {
     32a:	2b40      	cmp	r3, #64	; 0x40
     32c:	d037      	beq.n	39e <udi_cdc_tx_send+0xfe>
		if (udd_is_high_speed()) {
     32e:	4b25      	ldr	r3, [pc, #148]	; (3c4 <udi_cdc_tx_send+0x124>)
     330:	4798      	blx	r3
     332:	2800      	cmp	r0, #0
     334:	d02e      	beq.n	394 <udi_cdc_tx_send+0xf4>
			udi_cdc_tx_sof_num[port] = udd_get_micro_frame_number();
     336:	4b25      	ldr	r3, [pc, #148]	; (3cc <udi_cdc_tx_send+0x12c>)
     338:	4798      	blx	r3
     33a:	4b23      	ldr	r3, [pc, #140]	; (3c8 <udi_cdc_tx_send+0x128>)
     33c:	8018      	strh	r0, [r3, #0]
     33e:	e031      	b.n	3a4 <udi_cdc_tx_send+0x104>
		if (udi_cdc_tx_sof_num[port] == udd_get_frame_number()) {
     340:	4b21      	ldr	r3, [pc, #132]	; (3c8 <udi_cdc_tx_send+0x128>)
     342:	881c      	ldrh	r4, [r3, #0]
     344:	4b27      	ldr	r3, [pc, #156]	; (3e4 <udi_cdc_tx_send+0x144>)
     346:	4798      	blx	r3
     348:	4284      	cmp	r4, r0
     34a:	d1bb      	bne.n	2c4 <udi_cdc_tx_send+0x24>
     34c:	e7ae      	b.n	2ac <udi_cdc_tx_send+0xc>
		sof_zlp_counter++;
     34e:	4a23      	ldr	r2, [pc, #140]	; (3dc <udi_cdc_tx_send+0x13c>)
     350:	8813      	ldrh	r3, [r2, #0]
     352:	3301      	adds	r3, #1
     354:	8013      	strh	r3, [r2, #0]
		if (((!udd_is_high_speed()) && (sof_zlp_counter < 100))
     356:	4b1b      	ldr	r3, [pc, #108]	; (3c4 <udi_cdc_tx_send+0x124>)
     358:	4798      	blx	r3
     35a:	2800      	cmp	r0, #0
     35c:	d103      	bne.n	366 <udi_cdc_tx_send+0xc6>
     35e:	4b1f      	ldr	r3, [pc, #124]	; (3dc <udi_cdc_tx_send+0x13c>)
     360:	881b      	ldrh	r3, [r3, #0]
     362:	2b63      	cmp	r3, #99	; 0x63
     364:	d908      	bls.n	378 <udi_cdc_tx_send+0xd8>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
     366:	4b17      	ldr	r3, [pc, #92]	; (3c4 <udi_cdc_tx_send+0x124>)
     368:	4798      	blx	r3
     36a:	2800      	cmp	r0, #0
     36c:	d0be      	beq.n	2ec <udi_cdc_tx_send+0x4c>
     36e:	4b1e      	ldr	r3, [pc, #120]	; (3e8 <udi_cdc_tx_send+0x148>)
     370:	4a1a      	ldr	r2, [pc, #104]	; (3dc <udi_cdc_tx_send+0x13c>)
     372:	8812      	ldrh	r2, [r2, #0]
     374:	429a      	cmp	r2, r3
     376:	d8b9      	bhi.n	2ec <udi_cdc_tx_send+0x4c>
	if (cpu_irq_is_enabled_flags(flags))
     378:	2d00      	cmp	r5, #0
     37a:	d100      	bne.n	37e <udi_cdc_tx_send+0xde>
     37c:	e796      	b.n	2ac <udi_cdc_tx_send+0xc>
		cpu_irq_enable();
     37e:	2201      	movs	r2, #1
     380:	4b13      	ldr	r3, [pc, #76]	; (3d0 <udi_cdc_tx_send+0x130>)
     382:	701a      	strb	r2, [r3, #0]
     384:	f3bf 8f5f 	dmb	sy
     388:	b662      	cpsie	i
     38a:	e78f      	b.n	2ac <udi_cdc_tx_send+0xc>
		buf_sel_trans = (buf_sel_trans==0)?1:0;
     38c:	4262      	negs	r2, r4
     38e:	4154      	adcs	r4, r2
     390:	b2e4      	uxtb	r4, r4
     392:	e7b7      	b.n	304 <udi_cdc_tx_send+0x64>
			udi_cdc_tx_sof_num[port] = udd_get_frame_number();
     394:	4b13      	ldr	r3, [pc, #76]	; (3e4 <udi_cdc_tx_send+0x144>)
     396:	4798      	blx	r3
     398:	4b0b      	ldr	r3, [pc, #44]	; (3c8 <udi_cdc_tx_send+0x128>)
     39a:	8018      	strh	r0, [r3, #0]
     39c:	e002      	b.n	3a4 <udi_cdc_tx_send+0x104>
		udi_cdc_tx_sof_num[port] = 0; // Force next transfer without wait SOF
     39e:	2200      	movs	r2, #0
     3a0:	4b09      	ldr	r3, [pc, #36]	; (3c8 <udi_cdc_tx_send+0x128>)
     3a2:	801a      	strh	r2, [r3, #0]
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
     3a4:	0076      	lsls	r6, r6, #1
	udd_ep_run( ep,
     3a6:	4b0c      	ldr	r3, [pc, #48]	; (3d8 <udi_cdc_tx_send+0x138>)
     3a8:	5af3      	ldrh	r3, [r6, r3]
			udi_cdc_tx_buf[port][buf_sel_trans],
     3aa:	01a4      	lsls	r4, r4, #6
     3ac:	4a0f      	ldr	r2, [pc, #60]	; (3ec <udi_cdc_tx_send+0x14c>)
     3ae:	1914      	adds	r4, r2, r4
	udd_ep_run( ep,
     3b0:	4a0f      	ldr	r2, [pc, #60]	; (3f0 <udi_cdc_tx_send+0x150>)
     3b2:	9200      	str	r2, [sp, #0]
     3b4:	0022      	movs	r2, r4
     3b6:	0029      	movs	r1, r5
     3b8:	2081      	movs	r0, #129	; 0x81
     3ba:	4c0e      	ldr	r4, [pc, #56]	; (3f4 <udi_cdc_tx_send+0x154>)
     3bc:	47a0      	blx	r4
     3be:	e775      	b.n	2ac <udi_cdc_tx_send+0xc>
     3c0:	20000240 	.word	0x20000240
     3c4:	00002af5 	.word	0x00002af5
     3c8:	2000023c 	.word	0x2000023c
     3cc:	00002b09 	.word	0x00002b09
     3d0:	200000e8 	.word	0x200000e8
     3d4:	20000238 	.word	0x20000238
     3d8:	20000234 	.word	0x20000234
     3dc:	20000108 	.word	0x20000108
     3e0:	200001b0 	.word	0x200001b0
     3e4:	00002af9 	.word	0x00002af9
     3e8:	0000031f 	.word	0x0000031f
     3ec:	200001b4 	.word	0x200001b4
     3f0:	000003f9 	.word	0x000003f9
     3f4:	00002e01 	.word	0x00002e01

000003f8 <udi_cdc_data_sent>:
{
     3f8:	b510      	push	{r4, lr}
	if (UDD_EP_TRANSFER_OK != status) {
     3fa:	2800      	cmp	r0, #0
     3fc:	d000      	beq.n	400 <udi_cdc_data_sent+0x8>
}
     3fe:	bd10      	pop	{r4, pc}
	udi_cdc_tx_buf_nb[port][(udi_cdc_tx_buf_sel[port]==0)?1:0] = 0;
     400:	4b07      	ldr	r3, [pc, #28]	; (420 <udi_cdc_data_sent+0x28>)
     402:	781b      	ldrb	r3, [r3, #0]
     404:	425a      	negs	r2, r3
     406:	4153      	adcs	r3, r2
     408:	005b      	lsls	r3, r3, #1
     40a:	2200      	movs	r2, #0
     40c:	4905      	ldr	r1, [pc, #20]	; (424 <udi_cdc_data_sent+0x2c>)
     40e:	5258      	strh	r0, [r3, r1]
	udi_cdc_tx_both_buf_to_send[port] = false;
     410:	4b05      	ldr	r3, [pc, #20]	; (428 <udi_cdc_data_sent+0x30>)
     412:	701a      	strb	r2, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
     414:	4b05      	ldr	r3, [pc, #20]	; (42c <udi_cdc_data_sent+0x34>)
     416:	701a      	strb	r2, [r3, #0]
	udi_cdc_tx_send(port);
     418:	4b05      	ldr	r3, [pc, #20]	; (430 <udi_cdc_data_sent+0x38>)
     41a:	4798      	blx	r3
     41c:	e7ef      	b.n	3fe <udi_cdc_data_sent+0x6>
     41e:	46c0      	nop			; (mov r8, r8)
     420:	20000238 	.word	0x20000238
     424:	20000234 	.word	0x20000234
     428:	200001b0 	.word	0x200001b0
     42c:	20000240 	.word	0x20000240
     430:	000002a1 	.word	0x000002a1

00000434 <udi_cdc_data_sof_notify>:
{
     434:	b510      	push	{r4, lr}
	udi_cdc_tx_send(port_notify);
     436:	2000      	movs	r0, #0
     438:	4b01      	ldr	r3, [pc, #4]	; (440 <udi_cdc_data_sof_notify+0xc>)
     43a:	4798      	blx	r3
}
     43c:	bd10      	pop	{r4, pc}
     43e:	46c0      	nop			; (mov r8, r8)
     440:	000002a1 	.word	0x000002a1

00000444 <udi_cdc_ctrl_state_notify>:
{
     444:	b510      	push	{r4, lr}
     446:	b082      	sub	sp, #8
     448:	0008      	movs	r0, r1
	if ((!udi_cdc_serial_state_msg_ongoing[port])
     44a:	4b0c      	ldr	r3, [pc, #48]	; (47c <udi_cdc_ctrl_state_notify+0x38>)
     44c:	781b      	ldrb	r3, [r3, #0]
     44e:	2b00      	cmp	r3, #0
     450:	d112      	bne.n	478 <udi_cdc_ctrl_state_notify+0x34>
			&& (udi_cdc_state[port] != uid_cdc_state_msg[port].value)) {
     452:	4b0b      	ldr	r3, [pc, #44]	; (480 <udi_cdc_ctrl_state_notify+0x3c>)
     454:	881b      	ldrh	r3, [r3, #0]
     456:	b29b      	uxth	r3, r3
     458:	4a0a      	ldr	r2, [pc, #40]	; (484 <udi_cdc_ctrl_state_notify+0x40>)
     45a:	8912      	ldrh	r2, [r2, #8]
     45c:	429a      	cmp	r2, r3
     45e:	d00b      	beq.n	478 <udi_cdc_ctrl_state_notify+0x34>
		uid_cdc_state_msg[port].value = udi_cdc_state[port];
     460:	4b07      	ldr	r3, [pc, #28]	; (480 <udi_cdc_ctrl_state_notify+0x3c>)
     462:	881b      	ldrh	r3, [r3, #0]
     464:	4a07      	ldr	r2, [pc, #28]	; (484 <udi_cdc_ctrl_state_notify+0x40>)
     466:	8113      	strh	r3, [r2, #8]
				udd_ep_run(ep,
     468:	4b07      	ldr	r3, [pc, #28]	; (488 <udi_cdc_ctrl_state_notify+0x44>)
     46a:	9300      	str	r3, [sp, #0]
     46c:	230a      	movs	r3, #10
     46e:	2100      	movs	r1, #0
     470:	4c06      	ldr	r4, [pc, #24]	; (48c <udi_cdc_ctrl_state_notify+0x48>)
     472:	47a0      	blx	r4
		udi_cdc_serial_state_msg_ongoing[port] =
     474:	4b01      	ldr	r3, [pc, #4]	; (47c <udi_cdc_ctrl_state_notify+0x38>)
     476:	7018      	strb	r0, [r3, #0]
}
     478:	b002      	add	sp, #8
     47a:	bd10      	pop	{r4, pc}
     47c:	200001a8 	.word	0x200001a8
     480:	200001ac 	.word	0x200001ac
     484:	20000244 	.word	0x20000244
     488:	000004ed 	.word	0x000004ed
     48c:	00002e01 	.word	0x00002e01

00000490 <udi_cdc_ctrl_state_change>:
{
     490:	b500      	push	{lr}
     492:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     494:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     498:	4258      	negs	r0, r3
     49a:	4143      	adcs	r3, r0
     49c:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     49e:	b672      	cpsid	i
     4a0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     4a4:	2000      	movs	r0, #0
     4a6:	4b0e      	ldr	r3, [pc, #56]	; (4e0 <udi_cdc_ctrl_state_change+0x50>)
     4a8:	7018      	strb	r0, [r3, #0]
	return flags;
     4aa:	9b01      	ldr	r3, [sp, #4]
	if (b_set) {
     4ac:	2900      	cmp	r1, #0
     4ae:	d011      	beq.n	4d4 <udi_cdc_ctrl_state_change+0x44>
		udi_cdc_state[port] |= bit_mask;
     4b0:	480c      	ldr	r0, [pc, #48]	; (4e4 <udi_cdc_ctrl_state_change+0x54>)
     4b2:	8801      	ldrh	r1, [r0, #0]
     4b4:	430a      	orrs	r2, r1
     4b6:	8002      	strh	r2, [r0, #0]
	if (cpu_irq_is_enabled_flags(flags))
     4b8:	2b00      	cmp	r3, #0
     4ba:	d005      	beq.n	4c8 <udi_cdc_ctrl_state_change+0x38>
		cpu_irq_enable();
     4bc:	2201      	movs	r2, #1
     4be:	4b08      	ldr	r3, [pc, #32]	; (4e0 <udi_cdc_ctrl_state_change+0x50>)
     4c0:	701a      	strb	r2, [r3, #0]
     4c2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     4c6:	b662      	cpsie	i
	udi_cdc_ctrl_state_notify(port, ep_comm);
     4c8:	2183      	movs	r1, #131	; 0x83
     4ca:	2000      	movs	r0, #0
     4cc:	4b06      	ldr	r3, [pc, #24]	; (4e8 <udi_cdc_ctrl_state_change+0x58>)
     4ce:	4798      	blx	r3
}
     4d0:	b003      	add	sp, #12
     4d2:	bd00      	pop	{pc}
		udi_cdc_state[port] &= ~(unsigned)bit_mask;
     4d4:	4803      	ldr	r0, [pc, #12]	; (4e4 <udi_cdc_ctrl_state_change+0x54>)
     4d6:	8801      	ldrh	r1, [r0, #0]
     4d8:	4391      	bics	r1, r2
     4da:	8001      	strh	r1, [r0, #0]
     4dc:	e7ec      	b.n	4b8 <udi_cdc_ctrl_state_change+0x28>
     4de:	46c0      	nop			; (mov r8, r8)
     4e0:	200000e8 	.word	0x200000e8
     4e4:	200001ac 	.word	0x200001ac
     4e8:	00000445 	.word	0x00000445

000004ec <udi_cdc_serial_state_msg_sent>:
{
     4ec:	b510      	push	{r4, lr}
	udi_cdc_serial_state_msg_ongoing[port] = false;
     4ee:	2100      	movs	r1, #0
     4f0:	4b07      	ldr	r3, [pc, #28]	; (510 <udi_cdc_serial_state_msg_sent+0x24>)
     4f2:	7019      	strb	r1, [r3, #0]
	udi_cdc_state[port] &= ~(CDC_SERIAL_STATE_BREAK |
     4f4:	4807      	ldr	r0, [pc, #28]	; (514 <udi_cdc_serial_state_msg_sent+0x28>)
     4f6:	8803      	ldrh	r3, [r0, #0]
     4f8:	247c      	movs	r4, #124	; 0x7c
     4fa:	43a3      	bics	r3, r4
     4fc:	8003      	strh	r3, [r0, #0]
	uid_cdc_state_msg[port].value &= ~(CDC_SERIAL_STATE_BREAK |
     4fe:	4806      	ldr	r0, [pc, #24]	; (518 <udi_cdc_serial_state_msg_sent+0x2c>)
     500:	8903      	ldrh	r3, [r0, #8]
     502:	43a3      	bics	r3, r4
     504:	8103      	strh	r3, [r0, #8]
	udi_cdc_ctrl_state_notify(port, ep);
     506:	0011      	movs	r1, r2
     508:	2000      	movs	r0, #0
     50a:	4b04      	ldr	r3, [pc, #16]	; (51c <udi_cdc_serial_state_msg_sent+0x30>)
     50c:	4798      	blx	r3
}
     50e:	bd10      	pop	{r4, pc}
     510:	200001a8 	.word	0x200001a8
     514:	200001ac 	.word	0x200001ac
     518:	20000244 	.word	0x20000244
     51c:	00000445 	.word	0x00000445

00000520 <udi_cdc_data_disable>:
{
     520:	b510      	push	{r4, lr}
	udi_cdc_nb_data_enabled--;
     522:	4a06      	ldr	r2, [pc, #24]	; (53c <udi_cdc_data_disable+0x1c>)
     524:	7813      	ldrb	r3, [r2, #0]
     526:	3b01      	subs	r3, #1
     528:	b2db      	uxtb	r3, r3
     52a:	7013      	strb	r3, [r2, #0]
	port = udi_cdc_nb_data_enabled;
     52c:	7810      	ldrb	r0, [r2, #0]
     52e:	b2c0      	uxtb	r0, r0
	UDI_CDC_DISABLE_EXT(port);
     530:	4b03      	ldr	r3, [pc, #12]	; (540 <udi_cdc_data_disable+0x20>)
     532:	4798      	blx	r3
	udi_cdc_data_running = false;
     534:	2200      	movs	r2, #0
     536:	4b03      	ldr	r3, [pc, #12]	; (544 <udi_cdc_data_disable+0x24>)
     538:	701a      	strb	r2, [r3, #0]
}
     53a:	bd10      	pop	{r4, pc}
     53c:	20000114 	.word	0x20000114
     540:	0000427d 	.word	0x0000427d
     544:	2000010a 	.word	0x2000010a

00000548 <udi_cdc_comm_setup>:
{
     548:	b510      	push	{r4, lr}
	if (Udd_setup_is_in()) {
     54a:	4b20      	ldr	r3, [pc, #128]	; (5cc <udi_cdc_comm_setup+0x84>)
     54c:	781a      	ldrb	r2, [r3, #0]
     54e:	b253      	sxtb	r3, r2
     550:	2b00      	cmp	r3, #0
     552:	db05      	blt.n	560 <udi_cdc_comm_setup+0x18>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
     554:	2360      	movs	r3, #96	; 0x60
     556:	4013      	ands	r3, r2
	return false;  // request Not supported
     558:	2000      	movs	r0, #0
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
     55a:	2b20      	cmp	r3, #32
     55c:	d014      	beq.n	588 <udi_cdc_comm_setup+0x40>
}
     55e:	bd10      	pop	{r4, pc}
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
     560:	2360      	movs	r3, #96	; 0x60
     562:	4013      	ands	r3, r2
	return false;  // request Not supported
     564:	2000      	movs	r0, #0
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
     566:	2b20      	cmp	r3, #32
     568:	d1f9      	bne.n	55e <udi_cdc_comm_setup+0x16>
			switch (udd_g_ctrlreq.req.bRequest) {
     56a:	4b18      	ldr	r3, [pc, #96]	; (5cc <udi_cdc_comm_setup+0x84>)
     56c:	785b      	ldrb	r3, [r3, #1]
     56e:	2b21      	cmp	r3, #33	; 0x21
     570:	d129      	bne.n	5c6 <udi_cdc_comm_setup+0x7e>
						udd_g_ctrlreq.req.wLength)
     572:	4b16      	ldr	r3, [pc, #88]	; (5cc <udi_cdc_comm_setup+0x84>)
				if (sizeof(usb_cdc_line_coding_t) !=
     574:	88db      	ldrh	r3, [r3, #6]
     576:	2b07      	cmp	r3, #7
     578:	d1f1      	bne.n	55e <udi_cdc_comm_setup+0x16>
				udd_g_ctrlreq.payload =
     57a:	4b14      	ldr	r3, [pc, #80]	; (5cc <udi_cdc_comm_setup+0x84>)
     57c:	4a14      	ldr	r2, [pc, #80]	; (5d0 <udi_cdc_comm_setup+0x88>)
     57e:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
     580:	2207      	movs	r2, #7
     582:	819a      	strh	r2, [r3, #12]
				return true;
     584:	3001      	adds	r0, #1
     586:	e7ea      	b.n	55e <udi_cdc_comm_setup+0x16>
			switch (udd_g_ctrlreq.req.bRequest) {
     588:	4b10      	ldr	r3, [pc, #64]	; (5cc <udi_cdc_comm_setup+0x84>)
     58a:	785b      	ldrb	r3, [r3, #1]
     58c:	2b20      	cmp	r3, #32
     58e:	d003      	beq.n	598 <udi_cdc_comm_setup+0x50>
     590:	2b22      	cmp	r3, #34	; 0x22
     592:	d00f      	beq.n	5b4 <udi_cdc_comm_setup+0x6c>
	return false;  // request Not supported
     594:	2000      	movs	r0, #0
     596:	e7e2      	b.n	55e <udi_cdc_comm_setup+0x16>
						udd_g_ctrlreq.req.wLength)
     598:	4b0c      	ldr	r3, [pc, #48]	; (5cc <udi_cdc_comm_setup+0x84>)
				if (sizeof(usb_cdc_line_coding_t) !=
     59a:	88db      	ldrh	r3, [r3, #6]
					return false; // Error for USB host
     59c:	2000      	movs	r0, #0
				if (sizeof(usb_cdc_line_coding_t) !=
     59e:	2b07      	cmp	r3, #7
     5a0:	d1dd      	bne.n	55e <udi_cdc_comm_setup+0x16>
				udd_g_ctrlreq.callback =
     5a2:	4b0a      	ldr	r3, [pc, #40]	; (5cc <udi_cdc_comm_setup+0x84>)
     5a4:	4a0b      	ldr	r2, [pc, #44]	; (5d4 <udi_cdc_comm_setup+0x8c>)
     5a6:	611a      	str	r2, [r3, #16]
				udd_g_ctrlreq.payload =
     5a8:	4a09      	ldr	r2, [pc, #36]	; (5d0 <udi_cdc_comm_setup+0x88>)
     5aa:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
     5ac:	2207      	movs	r2, #7
     5ae:	819a      	strh	r2, [r3, #12]
				return true;
     5b0:	3001      	adds	r0, #1
     5b2:	e7d4      	b.n	55e <udi_cdc_comm_setup+0x16>
				UDI_CDC_SET_DTR_EXT(port, (0 !=
     5b4:	4b05      	ldr	r3, [pc, #20]	; (5cc <udi_cdc_comm_setup+0x84>)
     5b6:	885b      	ldrh	r3, [r3, #2]
     5b8:	2101      	movs	r1, #1
     5ba:	4019      	ands	r1, r3
     5bc:	2000      	movs	r0, #0
     5be:	4b06      	ldr	r3, [pc, #24]	; (5d8 <udi_cdc_comm_setup+0x90>)
     5c0:	4798      	blx	r3
				return true;
     5c2:	2001      	movs	r0, #1
     5c4:	e7cb      	b.n	55e <udi_cdc_comm_setup+0x16>
	return false;  // request Not supported
     5c6:	2000      	movs	r0, #0
     5c8:	e7c9      	b.n	55e <udi_cdc_comm_setup+0x16>
     5ca:	46c0      	nop			; (mov r8, r8)
     5cc:	200005cc 	.word	0x200005cc
     5d0:	2000010c 	.word	0x2000010c
     5d4:	00000225 	.word	0x00000225
     5d8:	00004295 	.word	0x00004295

000005dc <udi_cdc_signal_overrun>:
{
	udi_cdc_ctrl_state_change(0, true, CDC_SERIAL_STATE_PARITY);
}

void udi_cdc_signal_overrun(void)
{
     5dc:	b510      	push	{r4, lr}
	udi_cdc_ctrl_state_change(0, true, CDC_SERIAL_STATE_OVERRUN);
     5de:	2240      	movs	r2, #64	; 0x40
     5e0:	2101      	movs	r1, #1
     5e2:	2000      	movs	r0, #0
     5e4:	4b01      	ldr	r3, [pc, #4]	; (5ec <udi_cdc_signal_overrun+0x10>)
     5e6:	4798      	blx	r3
}
     5e8:	bd10      	pop	{r4, pc}
     5ea:	46c0      	nop			; (mov r8, r8)
     5ec:	00000491 	.word	0x00000491

000005f0 <udi_cdc_multi_get_nb_received_data>:
{
	udi_cdc_ctrl_state_change(port, true, CDC_SERIAL_STATE_OVERRUN);
}

iram_size_t udi_cdc_multi_get_nb_received_data(uint8_t port)
{
     5f0:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     5f2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     5f6:	425a      	negs	r2, r3
     5f8:	4153      	adcs	r3, r2
     5fa:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     5fc:	b672      	cpsid	i
     5fe:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     602:	2200      	movs	r2, #0
     604:	4b0a      	ldr	r3, [pc, #40]	; (630 <udi_cdc_multi_get_nb_received_data+0x40>)
     606:	701a      	strb	r2, [r3, #0]
	return flags;
     608:	9a01      	ldr	r2, [sp, #4]

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
     60a:	4b0a      	ldr	r3, [pc, #40]	; (634 <udi_cdc_multi_get_nb_received_data+0x44>)
     60c:	8819      	ldrh	r1, [r3, #0]
	nb_received = udi_cdc_rx_buf_nb[port][udi_cdc_rx_buf_sel[port]] - pos;
     60e:	4b0a      	ldr	r3, [pc, #40]	; (638 <udi_cdc_multi_get_nb_received_data+0x48>)
     610:	781b      	ldrb	r3, [r3, #0]
     612:	005b      	lsls	r3, r3, #1
     614:	4809      	ldr	r0, [pc, #36]	; (63c <udi_cdc_multi_get_nb_received_data+0x4c>)
     616:	5a18      	ldrh	r0, [r3, r0]
     618:	1a40      	subs	r0, r0, r1
	if (cpu_irq_is_enabled_flags(flags))
     61a:	2a00      	cmp	r2, #0
     61c:	d005      	beq.n	62a <udi_cdc_multi_get_nb_received_data+0x3a>
		cpu_irq_enable();
     61e:	2201      	movs	r2, #1
     620:	4b03      	ldr	r3, [pc, #12]	; (630 <udi_cdc_multi_get_nb_received_data+0x40>)
     622:	701a      	strb	r2, [r3, #0]
     624:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     628:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return nb_received;
}
     62a:	b002      	add	sp, #8
     62c:	4770      	bx	lr
     62e:	46c0      	nop			; (mov r8, r8)
     630:	200000e8 	.word	0x200000e8
     634:	200001a0 	.word	0x200001a0
     638:	2000019c 	.word	0x2000019c
     63c:	20000198 	.word	0x20000198

00000640 <udi_cdc_multi_is_rx_ready>:
{
	return udi_cdc_multi_get_nb_received_data(0);
}

bool udi_cdc_multi_is_rx_ready(uint8_t port)
{
     640:	b510      	push	{r4, lr}
	return (udi_cdc_multi_get_nb_received_data(port) > 0);
     642:	4b03      	ldr	r3, [pc, #12]	; (650 <udi_cdc_multi_is_rx_ready+0x10>)
     644:	4798      	blx	r3
     646:	1e43      	subs	r3, r0, #1
     648:	4198      	sbcs	r0, r3
     64a:	b2c0      	uxtb	r0, r0
}
     64c:	bd10      	pop	{r4, pc}
     64e:	46c0      	nop			; (mov r8, r8)
     650:	000005f1 	.word	0x000005f1

00000654 <udi_cdc_rx_start>:
{
     654:	b510      	push	{r4, lr}
     656:	b084      	sub	sp, #16
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     658:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     65c:	425a      	negs	r2, r3
     65e:	4153      	adcs	r3, r2
     660:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
     662:	b672      	cpsid	i
     664:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     668:	2200      	movs	r2, #0
     66a:	4b22      	ldr	r3, [pc, #136]	; (6f4 <udi_cdc_rx_start+0xa0>)
     66c:	701a      	strb	r2, [r3, #0]
	return flags;
     66e:	9b03      	ldr	r3, [sp, #12]
	buf_sel_trans = udi_cdc_rx_buf_sel[port];
     670:	4a21      	ldr	r2, [pc, #132]	; (6f8 <udi_cdc_rx_start+0xa4>)
     672:	7814      	ldrb	r4, [r2, #0]
     674:	b2e4      	uxtb	r4, r4
	if (udi_cdc_rx_trans_ongoing[port] ||
     676:	4a21      	ldr	r2, [pc, #132]	; (6fc <udi_cdc_rx_start+0xa8>)
     678:	7812      	ldrb	r2, [r2, #0]
     67a:	2a00      	cmp	r2, #0
     67c:	d107      	bne.n	68e <udi_cdc_rx_start+0x3a>
		(udi_cdc_rx_pos[port] < udi_cdc_rx_buf_nb[port][buf_sel_trans])) {
     67e:	4a20      	ldr	r2, [pc, #128]	; (700 <udi_cdc_rx_start+0xac>)
     680:	8812      	ldrh	r2, [r2, #0]
     682:	0061      	lsls	r1, r4, #1
     684:	481f      	ldr	r0, [pc, #124]	; (704 <udi_cdc_rx_start+0xb0>)
     686:	5a09      	ldrh	r1, [r1, r0]
     688:	b292      	uxth	r2, r2
	if (udi_cdc_rx_trans_ongoing[port] ||
     68a:	428a      	cmp	r2, r1
     68c:	d20a      	bcs.n	6a4 <udi_cdc_rx_start+0x50>
		return false;
     68e:	2000      	movs	r0, #0
	if (cpu_irq_is_enabled_flags(flags))
     690:	2b00      	cmp	r3, #0
     692:	d005      	beq.n	6a0 <udi_cdc_rx_start+0x4c>
		cpu_irq_enable();
     694:	2201      	movs	r2, #1
     696:	4b17      	ldr	r3, [pc, #92]	; (6f4 <udi_cdc_rx_start+0xa0>)
     698:	701a      	strb	r2, [r3, #0]
     69a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     69e:	b662      	cpsie	i
}
     6a0:	b004      	add	sp, #16
     6a2:	bd10      	pop	{r4, pc}
	udi_cdc_rx_pos[port] = 0;
     6a4:	2100      	movs	r1, #0
     6a6:	4a16      	ldr	r2, [pc, #88]	; (700 <udi_cdc_rx_start+0xac>)
     6a8:	8011      	strh	r1, [r2, #0]
	udi_cdc_rx_buf_sel[port] = (buf_sel_trans==0)?1:0;
     6aa:	4262      	negs	r2, r4
     6ac:	4162      	adcs	r2, r4
     6ae:	b2d2      	uxtb	r2, r2
     6b0:	4911      	ldr	r1, [pc, #68]	; (6f8 <udi_cdc_rx_start+0xa4>)
     6b2:	700a      	strb	r2, [r1, #0]
	udi_cdc_rx_trans_ongoing[port] = true;
     6b4:	2101      	movs	r1, #1
     6b6:	4a11      	ldr	r2, [pc, #68]	; (6fc <udi_cdc_rx_start+0xa8>)
     6b8:	7011      	strb	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
     6ba:	2b00      	cmp	r3, #0
     6bc:	d005      	beq.n	6ca <udi_cdc_rx_start+0x76>
		cpu_irq_enable();
     6be:	2201      	movs	r2, #1
     6c0:	4b0c      	ldr	r3, [pc, #48]	; (6f4 <udi_cdc_rx_start+0xa0>)
     6c2:	701a      	strb	r2, [r3, #0]
     6c4:	f3bf 8f5f 	dmb	sy
     6c8:	b662      	cpsie	i
	if (udi_cdc_multi_is_rx_ready(port)) {
     6ca:	2000      	movs	r0, #0
     6cc:	4b0e      	ldr	r3, [pc, #56]	; (708 <udi_cdc_rx_start+0xb4>)
     6ce:	4798      	blx	r3
     6d0:	2800      	cmp	r0, #0
     6d2:	d10a      	bne.n	6ea <udi_cdc_rx_start+0x96>
			udi_cdc_rx_buf[port][buf_sel_trans],
     6d4:	01a4      	lsls	r4, r4, #6
     6d6:	4a0d      	ldr	r2, [pc, #52]	; (70c <udi_cdc_rx_start+0xb8>)
     6d8:	1912      	adds	r2, r2, r4
	return udd_ep_run(ep,
     6da:	4b0d      	ldr	r3, [pc, #52]	; (710 <udi_cdc_rx_start+0xbc>)
     6dc:	9300      	str	r3, [sp, #0]
     6de:	2340      	movs	r3, #64	; 0x40
     6e0:	2101      	movs	r1, #1
     6e2:	2002      	movs	r0, #2
     6e4:	4c0b      	ldr	r4, [pc, #44]	; (714 <udi_cdc_rx_start+0xc0>)
     6e6:	47a0      	blx	r4
     6e8:	e7da      	b.n	6a0 <udi_cdc_rx_start+0x4c>
		UDI_CDC_RX_NOTIFY(port);
     6ea:	2000      	movs	r0, #0
     6ec:	4b0a      	ldr	r3, [pc, #40]	; (718 <udi_cdc_rx_start+0xc4>)
     6ee:	4798      	blx	r3
     6f0:	e7f0      	b.n	6d4 <udi_cdc_rx_start+0x80>
     6f2:	46c0      	nop			; (mov r8, r8)
     6f4:	200000e8 	.word	0x200000e8
     6f8:	2000019c 	.word	0x2000019c
     6fc:	200001a4 	.word	0x200001a4
     700:	200001a0 	.word	0x200001a0
     704:	20000198 	.word	0x20000198
     708:	00000641 	.word	0x00000641
     70c:	20000118 	.word	0x20000118
     710:	000007ad 	.word	0x000007ad
     714:	00002e01 	.word	0x00002e01
     718:	00004365 	.word	0x00004365

0000071c <udi_cdc_data_enable>:
{
     71c:	b570      	push	{r4, r5, r6, lr}
	udi_cdc_nb_data_enabled = 0;
     71e:	2400      	movs	r4, #0
     720:	4b15      	ldr	r3, [pc, #84]	; (778 <udi_cdc_data_enable+0x5c>)
     722:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
     724:	4b15      	ldr	r3, [pc, #84]	; (77c <udi_cdc_data_enable+0x60>)
     726:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_both_buf_to_send[port] = false;
     728:	4b15      	ldr	r3, [pc, #84]	; (780 <udi_cdc_data_enable+0x64>)
     72a:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_sel[port] = 0;
     72c:	4b15      	ldr	r3, [pc, #84]	; (784 <udi_cdc_data_enable+0x68>)
     72e:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][0] = 0;
     730:	4b15      	ldr	r3, [pc, #84]	; (788 <udi_cdc_data_enable+0x6c>)
     732:	2500      	movs	r5, #0
     734:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][1] = 0;
     736:	805c      	strh	r4, [r3, #2]
	udi_cdc_tx_sof_num[port] = 0;
     738:	4b14      	ldr	r3, [pc, #80]	; (78c <udi_cdc_data_enable+0x70>)
     73a:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_send(port);
     73c:	2000      	movs	r0, #0
     73e:	4b14      	ldr	r3, [pc, #80]	; (790 <udi_cdc_data_enable+0x74>)
     740:	4798      	blx	r3
	udi_cdc_rx_trans_ongoing[port] = false;
     742:	4b14      	ldr	r3, [pc, #80]	; (794 <udi_cdc_data_enable+0x78>)
     744:	701d      	strb	r5, [r3, #0]
	udi_cdc_rx_buf_sel[port] = 0;
     746:	4b14      	ldr	r3, [pc, #80]	; (798 <udi_cdc_data_enable+0x7c>)
     748:	701d      	strb	r5, [r3, #0]
	udi_cdc_rx_buf_nb[port][0] = 0;
     74a:	4b14      	ldr	r3, [pc, #80]	; (79c <udi_cdc_data_enable+0x80>)
     74c:	801c      	strh	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][1] = 0;
     74e:	805c      	strh	r4, [r3, #2]
	udi_cdc_rx_pos[port] = 0;
     750:	4b13      	ldr	r3, [pc, #76]	; (7a0 <udi_cdc_data_enable+0x84>)
     752:	801c      	strh	r4, [r3, #0]
	if (!udi_cdc_rx_start(port)) {
     754:	2000      	movs	r0, #0
     756:	4b13      	ldr	r3, [pc, #76]	; (7a4 <udi_cdc_data_enable+0x88>)
     758:	4798      	blx	r3
     75a:	2800      	cmp	r0, #0
     75c:	d007      	beq.n	76e <udi_cdc_data_enable+0x52>
	udi_cdc_nb_data_enabled++;
     75e:	4a06      	ldr	r2, [pc, #24]	; (778 <udi_cdc_data_enable+0x5c>)
     760:	7813      	ldrb	r3, [r2, #0]
     762:	3301      	adds	r3, #1
     764:	b2db      	uxtb	r3, r3
     766:	7013      	strb	r3, [r2, #0]
	if (udi_cdc_nb_data_enabled == UDI_CDC_PORT_NB) {
     768:	7813      	ldrb	r3, [r2, #0]
     76a:	2b01      	cmp	r3, #1
     76c:	d000      	beq.n	770 <udi_cdc_data_enable+0x54>
}
     76e:	bd70      	pop	{r4, r5, r6, pc}
		udi_cdc_data_running = true;
     770:	2201      	movs	r2, #1
     772:	4b0d      	ldr	r3, [pc, #52]	; (7a8 <udi_cdc_data_enable+0x8c>)
     774:	701a      	strb	r2, [r3, #0]
     776:	e7fa      	b.n	76e <udi_cdc_data_enable+0x52>
     778:	20000114 	.word	0x20000114
     77c:	20000240 	.word	0x20000240
     780:	200001b0 	.word	0x200001b0
     784:	20000238 	.word	0x20000238
     788:	20000234 	.word	0x20000234
     78c:	2000023c 	.word	0x2000023c
     790:	000002a1 	.word	0x000002a1
     794:	200001a4 	.word	0x200001a4
     798:	2000019c 	.word	0x2000019c
     79c:	20000198 	.word	0x20000198
     7a0:	200001a0 	.word	0x200001a0
     7a4:	00000655 	.word	0x00000655
     7a8:	2000010a 	.word	0x2000010a

000007ac <udi_cdc_data_received>:
{
     7ac:	b510      	push	{r4, lr}
     7ae:	b082      	sub	sp, #8
     7b0:	0014      	movs	r4, r2
	if (UDD_EP_TRANSFER_OK != status) {
     7b2:	2800      	cmp	r0, #0
     7b4:	d110      	bne.n	7d8 <udi_cdc_data_received+0x2c>
	buf_sel_trans = (udi_cdc_rx_buf_sel[port]==0)?1:0;
     7b6:	4b0f      	ldr	r3, [pc, #60]	; (7f4 <udi_cdc_data_received+0x48>)
     7b8:	781a      	ldrb	r2, [r3, #0]
     7ba:	4253      	negs	r3, r2
     7bc:	415a      	adcs	r2, r3
     7be:	b2d2      	uxtb	r2, r2
	if (!n) {
     7c0:	2900      	cmp	r1, #0
     7c2:	d00b      	beq.n	7dc <udi_cdc_data_received+0x30>
	udi_cdc_rx_buf_nb[port][buf_sel_trans] = n;
     7c4:	b289      	uxth	r1, r1
     7c6:	0052      	lsls	r2, r2, #1
     7c8:	4b0b      	ldr	r3, [pc, #44]	; (7f8 <udi_cdc_data_received+0x4c>)
     7ca:	52d1      	strh	r1, [r2, r3]
	udi_cdc_rx_trans_ongoing[port] = false;
     7cc:	2200      	movs	r2, #0
     7ce:	4b0b      	ldr	r3, [pc, #44]	; (7fc <udi_cdc_data_received+0x50>)
     7d0:	701a      	strb	r2, [r3, #0]
	udi_cdc_rx_start(port);
     7d2:	2000      	movs	r0, #0
     7d4:	4b0a      	ldr	r3, [pc, #40]	; (800 <udi_cdc_data_received+0x54>)
     7d6:	4798      	blx	r3
}
     7d8:	b002      	add	sp, #8
     7da:	bd10      	pop	{r4, pc}
				udi_cdc_rx_buf[port][buf_sel_trans],
     7dc:	0192      	lsls	r2, r2, #6
     7de:	4b09      	ldr	r3, [pc, #36]	; (804 <udi_cdc_data_received+0x58>)
     7e0:	189a      	adds	r2, r3, r2
		udd_ep_run( ep,
     7e2:	4b09      	ldr	r3, [pc, #36]	; (808 <udi_cdc_data_received+0x5c>)
     7e4:	9300      	str	r3, [sp, #0]
     7e6:	2340      	movs	r3, #64	; 0x40
     7e8:	3101      	adds	r1, #1
     7ea:	0020      	movs	r0, r4
     7ec:	4c07      	ldr	r4, [pc, #28]	; (80c <udi_cdc_data_received+0x60>)
     7ee:	47a0      	blx	r4
		return;
     7f0:	e7f2      	b.n	7d8 <udi_cdc_data_received+0x2c>
     7f2:	46c0      	nop			; (mov r8, r8)
     7f4:	2000019c 	.word	0x2000019c
     7f8:	20000198 	.word	0x20000198
     7fc:	200001a4 	.word	0x200001a4
     800:	00000655 	.word	0x00000655
     804:	20000118 	.word	0x20000118
     808:	000007ad 	.word	0x000007ad
     80c:	00002e01 	.word	0x00002e01

00000810 <udi_cdc_is_rx_ready>:

bool udi_cdc_is_rx_ready(void)
{
     810:	b510      	push	{r4, lr}
	return udi_cdc_multi_is_rx_ready(0);
     812:	2000      	movs	r0, #0
     814:	4b01      	ldr	r3, [pc, #4]	; (81c <udi_cdc_is_rx_ready+0xc>)
     816:	4798      	blx	r3
}
     818:	bd10      	pop	{r4, pc}
     81a:	46c0      	nop			; (mov r8, r8)
     81c:	00000641 	.word	0x00000641

00000820 <udi_cdc_multi_getc>:

int udi_cdc_multi_getc(uint8_t port)
{
     820:	b5f0      	push	{r4, r5, r6, r7, lr}
     822:	46d6      	mov	lr, sl
     824:	464f      	mov	r7, r9
     826:	4646      	mov	r6, r8
     828:	b5c0      	push	{r6, r7, lr}
     82a:	b082      	sub	sp, #8

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
     82c:	4b27      	ldr	r3, [pc, #156]	; (8cc <udi_cdc_multi_getc+0xac>)
     82e:	799b      	ldrb	r3, [r3, #6]
     830:	3b09      	subs	r3, #9
     832:	425a      	negs	r2, r3
     834:	4153      	adcs	r3, r2
     836:	b2db      	uxtb	r3, r3
     838:	4699      	mov	r9, r3
	int rx_data = 0;
     83a:	2300      	movs	r3, #0
     83c:	469c      	mov	ip, r3
	cpu_irq_disable();
     83e:	4b24      	ldr	r3, [pc, #144]	; (8d0 <udi_cdc_multi_getc+0xb0>)
     840:	4698      	mov	r8, r3
     842:	2700      	movs	r7, #0

udi_cdc_getc_process_one_byte:
	// Check available data
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
     844:	4e23      	ldr	r6, [pc, #140]	; (8d4 <udi_cdc_multi_getc+0xb4>)
	buf_sel = udi_cdc_rx_buf_sel[port];
     846:	4c24      	ldr	r4, [pc, #144]	; (8d8 <udi_cdc_multi_getc+0xb8>)
     848:	e005      	b.n	856 <udi_cdc_multi_getc+0x36>
	again = pos >= udi_cdc_rx_buf_nb[port][buf_sel];
	cpu_irq_restore(flags);
	while (again) {
     84a:	428b      	cmp	r3, r1
     84c:	d329      	bcc.n	8a2 <udi_cdc_multi_getc+0x82>
		if (!udi_cdc_data_running) {
     84e:	4b23      	ldr	r3, [pc, #140]	; (8dc <udi_cdc_multi_getc+0xbc>)
     850:	781b      	ldrb	r3, [r3, #0]
     852:	2b00      	cmp	r3, #0
     854:	d01d      	beq.n	892 <udi_cdc_multi_getc+0x72>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     856:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     85a:	425a      	negs	r2, r3
     85c:	4153      	adcs	r3, r2
     85e:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     860:	b672      	cpsid	i
     862:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     866:	4643      	mov	r3, r8
     868:	701f      	strb	r7, [r3, #0]
	return flags;
     86a:	9801      	ldr	r0, [sp, #4]
	pos = udi_cdc_rx_pos[port];
     86c:	8833      	ldrh	r3, [r6, #0]
     86e:	b29b      	uxth	r3, r3
	buf_sel = udi_cdc_rx_buf_sel[port];
     870:	7822      	ldrb	r2, [r4, #0]
     872:	b2d2      	uxtb	r2, r2
	again = pos >= udi_cdc_rx_buf_nb[port][buf_sel];
     874:	0055      	lsls	r5, r2, #1
     876:	491a      	ldr	r1, [pc, #104]	; (8e0 <udi_cdc_multi_getc+0xc0>)
     878:	5a69      	ldrh	r1, [r5, r1]
     87a:	b289      	uxth	r1, r1
	if (cpu_irq_is_enabled_flags(flags))
     87c:	2800      	cmp	r0, #0
     87e:	d0e4      	beq.n	84a <udi_cdc_multi_getc+0x2a>
		cpu_irq_enable();
     880:	2001      	movs	r0, #1
     882:	4682      	mov	sl, r0
     884:	4812      	ldr	r0, [pc, #72]	; (8d0 <udi_cdc_multi_getc+0xb0>)
     886:	4655      	mov	r5, sl
     888:	7005      	strb	r5, [r0, #0]
     88a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     88e:	b662      	cpsie	i
     890:	e7db      	b.n	84a <udi_cdc_multi_getc+0x2a>
			return 0;
     892:	2500      	movs	r5, #0
		b_databit_9 = false;
		rx_data = rx_data << 8;
		goto udi_cdc_getc_process_one_byte;
	}
	return rx_data;
}
     894:	0028      	movs	r0, r5
     896:	b002      	add	sp, #8
     898:	bc1c      	pop	{r2, r3, r4}
     89a:	4690      	mov	r8, r2
     89c:	4699      	mov	r9, r3
     89e:	46a2      	mov	sl, r4
     8a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	rx_data |= udi_cdc_rx_buf[port][buf_sel][pos];
     8a2:	0192      	lsls	r2, r2, #6
     8a4:	490f      	ldr	r1, [pc, #60]	; (8e4 <udi_cdc_multi_getc+0xc4>)
     8a6:	188a      	adds	r2, r1, r2
     8a8:	5cd2      	ldrb	r2, [r2, r3]
     8aa:	4665      	mov	r5, ip
     8ac:	4315      	orrs	r5, r2
	udi_cdc_rx_pos[port] = pos+1;
     8ae:	3301      	adds	r3, #1
     8b0:	b29b      	uxth	r3, r3
     8b2:	4a08      	ldr	r2, [pc, #32]	; (8d4 <udi_cdc_multi_getc+0xb4>)
     8b4:	8013      	strh	r3, [r2, #0]
	udi_cdc_rx_start(port);
     8b6:	2000      	movs	r0, #0
     8b8:	4b0b      	ldr	r3, [pc, #44]	; (8e8 <udi_cdc_multi_getc+0xc8>)
     8ba:	4798      	blx	r3
	if (b_databit_9) {
     8bc:	464b      	mov	r3, r9
     8be:	2b00      	cmp	r3, #0
     8c0:	d0e8      	beq.n	894 <udi_cdc_multi_getc+0x74>
		rx_data = rx_data << 8;
     8c2:	022b      	lsls	r3, r5, #8
     8c4:	469c      	mov	ip, r3
		b_databit_9 = false;
     8c6:	2300      	movs	r3, #0
     8c8:	4699      	mov	r9, r3
		goto udi_cdc_getc_process_one_byte;
     8ca:	e7c4      	b.n	856 <udi_cdc_multi_getc+0x36>
     8cc:	2000010c 	.word	0x2000010c
     8d0:	200000e8 	.word	0x200000e8
     8d4:	200001a0 	.word	0x200001a0
     8d8:	2000019c 	.word	0x2000019c
     8dc:	2000010a 	.word	0x2000010a
     8e0:	20000198 	.word	0x20000198
     8e4:	20000118 	.word	0x20000118
     8e8:	00000655 	.word	0x00000655

000008ec <udi_cdc_getc>:

int udi_cdc_getc(void)
{
     8ec:	b510      	push	{r4, lr}
	return udi_cdc_multi_getc(0);
     8ee:	2000      	movs	r0, #0
     8f0:	4b01      	ldr	r3, [pc, #4]	; (8f8 <udi_cdc_getc+0xc>)
     8f2:	4798      	blx	r3
}
     8f4:	bd10      	pop	{r4, pc}
     8f6:	46c0      	nop			; (mov r8, r8)
     8f8:	00000821 	.word	0x00000821

000008fc <udi_cdc_multi_get_free_tx_buffer>:
{
	return udi_cdc_multi_read_buf(0, buf, size);
}

iram_size_t udi_cdc_multi_get_free_tx_buffer(uint8_t port)
{
     8fc:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     8fe:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     902:	425a      	negs	r2, r3
     904:	4153      	adcs	r3, r2
     906:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     908:	b672      	cpsid	i
     90a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     90e:	2200      	movs	r2, #0
     910:	4b14      	ldr	r3, [pc, #80]	; (964 <udi_cdc_multi_get_free_tx_buffer+0x68>)
     912:	701a      	strb	r2, [r3, #0]
	return flags;
     914:	9901      	ldr	r1, [sp, #4]
#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
     916:	4b14      	ldr	r3, [pc, #80]	; (968 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
     918:	781b      	ldrb	r3, [r3, #0]
     91a:	b2db      	uxtb	r3, r3
	buf_sel_nb = udi_cdc_tx_buf_nb[port][buf_sel];
     91c:	0058      	lsls	r0, r3, #1
     91e:	4a13      	ldr	r2, [pc, #76]	; (96c <udi_cdc_multi_get_free_tx_buffer+0x70>)
     920:	5a82      	ldrh	r2, [r0, r2]
	if (buf_sel_nb == UDI_CDC_TX_BUFFERS) {
     922:	2a40      	cmp	r2, #64	; 0x40
     924:	d00b      	beq.n	93e <udi_cdc_multi_get_free_tx_buffer+0x42>
			udi_cdc_tx_both_buf_to_send[port] = true;
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
			buf_sel_nb = 0;
		}
	}
	retval = UDI_CDC_TX_BUFFERS - buf_sel_nb;  
     926:	2040      	movs	r0, #64	; 0x40
     928:	1a80      	subs	r0, r0, r2
	if (cpu_irq_is_enabled_flags(flags))
     92a:	2900      	cmp	r1, #0
     92c:	d005      	beq.n	93a <udi_cdc_multi_get_free_tx_buffer+0x3e>
		cpu_irq_enable();
     92e:	2201      	movs	r2, #1
     930:	4b0c      	ldr	r3, [pc, #48]	; (964 <udi_cdc_multi_get_free_tx_buffer+0x68>)
     932:	701a      	strb	r2, [r3, #0]
     934:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     938:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return retval;
}
     93a:	b002      	add	sp, #8
     93c:	4770      	bx	lr
		if ((!udi_cdc_tx_trans_ongoing[port])
     93e:	480c      	ldr	r0, [pc, #48]	; (970 <udi_cdc_multi_get_free_tx_buffer+0x74>)
     940:	7800      	ldrb	r0, [r0, #0]
     942:	2800      	cmp	r0, #0
     944:	d1ef      	bne.n	926 <udi_cdc_multi_get_free_tx_buffer+0x2a>
			&& (!udi_cdc_tx_both_buf_to_send[port])) {
     946:	480b      	ldr	r0, [pc, #44]	; (974 <udi_cdc_multi_get_free_tx_buffer+0x78>)
     948:	7800      	ldrb	r0, [r0, #0]
     94a:	2800      	cmp	r0, #0
     94c:	d1eb      	bne.n	926 <udi_cdc_multi_get_free_tx_buffer+0x2a>
			udi_cdc_tx_both_buf_to_send[port] = true;
     94e:	3001      	adds	r0, #1
     950:	4a08      	ldr	r2, [pc, #32]	; (974 <udi_cdc_multi_get_free_tx_buffer+0x78>)
     952:	7010      	strb	r0, [r2, #0]
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
     954:	425a      	negs	r2, r3
     956:	4153      	adcs	r3, r2
     958:	b2db      	uxtb	r3, r3
     95a:	4a03      	ldr	r2, [pc, #12]	; (968 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
     95c:	7013      	strb	r3, [r2, #0]
			buf_sel_nb = 0;
     95e:	2200      	movs	r2, #0
     960:	e7e1      	b.n	926 <udi_cdc_multi_get_free_tx_buffer+0x2a>
     962:	46c0      	nop			; (mov r8, r8)
     964:	200000e8 	.word	0x200000e8
     968:	20000238 	.word	0x20000238
     96c:	20000234 	.word	0x20000234
     970:	20000240 	.word	0x20000240
     974:	200001b0 	.word	0x200001b0

00000978 <udi_cdc_multi_is_tx_ready>:
{
	return udi_cdc_multi_get_free_tx_buffer(0);
}

bool udi_cdc_multi_is_tx_ready(uint8_t port)
{
     978:	b510      	push	{r4, lr}
	return (udi_cdc_multi_get_free_tx_buffer(port) != 0);
     97a:	4b03      	ldr	r3, [pc, #12]	; (988 <udi_cdc_multi_is_tx_ready+0x10>)
     97c:	4798      	blx	r3
     97e:	1e43      	subs	r3, r0, #1
     980:	4198      	sbcs	r0, r3
     982:	b2c0      	uxtb	r0, r0
}
     984:	bd10      	pop	{r4, pc}
     986:	46c0      	nop			; (mov r8, r8)
     988:	000008fd 	.word	0x000008fd

0000098c <udi_cdc_is_tx_ready>:

bool udi_cdc_is_tx_ready(void)
{
     98c:	b510      	push	{r4, lr}
	return udi_cdc_multi_is_tx_ready(0);
     98e:	2000      	movs	r0, #0
     990:	4b01      	ldr	r3, [pc, #4]	; (998 <udi_cdc_is_tx_ready+0xc>)
     992:	4798      	blx	r3
}
     994:	bd10      	pop	{r4, pc}
     996:	46c0      	nop			; (mov r8, r8)
     998:	00000979 	.word	0x00000979

0000099c <udi_cdc_multi_putc>:

int udi_cdc_multi_putc(uint8_t port, int value)
{
     99c:	b5f0      	push	{r4, r5, r6, r7, lr}
     99e:	46de      	mov	lr, fp
     9a0:	4657      	mov	r7, sl
     9a2:	464e      	mov	r6, r9
     9a4:	4645      	mov	r5, r8
     9a6:	b5e0      	push	{r5, r6, r7, lr}
     9a8:	b083      	sub	sp, #12
     9aa:	000c      	movs	r4, r1

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
     9ac:	4b22      	ldr	r3, [pc, #136]	; (a38 <udi_cdc_multi_putc+0x9c>)
     9ae:	799d      	ldrb	r5, [r3, #6]
     9b0:	3d09      	subs	r5, #9
     9b2:	426b      	negs	r3, r5
     9b4:	415d      	adcs	r5, r3
     9b6:	b2ed      	uxtb	r5, r5

udi_cdc_putc_process_one_byte:
	// Check available space
	if (!udi_cdc_multi_is_tx_ready(port)) {
     9b8:	4e20      	ldr	r6, [pc, #128]	; (a3c <udi_cdc_multi_putc+0xa0>)
	cpu_irq_disable();
     9ba:	4b21      	ldr	r3, [pc, #132]	; (a40 <udi_cdc_multi_putc+0xa4>)
     9bc:	4698      	mov	r8, r3
		goto udi_cdc_putc_process_one_byte;
	}

	// Write value
	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
     9be:	4b21      	ldr	r3, [pc, #132]	; (a44 <udi_cdc_multi_putc+0xa8>)
     9c0:	469a      	mov	sl, r3
     9c2:	e027      	b.n	a14 <udi_cdc_multi_putc+0x78>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     9c4:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     9c8:	425a      	negs	r2, r3
     9ca:	4153      	adcs	r3, r2
     9cc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     9ce:	b672      	cpsid	i
     9d0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     9d4:	2300      	movs	r3, #0
     9d6:	4642      	mov	r2, r8
     9d8:	7013      	strb	r3, [r2, #0]
	return flags;
     9da:	9b01      	ldr	r3, [sp, #4]
     9dc:	469b      	mov	fp, r3
     9de:	4653      	mov	r3, sl
     9e0:	781b      	ldrb	r3, [r3, #0]
     9e2:	b2db      	uxtb	r3, r3
	udi_cdc_tx_buf[port][buf_sel][udi_cdc_tx_buf_nb[port][buf_sel]++] = value;
     9e4:	4a18      	ldr	r2, [pc, #96]	; (a48 <udi_cdc_multi_putc+0xac>)
     9e6:	4694      	mov	ip, r2
     9e8:	005f      	lsls	r7, r3, #1
     9ea:	5ab9      	ldrh	r1, [r7, r2]
     9ec:	1c4a      	adds	r2, r1, #1
     9ee:	4660      	mov	r0, ip
     9f0:	523a      	strh	r2, [r7, r0]
     9f2:	019b      	lsls	r3, r3, #6
     9f4:	4a15      	ldr	r2, [pc, #84]	; (a4c <udi_cdc_multi_putc+0xb0>)
     9f6:	18d3      	adds	r3, r2, r3
     9f8:	545c      	strb	r4, [r3, r1]
	if (cpu_irq_is_enabled_flags(flags))
     9fa:	465b      	mov	r3, fp
     9fc:	2b00      	cmp	r3, #0
     9fe:	d005      	beq.n	a0c <udi_cdc_multi_putc+0x70>
		cpu_irq_enable();
     a00:	2201      	movs	r2, #1
     a02:	4b0f      	ldr	r3, [pc, #60]	; (a40 <udi_cdc_multi_putc+0xa4>)
     a04:	701a      	strb	r2, [r3, #0]
     a06:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     a0a:	b662      	cpsie	i
	cpu_irq_restore(flags);

	if (b_databit_9) {
     a0c:	2d00      	cmp	r5, #0
     a0e:	d010      	beq.n	a32 <udi_cdc_multi_putc+0x96>
		// Send MSB
		b_databit_9 = false;
		value = value >> 8;
     a10:	1224      	asrs	r4, r4, #8
		b_databit_9 = false;
     a12:	2500      	movs	r5, #0
	if (!udi_cdc_multi_is_tx_ready(port)) {
     a14:	2000      	movs	r0, #0
     a16:	47b0      	blx	r6
     a18:	2800      	cmp	r0, #0
     a1a:	d1d3      	bne.n	9c4 <udi_cdc_multi_putc+0x28>
		if (!udi_cdc_data_running) {
     a1c:	4b0c      	ldr	r3, [pc, #48]	; (a50 <udi_cdc_multi_putc+0xb4>)
     a1e:	781b      	ldrb	r3, [r3, #0]
     a20:	2b00      	cmp	r3, #0
     a22:	d1f7      	bne.n	a14 <udi_cdc_multi_putc+0x78>
		goto udi_cdc_putc_process_one_byte;
	}
	return true;
}
     a24:	b003      	add	sp, #12
     a26:	bc3c      	pop	{r2, r3, r4, r5}
     a28:	4690      	mov	r8, r2
     a2a:	4699      	mov	r9, r3
     a2c:	46a2      	mov	sl, r4
     a2e:	46ab      	mov	fp, r5
     a30:	bdf0      	pop	{r4, r5, r6, r7, pc}
	return true;
     a32:	2001      	movs	r0, #1
     a34:	e7f6      	b.n	a24 <udi_cdc_multi_putc+0x88>
     a36:	46c0      	nop			; (mov r8, r8)
     a38:	2000010c 	.word	0x2000010c
     a3c:	00000979 	.word	0x00000979
     a40:	200000e8 	.word	0x200000e8
     a44:	20000238 	.word	0x20000238
     a48:	20000234 	.word	0x20000234
     a4c:	200001b4 	.word	0x200001b4
     a50:	2000010a 	.word	0x2000010a

00000a54 <udi_cdc_putc>:

int udi_cdc_putc(int value)
{
     a54:	b510      	push	{r4, lr}
     a56:	0001      	movs	r1, r0
	return udi_cdc_multi_putc(0, value);
     a58:	2000      	movs	r0, #0
     a5a:	4b01      	ldr	r3, [pc, #4]	; (a60 <udi_cdc_putc+0xc>)
     a5c:	4798      	blx	r3
}
     a5e:	bd10      	pop	{r4, pc}
     a60:	0000099d 	.word	0x0000099d

00000a64 <udc_next_desc_in_iface>:
 * \return address of specific descriptor found
 * \return NULL if it is the end of global interface descriptor
 */
static usb_conf_desc_t UDC_DESC_STORAGE *udc_next_desc_in_iface(usb_conf_desc_t
		UDC_DESC_STORAGE * desc, uint8_t desc_id)
{
     a64:	b510      	push	{r4, lr}
			udc_ptr_conf->desc +
     a66:	4b11      	ldr	r3, [pc, #68]	; (aac <udc_next_desc_in_iface+0x48>)
     a68:	681b      	ldr	r3, [r3, #0]
     a6a:	681a      	ldr	r2, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
     a6c:	7894      	ldrb	r4, [r2, #2]
     a6e:	78d3      	ldrb	r3, [r2, #3]
     a70:	021b      	lsls	r3, r3, #8
     a72:	4323      	orrs	r3, r4
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
     a74:	18d2      	adds	r2, r2, r3
	usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;

	ptr_eof_desc = udc_get_eof_conf();
	// Go to next descriptor
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
			desc->bLength);
     a76:	7803      	ldrb	r3, [r0, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
     a78:	18c0      	adds	r0, r0, r3
	// Check the end of configuration descriptor
	while (ptr_eof_desc > desc) {
     a7a:	4290      	cmp	r0, r2
     a7c:	d210      	bcs.n	aa0 <udc_next_desc_in_iface+0x3c>
		// If new interface descriptor is found,
		// then it is the end of the current global interface descriptor
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
     a7e:	7843      	ldrb	r3, [r0, #1]
     a80:	2b04      	cmp	r3, #4
     a82:	d00f      	beq.n	aa4 <udc_next_desc_in_iface+0x40>
			break; // End of global interface descriptor
		}
		if (desc_id == desc->bDescriptorType) {
     a84:	428b      	cmp	r3, r1
     a86:	d00a      	beq.n	a9e <udc_next_desc_in_iface+0x3a>
			return desc; // Specific descriptor found
		}
		// Go to next descriptor
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
				desc->bLength);
     a88:	7803      	ldrb	r3, [r0, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
     a8a:	18c0      	adds	r0, r0, r3
	while (ptr_eof_desc > desc) {
     a8c:	4290      	cmp	r0, r2
     a8e:	d205      	bcs.n	a9c <udc_next_desc_in_iface+0x38>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
     a90:	7843      	ldrb	r3, [r0, #1]
     a92:	2b04      	cmp	r3, #4
     a94:	d008      	beq.n	aa8 <udc_next_desc_in_iface+0x44>
		if (desc_id == desc->bDescriptorType) {
     a96:	428b      	cmp	r3, r1
     a98:	d1f6      	bne.n	a88 <udc_next_desc_in_iface+0x24>
     a9a:	e000      	b.n	a9e <udc_next_desc_in_iface+0x3a>
	}
	return NULL; // No specific descriptor found
     a9c:	2000      	movs	r0, #0
}
     a9e:	bd10      	pop	{r4, pc}
	return NULL; // No specific descriptor found
     aa0:	2000      	movs	r0, #0
     aa2:	e7fc      	b.n	a9e <udc_next_desc_in_iface+0x3a>
     aa4:	2000      	movs	r0, #0
     aa6:	e7fa      	b.n	a9e <udc_next_desc_in_iface+0x3a>
     aa8:	2000      	movs	r0, #0
     aaa:	e7f8      	b.n	a9e <udc_next_desc_in_iface+0x3a>
     aac:	2000025c 	.word	0x2000025c

00000ab0 <udc_valid_address>:
/**
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
     ab0:	b510      	push	{r4, lr}
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
     ab2:	4b03      	ldr	r3, [pc, #12]	; (ac0 <udc_valid_address+0x10>)
     ab4:	885b      	ldrh	r3, [r3, #2]
     ab6:	207f      	movs	r0, #127	; 0x7f
     ab8:	4018      	ands	r0, r3
     aba:	4b02      	ldr	r3, [pc, #8]	; (ac4 <udc_valid_address+0x14>)
     abc:	4798      	blx	r3
}
     abe:	bd10      	pop	{r4, pc}
     ac0:	200005cc 	.word	0x200005cc
     ac4:	00002fd9 	.word	0x00002fd9

00000ac8 <udc_update_iface_desc>:
{
     ac8:	b570      	push	{r4, r5, r6, lr}
	if (0 == udc_num_configuration) {
     aca:	4b19      	ldr	r3, [pc, #100]	; (b30 <udc_update_iface_desc+0x68>)
     acc:	781b      	ldrb	r3, [r3, #0]
		return false;
     ace:	2200      	movs	r2, #0
	if (0 == udc_num_configuration) {
     ad0:	2b00      	cmp	r3, #0
     ad2:	d029      	beq.n	b28 <udc_update_iface_desc+0x60>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
     ad4:	4b17      	ldr	r3, [pc, #92]	; (b34 <udc_update_iface_desc+0x6c>)
     ad6:	681b      	ldr	r3, [r3, #0]
     ad8:	681b      	ldr	r3, [r3, #0]
     ada:	791c      	ldrb	r4, [r3, #4]
     adc:	4284      	cmp	r4, r0
     ade:	d923      	bls.n	b28 <udc_update_iface_desc+0x60>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
     ae0:	4a15      	ldr	r2, [pc, #84]	; (b38 <udc_update_iface_desc+0x70>)
     ae2:	6013      	str	r3, [r2, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
     ae4:	789a      	ldrb	r2, [r3, #2]
     ae6:	78dc      	ldrb	r4, [r3, #3]
     ae8:	0224      	lsls	r4, r4, #8
     aea:	4314      	orrs	r4, r2
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
     aec:	191c      	adds	r4, r3, r4
	while (ptr_end_desc >
     aee:	42a3      	cmp	r3, r4
     af0:	d21c      	bcs.n	b2c <udc_update_iface_desc+0x64>
     af2:	2500      	movs	r5, #0
     af4:	2601      	movs	r6, #1
     af6:	e007      	b.n	b08 <udc_update_iface_desc+0x40>
     af8:	4a0f      	ldr	r2, [pc, #60]	; (b38 <udc_update_iface_desc+0x70>)
     afa:	6013      	str	r3, [r2, #0]
     afc:	e00f      	b.n	b1e <udc_update_iface_desc+0x56>
				udc_ptr_iface->bLength);
     afe:	781a      	ldrb	r2, [r3, #0]
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
     b00:	189b      	adds	r3, r3, r2
     b02:	0035      	movs	r5, r6
	while (ptr_end_desc >
     b04:	42a3      	cmp	r3, r4
     b06:	d20c      	bcs.n	b22 <udc_update_iface_desc+0x5a>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
     b08:	785a      	ldrb	r2, [r3, #1]
     b0a:	2a04      	cmp	r2, #4
     b0c:	d1f7      	bne.n	afe <udc_update_iface_desc+0x36>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
     b0e:	789a      	ldrb	r2, [r3, #2]
     b10:	4282      	cmp	r2, r0
     b12:	d1f4      	bne.n	afe <udc_update_iface_desc+0x36>
     b14:	78da      	ldrb	r2, [r3, #3]
     b16:	428a      	cmp	r2, r1
     b18:	d1f1      	bne.n	afe <udc_update_iface_desc+0x36>
     b1a:	2d00      	cmp	r5, #0
     b1c:	d1ec      	bne.n	af8 <udc_update_iface_desc+0x30>
				return true; // Interface found
     b1e:	2201      	movs	r2, #1
     b20:	e002      	b.n	b28 <udc_update_iface_desc+0x60>
     b22:	4a05      	ldr	r2, [pc, #20]	; (b38 <udc_update_iface_desc+0x70>)
     b24:	6013      	str	r3, [r2, #0]
	return false; // Interface not found
     b26:	2200      	movs	r2, #0
}
     b28:	0010      	movs	r0, r2
     b2a:	bd70      	pop	{r4, r5, r6, pc}
	return false; // Interface not found
     b2c:	2200      	movs	r2, #0
     b2e:	e7fb      	b.n	b28 <udc_update_iface_desc+0x60>
     b30:	20000258 	.word	0x20000258
     b34:	2000025c 	.word	0x2000025c
     b38:	20000260 	.word	0x20000260

00000b3c <udc_iface_disable>:
{
     b3c:	b5f0      	push	{r4, r5, r6, r7, lr}
     b3e:	46c6      	mov	lr, r8
     b40:	b500      	push	{lr}
     b42:	0004      	movs	r4, r0
	if (!udc_update_iface_desc(iface_num, 0)) {
     b44:	2100      	movs	r1, #0
     b46:	4b13      	ldr	r3, [pc, #76]	; (b94 <udc_iface_disable+0x58>)
     b48:	4798      	blx	r3
     b4a:	1e05      	subs	r5, r0, #0
     b4c:	d103      	bne.n	b56 <udc_iface_disable+0x1a>
}
     b4e:	0028      	movs	r0, r5
     b50:	bc04      	pop	{r2}
     b52:	4690      	mov	r8, r2
     b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
     b56:	4b10      	ldr	r3, [pc, #64]	; (b98 <udc_iface_disable+0x5c>)
     b58:	681b      	ldr	r3, [r3, #0]
     b5a:	685b      	ldr	r3, [r3, #4]
     b5c:	00a2      	lsls	r2, r4, #2
     b5e:	58d3      	ldr	r3, [r2, r3]
     b60:	4698      	mov	r8, r3
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
     b62:	68db      	ldr	r3, [r3, #12]
     b64:	4798      	blx	r3
     b66:	0001      	movs	r1, r0
     b68:	0020      	movs	r0, r4
     b6a:	4b0a      	ldr	r3, [pc, #40]	; (b94 <udc_iface_disable+0x58>)
     b6c:	4798      	blx	r3
     b6e:	1e05      	subs	r5, r0, #0
     b70:	d0ed      	beq.n	b4e <udc_iface_disable+0x12>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
     b72:	4b0a      	ldr	r3, [pc, #40]	; (b9c <udc_iface_disable+0x60>)
     b74:	681c      	ldr	r4, [r3, #0]
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     b76:	4e0a      	ldr	r6, [pc, #40]	; (ba0 <udc_iface_disable+0x64>)
			udd_ep_free(ep_desc->bEndpointAddress);
     b78:	4f0a      	ldr	r7, [pc, #40]	; (ba4 <udc_iface_disable+0x68>)
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     b7a:	2105      	movs	r1, #5
     b7c:	0020      	movs	r0, r4
     b7e:	47b0      	blx	r6
     b80:	1e04      	subs	r4, r0, #0
			if (NULL == ep_desc) {
     b82:	d002      	beq.n	b8a <udc_iface_disable+0x4e>
			udd_ep_free(ep_desc->bEndpointAddress);
     b84:	7880      	ldrb	r0, [r0, #2]
     b86:	47b8      	blx	r7
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     b88:	e7f7      	b.n	b7a <udc_iface_disable+0x3e>
	udi_api->disable();
     b8a:	4643      	mov	r3, r8
     b8c:	685b      	ldr	r3, [r3, #4]
     b8e:	4798      	blx	r3
	return true;
     b90:	e7dd      	b.n	b4e <udc_iface_disable+0x12>
     b92:	46c0      	nop			; (mov r8, r8)
     b94:	00000ac9 	.word	0x00000ac9
     b98:	2000025c 	.word	0x2000025c
     b9c:	20000260 	.word	0x20000260
     ba0:	00000a65 	.word	0x00000a65
     ba4:	00002b19 	.word	0x00002b19

00000ba8 <udc_iface_enable>:
{
     ba8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     baa:	0005      	movs	r5, r0
	if (!udc_update_iface_desc(iface_num, setting_num)) {
     bac:	4b0f      	ldr	r3, [pc, #60]	; (bec <udc_iface_enable+0x44>)
     bae:	4798      	blx	r3
     bb0:	2800      	cmp	r0, #0
     bb2:	d019      	beq.n	be8 <udc_iface_enable+0x40>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
     bb4:	4b0e      	ldr	r3, [pc, #56]	; (bf0 <udc_iface_enable+0x48>)
     bb6:	681c      	ldr	r4, [r3, #0]
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     bb8:	4e0e      	ldr	r6, [pc, #56]	; (bf4 <udc_iface_enable+0x4c>)
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
     bba:	4f0f      	ldr	r7, [pc, #60]	; (bf8 <udc_iface_enable+0x50>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     bbc:	2105      	movs	r1, #5
     bbe:	0020      	movs	r0, r4
     bc0:	47b0      	blx	r6
     bc2:	1e04      	subs	r4, r0, #0
		if (NULL == ep_desc)
     bc4:	d009      	beq.n	bda <udc_iface_enable+0x32>
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
     bc6:	7903      	ldrb	r3, [r0, #4]
     bc8:	7942      	ldrb	r2, [r0, #5]
     bca:	0212      	lsls	r2, r2, #8
     bcc:	431a      	orrs	r2, r3
     bce:	78c1      	ldrb	r1, [r0, #3]
     bd0:	7880      	ldrb	r0, [r0, #2]
     bd2:	47b8      	blx	r7
     bd4:	2800      	cmp	r0, #0
     bd6:	d1f1      	bne.n	bbc <udc_iface_enable+0x14>
     bd8:	e006      	b.n	be8 <udc_iface_enable+0x40>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
     bda:	4b08      	ldr	r3, [pc, #32]	; (bfc <udc_iface_enable+0x54>)
     bdc:	681b      	ldr	r3, [r3, #0]
     bde:	685b      	ldr	r3, [r3, #4]
     be0:	00ad      	lsls	r5, r5, #2
     be2:	58eb      	ldr	r3, [r5, r3]
     be4:	681b      	ldr	r3, [r3, #0]
     be6:	4798      	blx	r3
}
     be8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     bea:	46c0      	nop			; (mov r8, r8)
     bec:	00000ac9 	.word	0x00000ac9
     bf0:	20000260 	.word	0x20000260
     bf4:	00000a65 	.word	0x00000a65
     bf8:	00002b71 	.word	0x00002b71
     bfc:	2000025c 	.word	0x2000025c

00000c00 <udc_start>:
{
     c00:	b510      	push	{r4, lr}
	udd_enable();
     c02:	4b01      	ldr	r3, [pc, #4]	; (c08 <udc_start+0x8>)
     c04:	4798      	blx	r3
}
     c06:	bd10      	pop	{r4, pc}
     c08:	0000313d 	.word	0x0000313d

00000c0c <udc_reset>:
{
     c0c:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
     c0e:	4b0e      	ldr	r3, [pc, #56]	; (c48 <udc_reset+0x3c>)
     c10:	781b      	ldrb	r3, [r3, #0]
     c12:	2b00      	cmp	r3, #0
     c14:	d011      	beq.n	c3a <udc_reset+0x2e>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     c16:	4b0d      	ldr	r3, [pc, #52]	; (c4c <udc_reset+0x40>)
     c18:	681b      	ldr	r3, [r3, #0]
     c1a:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
     c1c:	791b      	ldrb	r3, [r3, #4]
     c1e:	2b00      	cmp	r3, #0
     c20:	d00b      	beq.n	c3a <udc_reset+0x2e>
     c22:	2400      	movs	r4, #0
			udc_iface_disable(iface_num);
     c24:	4e0a      	ldr	r6, [pc, #40]	; (c50 <udc_reset+0x44>)
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     c26:	4d09      	ldr	r5, [pc, #36]	; (c4c <udc_reset+0x40>)
			udc_iface_disable(iface_num);
     c28:	0020      	movs	r0, r4
     c2a:	47b0      	blx	r6
				iface_num++) {
     c2c:	3401      	adds	r4, #1
     c2e:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     c30:	682b      	ldr	r3, [r5, #0]
     c32:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
     c34:	791b      	ldrb	r3, [r3, #4]
     c36:	42a3      	cmp	r3, r4
     c38:	d8f6      	bhi.n	c28 <udc_reset+0x1c>
	udc_num_configuration = 0;
     c3a:	2200      	movs	r2, #0
     c3c:	4b02      	ldr	r3, [pc, #8]	; (c48 <udc_reset+0x3c>)
     c3e:	701a      	strb	r2, [r3, #0]
	udc_device_status =
     c40:	3201      	adds	r2, #1
     c42:	4b04      	ldr	r3, [pc, #16]	; (c54 <udc_reset+0x48>)
     c44:	801a      	strh	r2, [r3, #0]
}
     c46:	bd70      	pop	{r4, r5, r6, pc}
     c48:	20000258 	.word	0x20000258
     c4c:	2000025c 	.word	0x2000025c
     c50:	00000b3d 	.word	0x00000b3d
     c54:	2000024e 	.word	0x2000024e

00000c58 <udc_sof_notify>:
{
     c58:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
     c5a:	4b0e      	ldr	r3, [pc, #56]	; (c94 <udc_sof_notify+0x3c>)
     c5c:	781b      	ldrb	r3, [r3, #0]
     c5e:	2b00      	cmp	r3, #0
     c60:	d017      	beq.n	c92 <udc_sof_notify+0x3a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     c62:	4b0d      	ldr	r3, [pc, #52]	; (c98 <udc_sof_notify+0x40>)
     c64:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
     c66:	681a      	ldr	r2, [r3, #0]
     c68:	7912      	ldrb	r2, [r2, #4]
     c6a:	2a00      	cmp	r2, #0
     c6c:	d011      	beq.n	c92 <udc_sof_notify+0x3a>
     c6e:	2400      	movs	r4, #0
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     c70:	4d09      	ldr	r5, [pc, #36]	; (c98 <udc_sof_notify+0x40>)
     c72:	e006      	b.n	c82 <udc_sof_notify+0x2a>
				iface_num++) {
     c74:	3401      	adds	r4, #1
     c76:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     c78:	682b      	ldr	r3, [r5, #0]
		for (iface_num = 0;
     c7a:	681a      	ldr	r2, [r3, #0]
     c7c:	7912      	ldrb	r2, [r2, #4]
     c7e:	42a2      	cmp	r2, r4
     c80:	d907      	bls.n	c92 <udc_sof_notify+0x3a>
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
     c82:	685b      	ldr	r3, [r3, #4]
     c84:	00a2      	lsls	r2, r4, #2
     c86:	58d3      	ldr	r3, [r2, r3]
     c88:	691b      	ldr	r3, [r3, #16]
     c8a:	2b00      	cmp	r3, #0
     c8c:	d0f2      	beq.n	c74 <udc_sof_notify+0x1c>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
     c8e:	4798      	blx	r3
     c90:	e7f0      	b.n	c74 <udc_sof_notify+0x1c>
}
     c92:	bd70      	pop	{r4, r5, r6, pc}
     c94:	20000258 	.word	0x20000258
     c98:	2000025c 	.word	0x2000025c

00000c9c <udc_process_setup>:
 * sent to a specific application callback.
 *
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
     c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
     c9e:	4baa      	ldr	r3, [pc, #680]	; (f48 <udc_process_setup+0x2ac>)
     ca0:	2200      	movs	r2, #0
     ca2:	819a      	strh	r2, [r3, #12]
	udd_g_ctrlreq.callback = NULL;
     ca4:	611a      	str	r2, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
     ca6:	615a      	str	r2, [r3, #20]

	if (Udd_setup_is_in()) {
     ca8:	781b      	ldrb	r3, [r3, #0]
     caa:	b25a      	sxtb	r2, r3
     cac:	2a00      	cmp	r2, #0
     cae:	db13      	blt.n	cd8 <udc_process_setup+0x3c>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
     cb0:	2260      	movs	r2, #96	; 0x60
     cb2:	421a      	tst	r2, r3
     cb4:	d100      	bne.n	cb8 <udc_process_setup+0x1c>
     cb6:	e0d6      	b.n	e66 <udc_process_setup+0x1ca>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
     cb8:	4ba3      	ldr	r3, [pc, #652]	; (f48 <udc_process_setup+0x2ac>)
     cba:	781a      	ldrb	r2, [r3, #0]
     cbc:	231f      	movs	r3, #31
     cbe:	4013      	ands	r3, r2
     cc0:	2b01      	cmp	r3, #1
     cc2:	d100      	bne.n	cc6 <udc_process_setup+0x2a>
     cc4:	e172      	b.n	fac <udc_process_setup+0x310>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
     cc6:	4ba0      	ldr	r3, [pc, #640]	; (f48 <udc_process_setup+0x2ac>)
     cc8:	781a      	ldrb	r2, [r3, #0]
     cca:	231f      	movs	r3, #31
     ccc:	4013      	ands	r3, r2
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
     cce:	2000      	movs	r0, #0
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
     cd0:	2b02      	cmp	r3, #2
     cd2:	d100      	bne.n	cd6 <udc_process_setup+0x3a>
     cd4:	e1c8      	b.n	1068 <udc_process_setup+0x3cc>
#endif
}
     cd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
     cd8:	4a9b      	ldr	r2, [pc, #620]	; (f48 <udc_process_setup+0x2ac>)
     cda:	88d2      	ldrh	r2, [r2, #6]
			return false; // Error from USB host
     cdc:	2000      	movs	r0, #0
		if (udd_g_ctrlreq.req.wLength == 0) {
     cde:	2a00      	cmp	r2, #0
     ce0:	d0f9      	beq.n	cd6 <udc_process_setup+0x3a>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
     ce2:	2160      	movs	r1, #96	; 0x60
     ce4:	4219      	tst	r1, r3
     ce6:	d1e7      	bne.n	cb8 <udc_process_setup+0x1c>
     ce8:	211f      	movs	r1, #31
     cea:	400b      	ands	r3, r1
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
     cec:	d108      	bne.n	d00 <udc_process_setup+0x64>
			switch (udd_g_ctrlreq.req.bRequest) {
     cee:	4996      	ldr	r1, [pc, #600]	; (f48 <udc_process_setup+0x2ac>)
     cf0:	7849      	ldrb	r1, [r1, #1]
     cf2:	2906      	cmp	r1, #6
     cf4:	d023      	beq.n	d3e <udc_process_setup+0xa2>
     cf6:	2908      	cmp	r1, #8
     cf8:	d100      	bne.n	cfc <udc_process_setup+0x60>
     cfa:	e083      	b.n	e04 <udc_process_setup+0x168>
     cfc:	2900      	cmp	r1, #0
     cfe:	d017      	beq.n	d30 <udc_process_setup+0x94>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
     d00:	2b01      	cmp	r3, #1
     d02:	d100      	bne.n	d06 <udc_process_setup+0x6a>
     d04:	e086      	b.n	e14 <udc_process_setup+0x178>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
     d06:	2b02      	cmp	r3, #2
     d08:	d1d6      	bne.n	cb8 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
     d0a:	4b8f      	ldr	r3, [pc, #572]	; (f48 <udc_process_setup+0x2ac>)
     d0c:	785b      	ldrb	r3, [r3, #1]
	return false;
     d0e:	2000      	movs	r0, #0
			switch (udd_g_ctrlreq.req.bRequest) {
     d10:	2b00      	cmp	r3, #0
     d12:	d000      	beq.n	d16 <udc_process_setup+0x7a>
     d14:	e1a4      	b.n	1060 <udc_process_setup+0x3c4>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
     d16:	2a02      	cmp	r2, #2
     d18:	d1d5      	bne.n	cc6 <udc_process_setup+0x2a>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
     d1a:	4b8b      	ldr	r3, [pc, #556]	; (f48 <udc_process_setup+0x2ac>)
     d1c:	7918      	ldrb	r0, [r3, #4]
     d1e:	4b8b      	ldr	r3, [pc, #556]	; (f4c <udc_process_setup+0x2b0>)
     d20:	4798      	blx	r3
     d22:	4b8b      	ldr	r3, [pc, #556]	; (f50 <udc_process_setup+0x2b4>)
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
     d24:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
     d26:	2102      	movs	r1, #2
     d28:	0018      	movs	r0, r3
     d2a:	4b8a      	ldr	r3, [pc, #552]	; (f54 <udc_process_setup+0x2b8>)
     d2c:	4798      	blx	r3
     d2e:	e0fb      	b.n	f28 <udc_process_setup+0x28c>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
     d30:	2a02      	cmp	r2, #2
     d32:	d1c8      	bne.n	cc6 <udc_process_setup+0x2a>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
     d34:	3102      	adds	r1, #2
     d36:	4888      	ldr	r0, [pc, #544]	; (f58 <udc_process_setup+0x2bc>)
     d38:	4b86      	ldr	r3, [pc, #536]	; (f54 <udc_process_setup+0x2b8>)
     d3a:	4798      	blx	r3
     d3c:	e0f4      	b.n	f28 <udc_process_setup+0x28c>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
     d3e:	4b82      	ldr	r3, [pc, #520]	; (f48 <udc_process_setup+0x2ac>)
     d40:	885a      	ldrh	r2, [r3, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
     d42:	0a13      	lsrs	r3, r2, #8
     d44:	2b02      	cmp	r3, #2
     d46:	d023      	beq.n	d90 <udc_process_setup+0xf4>
     d48:	b2d9      	uxtb	r1, r3
     d4a:	2902      	cmp	r1, #2
     d4c:	d90f      	bls.n	d6e <udc_process_setup+0xd2>
     d4e:	2b03      	cmp	r3, #3
     d50:	d034      	beq.n	dbc <udc_process_setup+0x120>
     d52:	2b0f      	cmp	r3, #15
     d54:	d000      	beq.n	d58 <udc_process_setup+0xbc>
     d56:	e180      	b.n	105a <udc_process_setup+0x3be>
		if (udc_config.conf_bos == NULL) {
     d58:	4b80      	ldr	r3, [pc, #512]	; (f5c <udc_process_setup+0x2c0>)
     d5a:	6898      	ldr	r0, [r3, #8]
     d5c:	2800      	cmp	r0, #0
     d5e:	d0b2      	beq.n	cc6 <udc_process_setup+0x2a>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
     d60:	7883      	ldrb	r3, [r0, #2]
     d62:	78c1      	ldrb	r1, [r0, #3]
     d64:	0209      	lsls	r1, r1, #8
     d66:	4319      	orrs	r1, r3
     d68:	4b7a      	ldr	r3, [pc, #488]	; (f54 <udc_process_setup+0x2b8>)
     d6a:	4798      	blx	r3
     d6c:	e007      	b.n	d7e <udc_process_setup+0xe2>
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
     d6e:	2b01      	cmp	r3, #1
     d70:	d000      	beq.n	d74 <udc_process_setup+0xd8>
     d72:	e172      	b.n	105a <udc_process_setup+0x3be>
				(uint8_t *) udc_config.confdev_lsfs,
     d74:	4b79      	ldr	r3, [pc, #484]	; (f5c <udc_process_setup+0x2c0>)
     d76:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
     d78:	7801      	ldrb	r1, [r0, #0]
     d7a:	4b76      	ldr	r3, [pc, #472]	; (f54 <udc_process_setup+0x2b8>)
     d7c:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
     d7e:	4b72      	ldr	r3, [pc, #456]	; (f48 <udc_process_setup+0x2ac>)
     d80:	88da      	ldrh	r2, [r3, #6]
     d82:	899b      	ldrh	r3, [r3, #12]
     d84:	4293      	cmp	r3, r2
     d86:	d800      	bhi.n	d8a <udc_process_setup+0xee>
     d88:	e0ce      	b.n	f28 <udc_process_setup+0x28c>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
     d8a:	4b6f      	ldr	r3, [pc, #444]	; (f48 <udc_process_setup+0x2ac>)
     d8c:	819a      	strh	r2, [r3, #12]
     d8e:	e0cb      	b.n	f28 <udc_process_setup+0x28c>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
     d90:	b2d2      	uxtb	r2, r2
			if (conf_num >= udc_config.confdev_lsfs->
     d92:	4b72      	ldr	r3, [pc, #456]	; (f5c <udc_process_setup+0x2c0>)
     d94:	681b      	ldr	r3, [r3, #0]
     d96:	7c5b      	ldrb	r3, [r3, #17]
     d98:	4293      	cmp	r3, r2
     d9a:	d800      	bhi.n	d9e <udc_process_setup+0x102>
     d9c:	e793      	b.n	cc6 <udc_process_setup+0x2a>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
     d9e:	4b6f      	ldr	r3, [pc, #444]	; (f5c <udc_process_setup+0x2c0>)
     da0:	685b      	ldr	r3, [r3, #4]
     da2:	00d2      	lsls	r2, r2, #3
     da4:	58d0      	ldr	r0, [r2, r3]
			udd_set_setup_payload(
     da6:	7883      	ldrb	r3, [r0, #2]
     da8:	78c1      	ldrb	r1, [r0, #3]
     daa:	0209      	lsls	r1, r1, #8
     dac:	4319      	orrs	r1, r3
     dae:	4b69      	ldr	r3, [pc, #420]	; (f54 <udc_process_setup+0x2b8>)
     db0:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
     db2:	4b65      	ldr	r3, [pc, #404]	; (f48 <udc_process_setup+0x2ac>)
     db4:	689b      	ldr	r3, [r3, #8]
     db6:	2202      	movs	r2, #2
     db8:	705a      	strb	r2, [r3, #1]
     dba:	e7e0      	b.n	d7e <udc_process_setup+0xe2>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
     dbc:	23ff      	movs	r3, #255	; 0xff
     dbe:	401a      	ands	r2, r3
     dc0:	2a01      	cmp	r2, #1
     dc2:	d01c      	beq.n	dfe <udc_process_setup+0x162>
     dc4:	2a00      	cmp	r2, #0
     dc6:	d015      	beq.n	df4 <udc_process_setup+0x158>
     dc8:	2a02      	cmp	r2, #2
     dca:	d000      	beq.n	dce <udc_process_setup+0x132>
     dcc:	e774      	b.n	cb8 <udc_process_setup+0x1c>
		str = udc_string_product_name;
     dce:	4c64      	ldr	r4, [pc, #400]	; (f60 <udc_process_setup+0x2c4>)
		str_length = USB_DEVICE_PRODUCT_NAME_SIZE;
     dd0:	210f      	movs	r1, #15
     dd2:	4a64      	ldr	r2, [pc, #400]	; (f64 <udc_process_setup+0x2c8>)
     dd4:	2300      	movs	r3, #0
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
     dd6:	5ce0      	ldrb	r0, [r4, r3]
     dd8:	8050      	strh	r0, [r2, #2]
     dda:	3301      	adds	r3, #1
     ddc:	3202      	adds	r2, #2
		for(i = 0; i < str_length; i++) {
     dde:	b2d8      	uxtb	r0, r3
     de0:	4288      	cmp	r0, r1
     de2:	d3f8      	bcc.n	dd6 <udc_process_setup+0x13a>
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
     de4:	0049      	lsls	r1, r1, #1
     de6:	3102      	adds	r1, #2
     de8:	485e      	ldr	r0, [pc, #376]	; (f64 <udc_process_setup+0x2c8>)
     dea:	7001      	strb	r1, [r0, #0]
		udd_set_setup_payload(
     dec:	b289      	uxth	r1, r1
     dee:	4b59      	ldr	r3, [pc, #356]	; (f54 <udc_process_setup+0x2b8>)
     df0:	4798      	blx	r3
     df2:	e7c4      	b.n	d7e <udc_process_setup+0xe2>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
     df4:	2104      	movs	r1, #4
     df6:	485c      	ldr	r0, [pc, #368]	; (f68 <udc_process_setup+0x2cc>)
     df8:	4b56      	ldr	r3, [pc, #344]	; (f54 <udc_process_setup+0x2b8>)
     dfa:	4798      	blx	r3
     dfc:	e7bf      	b.n	d7e <udc_process_setup+0xe2>
		str = udc_string_manufacturer_name;
     dfe:	4c5b      	ldr	r4, [pc, #364]	; (f6c <udc_process_setup+0x2d0>)
		str_length = USB_DEVICE_MANUFACTURE_NAME_SIZE;
     e00:	2109      	movs	r1, #9
     e02:	e7e6      	b.n	dd2 <udc_process_setup+0x136>
	if (udd_g_ctrlreq.req.wLength != 1) {
     e04:	2a01      	cmp	r2, #1
     e06:	d000      	beq.n	e0a <udc_process_setup+0x16e>
     e08:	e75d      	b.n	cc6 <udc_process_setup+0x2a>
	udd_set_setup_payload(&udc_num_configuration,1);
     e0a:	2101      	movs	r1, #1
     e0c:	4858      	ldr	r0, [pc, #352]	; (f70 <udc_process_setup+0x2d4>)
     e0e:	4b51      	ldr	r3, [pc, #324]	; (f54 <udc_process_setup+0x2b8>)
     e10:	4798      	blx	r3
     e12:	e089      	b.n	f28 <udc_process_setup+0x28c>
			switch (udd_g_ctrlreq.req.bRequest) {
     e14:	494c      	ldr	r1, [pc, #304]	; (f48 <udc_process_setup+0x2ac>)
     e16:	7849      	ldrb	r1, [r1, #1]
     e18:	290a      	cmp	r1, #10
     e1a:	d000      	beq.n	e1e <udc_process_setup+0x182>
     e1c:	e773      	b.n	d06 <udc_process_setup+0x6a>
	if (udd_g_ctrlreq.req.wLength != 1) {
     e1e:	2a01      	cmp	r2, #1
     e20:	d000      	beq.n	e24 <udc_process_setup+0x188>
     e22:	e0c3      	b.n	fac <udc_process_setup+0x310>
	if (!udc_num_configuration) {
     e24:	4b52      	ldr	r3, [pc, #328]	; (f70 <udc_process_setup+0x2d4>)
     e26:	781b      	ldrb	r3, [r3, #0]
     e28:	2b00      	cmp	r3, #0
     e2a:	d100      	bne.n	e2e <udc_process_setup+0x192>
     e2c:	e0be      	b.n	fac <udc_process_setup+0x310>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
     e2e:	4b46      	ldr	r3, [pc, #280]	; (f48 <udc_process_setup+0x2ac>)
     e30:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
     e32:	4b50      	ldr	r3, [pc, #320]	; (f74 <udc_process_setup+0x2d8>)
     e34:	681d      	ldr	r5, [r3, #0]
     e36:	682b      	ldr	r3, [r5, #0]
     e38:	791b      	ldrb	r3, [r3, #4]
     e3a:	42a3      	cmp	r3, r4
     e3c:	d800      	bhi.n	e40 <udc_process_setup+0x1a4>
     e3e:	e0b5      	b.n	fac <udc_process_setup+0x310>
	if (!udc_update_iface_desc(iface_num, 0)) {
     e40:	2100      	movs	r1, #0
     e42:	0020      	movs	r0, r4
     e44:	4b4c      	ldr	r3, [pc, #304]	; (f78 <udc_process_setup+0x2dc>)
     e46:	4798      	blx	r3
     e48:	2800      	cmp	r0, #0
     e4a:	d100      	bne.n	e4e <udc_process_setup+0x1b2>
     e4c:	e734      	b.n	cb8 <udc_process_setup+0x1c>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
     e4e:	686b      	ldr	r3, [r5, #4]
     e50:	00a4      	lsls	r4, r4, #2
	udc_iface_setting = udi_api->getsetting();
     e52:	58e3      	ldr	r3, [r4, r3]
     e54:	68db      	ldr	r3, [r3, #12]
     e56:	4798      	blx	r3
     e58:	4b48      	ldr	r3, [pc, #288]	; (f7c <udc_process_setup+0x2e0>)
     e5a:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
     e5c:	2101      	movs	r1, #1
     e5e:	0018      	movs	r0, r3
     e60:	4b3c      	ldr	r3, [pc, #240]	; (f54 <udc_process_setup+0x2b8>)
     e62:	4798      	blx	r3
     e64:	e060      	b.n	f28 <udc_process_setup+0x28c>
     e66:	221f      	movs	r2, #31
     e68:	4013      	ands	r3, r2
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
     e6a:	d15f      	bne.n	f2c <udc_process_setup+0x290>
			switch (udd_g_ctrlreq.req.bRequest) {
     e6c:	4a36      	ldr	r2, [pc, #216]	; (f48 <udc_process_setup+0x2ac>)
     e6e:	7852      	ldrb	r2, [r2, #1]
     e70:	2a03      	cmp	r2, #3
     e72:	d100      	bne.n	e76 <udc_process_setup+0x1da>
     e74:	e0f3      	b.n	105e <udc_process_setup+0x3c2>
     e76:	b2d1      	uxtb	r1, r2
     e78:	2903      	cmp	r1, #3
     e7a:	d93b      	bls.n	ef4 <udc_process_setup+0x258>
     e7c:	2a05      	cmp	r2, #5
     e7e:	d04b      	beq.n	f18 <udc_process_setup+0x27c>
     e80:	2a09      	cmp	r2, #9
     e82:	d153      	bne.n	f2c <udc_process_setup+0x290>
	if (udd_g_ctrlreq.req.wLength) {
     e84:	4b30      	ldr	r3, [pc, #192]	; (f48 <udc_process_setup+0x2ac>)
     e86:	88db      	ldrh	r3, [r3, #6]
     e88:	2b00      	cmp	r3, #0
     e8a:	d000      	beq.n	e8e <udc_process_setup+0x1f2>
     e8c:	e71b      	b.n	cc6 <udc_process_setup+0x2a>
	if (!udd_getaddress()) {
     e8e:	4b3c      	ldr	r3, [pc, #240]	; (f80 <udc_process_setup+0x2e4>)
     e90:	4798      	blx	r3
     e92:	2800      	cmp	r0, #0
     e94:	d100      	bne.n	e98 <udc_process_setup+0x1fc>
     e96:	e70f      	b.n	cb8 <udc_process_setup+0x1c>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
     e98:	4b2b      	ldr	r3, [pc, #172]	; (f48 <udc_process_setup+0x2ac>)
     e9a:	789a      	ldrb	r2, [r3, #2]
				udc_config.confdev_lsfs->bNumConfigurations) {
     e9c:	4b2f      	ldr	r3, [pc, #188]	; (f5c <udc_process_setup+0x2c0>)
     e9e:	681b      	ldr	r3, [r3, #0]
     ea0:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
     ea2:	429a      	cmp	r2, r3
     ea4:	dd00      	ble.n	ea8 <udc_process_setup+0x20c>
     ea6:	e707      	b.n	cb8 <udc_process_setup+0x1c>
	udc_reset();
     ea8:	4b36      	ldr	r3, [pc, #216]	; (f84 <udc_process_setup+0x2e8>)
     eaa:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
     eac:	4b26      	ldr	r3, [pc, #152]	; (f48 <udc_process_setup+0x2ac>)
     eae:	789b      	ldrb	r3, [r3, #2]
     eb0:	4a2f      	ldr	r2, [pc, #188]	; (f70 <udc_process_setup+0x2d4>)
     eb2:	7013      	strb	r3, [r2, #0]
	if (udc_num_configuration == 0) {
     eb4:	2b00      	cmp	r3, #0
     eb6:	d037      	beq.n	f28 <udc_process_setup+0x28c>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
     eb8:	4a33      	ldr	r2, [pc, #204]	; (f88 <udc_process_setup+0x2ec>)
     eba:	4694      	mov	ip, r2
     ebc:	4463      	add	r3, ip
     ebe:	00db      	lsls	r3, r3, #3
     ec0:	4a26      	ldr	r2, [pc, #152]	; (f5c <udc_process_setup+0x2c0>)
     ec2:	6852      	ldr	r2, [r2, #4]
     ec4:	18d3      	adds	r3, r2, r3
     ec6:	4a2b      	ldr	r2, [pc, #172]	; (f74 <udc_process_setup+0x2d8>)
     ec8:	6013      	str	r3, [r2, #0]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
     eca:	681b      	ldr	r3, [r3, #0]
     ecc:	791b      	ldrb	r3, [r3, #4]
     ece:	2b00      	cmp	r3, #0
     ed0:	d02a      	beq.n	f28 <udc_process_setup+0x28c>
     ed2:	2400      	movs	r4, #0
		if (!udc_iface_enable(iface_num, 0)) {
     ed4:	4d2d      	ldr	r5, [pc, #180]	; (f8c <udc_process_setup+0x2f0>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
     ed6:	0016      	movs	r6, r2
		if (!udc_iface_enable(iface_num, 0)) {
     ed8:	2100      	movs	r1, #0
     eda:	0020      	movs	r0, r4
     edc:	47a8      	blx	r5
     ede:	2800      	cmp	r0, #0
     ee0:	d100      	bne.n	ee4 <udc_process_setup+0x248>
     ee2:	e6e9      	b.n	cb8 <udc_process_setup+0x1c>
			iface_num++) {
     ee4:	3401      	adds	r4, #1
     ee6:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
     ee8:	6833      	ldr	r3, [r6, #0]
     eea:	681b      	ldr	r3, [r3, #0]
     eec:	791b      	ldrb	r3, [r3, #4]
     eee:	42a3      	cmp	r3, r4
     ef0:	d8f2      	bhi.n	ed8 <udc_process_setup+0x23c>
     ef2:	e019      	b.n	f28 <udc_process_setup+0x28c>
			switch (udd_g_ctrlreq.req.bRequest) {
     ef4:	2a01      	cmp	r2, #1
     ef6:	d119      	bne.n	f2c <udc_process_setup+0x290>
	if (udd_g_ctrlreq.req.wLength) {
     ef8:	4b13      	ldr	r3, [pc, #76]	; (f48 <udc_process_setup+0x2ac>)
     efa:	88db      	ldrh	r3, [r3, #6]
     efc:	2b00      	cmp	r3, #0
     efe:	d000      	beq.n	f02 <udc_process_setup+0x266>
     f00:	e6e1      	b.n	cc6 <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
     f02:	4b11      	ldr	r3, [pc, #68]	; (f48 <udc_process_setup+0x2ac>)
     f04:	885b      	ldrh	r3, [r3, #2]
     f06:	2b01      	cmp	r3, #1
     f08:	d000      	beq.n	f0c <udc_process_setup+0x270>
     f0a:	e6dc      	b.n	cc6 <udc_process_setup+0x2a>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
     f0c:	4a12      	ldr	r2, [pc, #72]	; (f58 <udc_process_setup+0x2bc>)
     f0e:	8813      	ldrh	r3, [r2, #0]
     f10:	2102      	movs	r1, #2
     f12:	438b      	bics	r3, r1
     f14:	8013      	strh	r3, [r2, #0]
     f16:	e007      	b.n	f28 <udc_process_setup+0x28c>
	if (udd_g_ctrlreq.req.wLength) {
     f18:	4b0b      	ldr	r3, [pc, #44]	; (f48 <udc_process_setup+0x2ac>)
     f1a:	88db      	ldrh	r3, [r3, #6]
     f1c:	2b00      	cmp	r3, #0
     f1e:	d000      	beq.n	f22 <udc_process_setup+0x286>
     f20:	e6d1      	b.n	cc6 <udc_process_setup+0x2a>
	udd_g_ctrlreq.callback = udc_valid_address;
     f22:	4a1b      	ldr	r2, [pc, #108]	; (f90 <udc_process_setup+0x2f4>)
     f24:	4b08      	ldr	r3, [pc, #32]	; (f48 <udc_process_setup+0x2ac>)
     f26:	611a      	str	r2, [r3, #16]
			return true;
     f28:	2001      	movs	r0, #1
     f2a:	e6d4      	b.n	cd6 <udc_process_setup+0x3a>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
     f2c:	2b01      	cmp	r3, #1
     f2e:	d031      	beq.n	f94 <udc_process_setup+0x2f8>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
     f30:	2b02      	cmp	r3, #2
     f32:	d000      	beq.n	f36 <udc_process_setup+0x29a>
     f34:	e6c0      	b.n	cb8 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
     f36:	4b04      	ldr	r3, [pc, #16]	; (f48 <udc_process_setup+0x2ac>)
     f38:	785b      	ldrb	r3, [r3, #1]
     f3a:	2b01      	cmp	r3, #1
     f3c:	d06c      	beq.n	1018 <udc_process_setup+0x37c>
     f3e:	2b03      	cmp	r3, #3
     f40:	d100      	bne.n	f44 <udc_process_setup+0x2a8>
     f42:	e078      	b.n	1036 <udc_process_setup+0x39a>
	return false;
     f44:	2000      	movs	r0, #0
     f46:	e08b      	b.n	1060 <udc_process_setup+0x3c4>
     f48:	200005cc 	.word	0x200005cc
     f4c:	00002c79 	.word	0x00002c79
     f50:	20000250 	.word	0x20000250
     f54:	00003051 	.word	0x00003051
     f58:	2000024e 	.word	0x2000024e
     f5c:	20000028 	.word	0x20000028
     f60:	200000d8 	.word	0x200000d8
     f64:	200000a8 	.word	0x200000a8
     f68:	200000c8 	.word	0x200000c8
     f6c:	200000cc 	.word	0x200000cc
     f70:	20000258 	.word	0x20000258
     f74:	2000025c 	.word	0x2000025c
     f78:	00000ac9 	.word	0x00000ac9
     f7c:	20000254 	.word	0x20000254
     f80:	00002fe9 	.word	0x00002fe9
     f84:	00000c0d 	.word	0x00000c0d
     f88:	1fffffff 	.word	0x1fffffff
     f8c:	00000ba9 	.word	0x00000ba9
     f90:	00000ab1 	.word	0x00000ab1
			switch (udd_g_ctrlreq.req.bRequest) {
     f94:	4a48      	ldr	r2, [pc, #288]	; (10b8 <udc_process_setup+0x41c>)
     f96:	7852      	ldrb	r2, [r2, #1]
     f98:	2a0b      	cmp	r2, #11
     f9a:	d1c9      	bne.n	f30 <udc_process_setup+0x294>
	if (udd_g_ctrlreq.req.wLength) {
     f9c:	4b46      	ldr	r3, [pc, #280]	; (10b8 <udc_process_setup+0x41c>)
     f9e:	88db      	ldrh	r3, [r3, #6]
     fa0:	2b00      	cmp	r3, #0
     fa2:	d103      	bne.n	fac <udc_process_setup+0x310>
	if (!udc_num_configuration) {
     fa4:	4b45      	ldr	r3, [pc, #276]	; (10bc <udc_process_setup+0x420>)
     fa6:	781b      	ldrb	r3, [r3, #0]
     fa8:	2b00      	cmp	r3, #0
     faa:	d127      	bne.n	ffc <udc_process_setup+0x360>
	if (0 == udc_num_configuration) {
     fac:	4b43      	ldr	r3, [pc, #268]	; (10bc <udc_process_setup+0x420>)
     fae:	781b      	ldrb	r3, [r3, #0]
	return false;
     fb0:	2000      	movs	r0, #0
	if (0 == udc_num_configuration) {
     fb2:	2b00      	cmp	r3, #0
     fb4:	d100      	bne.n	fb8 <udc_process_setup+0x31c>
     fb6:	e68e      	b.n	cd6 <udc_process_setup+0x3a>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
     fb8:	4b3f      	ldr	r3, [pc, #252]	; (10b8 <udc_process_setup+0x41c>)
     fba:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
     fbc:	4b40      	ldr	r3, [pc, #256]	; (10c0 <udc_process_setup+0x424>)
     fbe:	681d      	ldr	r5, [r3, #0]
     fc0:	682b      	ldr	r3, [r5, #0]
     fc2:	791b      	ldrb	r3, [r3, #4]
     fc4:	42a3      	cmp	r3, r4
     fc6:	d800      	bhi.n	fca <udc_process_setup+0x32e>
     fc8:	e685      	b.n	cd6 <udc_process_setup+0x3a>
	if (!udc_update_iface_desc(iface_num, 0)) {
     fca:	2100      	movs	r1, #0
     fcc:	0020      	movs	r0, r4
     fce:	4b3d      	ldr	r3, [pc, #244]	; (10c4 <udc_process_setup+0x428>)
     fd0:	4798      	blx	r3
     fd2:	2800      	cmp	r0, #0
     fd4:	d100      	bne.n	fd8 <udc_process_setup+0x33c>
     fd6:	e676      	b.n	cc6 <udc_process_setup+0x2a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
     fd8:	686b      	ldr	r3, [r5, #4]
     fda:	00a2      	lsls	r2, r4, #2
     fdc:	58d5      	ldr	r5, [r2, r3]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
     fde:	68eb      	ldr	r3, [r5, #12]
     fe0:	4798      	blx	r3
     fe2:	0001      	movs	r1, r0
     fe4:	0020      	movs	r0, r4
     fe6:	4b37      	ldr	r3, [pc, #220]	; (10c4 <udc_process_setup+0x428>)
     fe8:	4798      	blx	r3
     fea:	2800      	cmp	r0, #0
     fec:	d100      	bne.n	ff0 <udc_process_setup+0x354>
     fee:	e66a      	b.n	cc6 <udc_process_setup+0x2a>
	return udi_api->setup();
     ff0:	68ab      	ldr	r3, [r5, #8]
     ff2:	4798      	blx	r3
		if (udc_req_iface()) {
     ff4:	2800      	cmp	r0, #0
     ff6:	d000      	beq.n	ffa <udc_process_setup+0x35e>
     ff8:	e66d      	b.n	cd6 <udc_process_setup+0x3a>
     ffa:	e664      	b.n	cc6 <udc_process_setup+0x2a>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
     ffc:	4b2e      	ldr	r3, [pc, #184]	; (10b8 <udc_process_setup+0x41c>)
     ffe:	791d      	ldrb	r5, [r3, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
    1000:	885c      	ldrh	r4, [r3, #2]
	if (!udc_iface_disable(iface_num)) {
    1002:	0028      	movs	r0, r5
    1004:	4b30      	ldr	r3, [pc, #192]	; (10c8 <udc_process_setup+0x42c>)
    1006:	4798      	blx	r3
    1008:	2800      	cmp	r0, #0
    100a:	d100      	bne.n	100e <udc_process_setup+0x372>
    100c:	e654      	b.n	cb8 <udc_process_setup+0x1c>
	return udc_iface_enable(iface_num, setting_num);
    100e:	b2e1      	uxtb	r1, r4
    1010:	0028      	movs	r0, r5
    1012:	4b2e      	ldr	r3, [pc, #184]	; (10cc <udc_process_setup+0x430>)
    1014:	4798      	blx	r3
    1016:	e023      	b.n	1060 <udc_process_setup+0x3c4>
	if (udd_g_ctrlreq.req.wLength) {
    1018:	4b27      	ldr	r3, [pc, #156]	; (10b8 <udc_process_setup+0x41c>)
    101a:	88db      	ldrh	r3, [r3, #6]
    101c:	2b00      	cmp	r3, #0
    101e:	d000      	beq.n	1022 <udc_process_setup+0x386>
    1020:	e651      	b.n	cc6 <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
    1022:	4b25      	ldr	r3, [pc, #148]	; (10b8 <udc_process_setup+0x41c>)
    1024:	885b      	ldrh	r3, [r3, #2]
    1026:	2b00      	cmp	r3, #0
    1028:	d000      	beq.n	102c <udc_process_setup+0x390>
    102a:	e64c      	b.n	cc6 <udc_process_setup+0x2a>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
    102c:	4b22      	ldr	r3, [pc, #136]	; (10b8 <udc_process_setup+0x41c>)
    102e:	7918      	ldrb	r0, [r3, #4]
    1030:	4b27      	ldr	r3, [pc, #156]	; (10d0 <udc_process_setup+0x434>)
    1032:	4798      	blx	r3
    1034:	e014      	b.n	1060 <udc_process_setup+0x3c4>
	if (udd_g_ctrlreq.req.wLength) {
    1036:	4b20      	ldr	r3, [pc, #128]	; (10b8 <udc_process_setup+0x41c>)
    1038:	88db      	ldrh	r3, [r3, #6]
    103a:	2b00      	cmp	r3, #0
    103c:	d000      	beq.n	1040 <udc_process_setup+0x3a4>
    103e:	e642      	b.n	cc6 <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
    1040:	4b1d      	ldr	r3, [pc, #116]	; (10b8 <udc_process_setup+0x41c>)
    1042:	885b      	ldrh	r3, [r3, #2]
    1044:	2b00      	cmp	r3, #0
    1046:	d000      	beq.n	104a <udc_process_setup+0x3ae>
    1048:	e63d      	b.n	cc6 <udc_process_setup+0x2a>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
    104a:	4c1b      	ldr	r4, [pc, #108]	; (10b8 <udc_process_setup+0x41c>)
    104c:	7920      	ldrb	r0, [r4, #4]
    104e:	4b21      	ldr	r3, [pc, #132]	; (10d4 <udc_process_setup+0x438>)
    1050:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
    1052:	7920      	ldrb	r0, [r4, #4]
    1054:	4b20      	ldr	r3, [pc, #128]	; (10d8 <udc_process_setup+0x43c>)
    1056:	4798      	blx	r3
    1058:	e002      	b.n	1060 <udc_process_setup+0x3c4>
		return false;
    105a:	2000      	movs	r0, #0
    105c:	e000      	b.n	1060 <udc_process_setup+0x3c4>
				return udc_req_std_dev_set_feature();
    105e:	2000      	movs	r0, #0
		if (udc_reqstd()) {
    1060:	2800      	cmp	r0, #0
    1062:	d000      	beq.n	1066 <udc_process_setup+0x3ca>
    1064:	e637      	b.n	cd6 <udc_process_setup+0x3a>
    1066:	e627      	b.n	cb8 <udc_process_setup+0x1c>
	if (0 == udc_num_configuration) {
    1068:	4b14      	ldr	r3, [pc, #80]	; (10bc <udc_process_setup+0x420>)
    106a:	781b      	ldrb	r3, [r3, #0]
    106c:	2b00      	cmp	r3, #0
    106e:	d100      	bne.n	1072 <udc_process_setup+0x3d6>
    1070:	e631      	b.n	cd6 <udc_process_setup+0x3a>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
    1072:	4b13      	ldr	r3, [pc, #76]	; (10c0 <udc_process_setup+0x424>)
    1074:	681b      	ldr	r3, [r3, #0]
    1076:	681a      	ldr	r2, [r3, #0]
    1078:	7912      	ldrb	r2, [r2, #4]
    107a:	2a00      	cmp	r2, #0
    107c:	d01a      	beq.n	10b4 <udc_process_setup+0x418>
    107e:	2500      	movs	r5, #0
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
    1080:	4e10      	ldr	r6, [pc, #64]	; (10c4 <udc_process_setup+0x428>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
    1082:	4f0f      	ldr	r7, [pc, #60]	; (10c0 <udc_process_setup+0x424>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
    1084:	685b      	ldr	r3, [r3, #4]
    1086:	00aa      	lsls	r2, r5, #2
    1088:	58d4      	ldr	r4, [r2, r3]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
    108a:	68e3      	ldr	r3, [r4, #12]
    108c:	4798      	blx	r3
    108e:	0001      	movs	r1, r0
    1090:	0028      	movs	r0, r5
    1092:	47b0      	blx	r6
    1094:	2800      	cmp	r0, #0
    1096:	d100      	bne.n	109a <udc_process_setup+0x3fe>
    1098:	e61d      	b.n	cd6 <udc_process_setup+0x3a>
		if (udi_api->setup()) {
    109a:	68a3      	ldr	r3, [r4, #8]
    109c:	4798      	blx	r3
    109e:	2800      	cmp	r0, #0
    10a0:	d000      	beq.n	10a4 <udc_process_setup+0x408>
    10a2:	e618      	b.n	cd6 <udc_process_setup+0x3a>
			iface_num++) {
    10a4:	3501      	adds	r5, #1
    10a6:	b2ed      	uxtb	r5, r5
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
    10a8:	683b      	ldr	r3, [r7, #0]
    10aa:	681a      	ldr	r2, [r3, #0]
    10ac:	7912      	ldrb	r2, [r2, #4]
    10ae:	42aa      	cmp	r2, r5
    10b0:	d8e8      	bhi.n	1084 <udc_process_setup+0x3e8>
    10b2:	e610      	b.n	cd6 <udc_process_setup+0x3a>
	return false;
    10b4:	2000      	movs	r0, #0
    10b6:	e60e      	b.n	cd6 <udc_process_setup+0x3a>
    10b8:	200005cc 	.word	0x200005cc
    10bc:	20000258 	.word	0x20000258
    10c0:	2000025c 	.word	0x2000025c
    10c4:	00000ac9 	.word	0x00000ac9
    10c8:	00000b3d 	.word	0x00000b3d
    10cc:	00000ba9 	.word	0x00000ba9
    10d0:	00002dbd 	.word	0x00002dbd
    10d4:	00002ab9 	.word	0x00002ab9
    10d8:	00002c8d 	.word	0x00002c8d

000010dc <cpu_irq_enter_critical>:
    10dc:	4b0c      	ldr	r3, [pc, #48]	; (1110 <cpu_irq_enter_critical+0x34>)
    10de:	681b      	ldr	r3, [r3, #0]
    10e0:	2b00      	cmp	r3, #0
    10e2:	d106      	bne.n	10f2 <cpu_irq_enter_critical+0x16>
    10e4:	f3ef 8310 	mrs	r3, PRIMASK
    10e8:	2b00      	cmp	r3, #0
    10ea:	d007      	beq.n	10fc <cpu_irq_enter_critical+0x20>
    10ec:	2200      	movs	r2, #0
    10ee:	4b09      	ldr	r3, [pc, #36]	; (1114 <cpu_irq_enter_critical+0x38>)
    10f0:	701a      	strb	r2, [r3, #0]
    10f2:	4a07      	ldr	r2, [pc, #28]	; (1110 <cpu_irq_enter_critical+0x34>)
    10f4:	6813      	ldr	r3, [r2, #0]
    10f6:	3301      	adds	r3, #1
    10f8:	6013      	str	r3, [r2, #0]
    10fa:	4770      	bx	lr
    10fc:	b672      	cpsid	i
    10fe:	f3bf 8f5f 	dmb	sy
    1102:	2200      	movs	r2, #0
    1104:	4b04      	ldr	r3, [pc, #16]	; (1118 <cpu_irq_enter_critical+0x3c>)
    1106:	701a      	strb	r2, [r3, #0]
    1108:	3201      	adds	r2, #1
    110a:	4b02      	ldr	r3, [pc, #8]	; (1114 <cpu_irq_enter_critical+0x38>)
    110c:	701a      	strb	r2, [r3, #0]
    110e:	e7f0      	b.n	10f2 <cpu_irq_enter_critical+0x16>
    1110:	20000264 	.word	0x20000264
    1114:	20000268 	.word	0x20000268
    1118:	200000e8 	.word	0x200000e8

0000111c <cpu_irq_leave_critical>:
    111c:	4b08      	ldr	r3, [pc, #32]	; (1140 <cpu_irq_leave_critical+0x24>)
    111e:	681a      	ldr	r2, [r3, #0]
    1120:	3a01      	subs	r2, #1
    1122:	601a      	str	r2, [r3, #0]
    1124:	681b      	ldr	r3, [r3, #0]
    1126:	2b00      	cmp	r3, #0
    1128:	d109      	bne.n	113e <cpu_irq_leave_critical+0x22>
    112a:	4b06      	ldr	r3, [pc, #24]	; (1144 <cpu_irq_leave_critical+0x28>)
    112c:	781b      	ldrb	r3, [r3, #0]
    112e:	2b00      	cmp	r3, #0
    1130:	d005      	beq.n	113e <cpu_irq_leave_critical+0x22>
    1132:	2201      	movs	r2, #1
    1134:	4b04      	ldr	r3, [pc, #16]	; (1148 <cpu_irq_leave_critical+0x2c>)
    1136:	701a      	strb	r2, [r3, #0]
    1138:	f3bf 8f5f 	dmb	sy
    113c:	b662      	cpsie	i
    113e:	4770      	bx	lr
    1140:	20000264 	.word	0x20000264
    1144:	20000268 	.word	0x20000268
    1148:	200000e8 	.word	0x200000e8

0000114c <system_board_init>:
    114c:	b5f0      	push	{r4, r5, r6, r7, lr}
    114e:	b083      	sub	sp, #12
    1150:	ac01      	add	r4, sp, #4
    1152:	2501      	movs	r5, #1
    1154:	7065      	strb	r5, [r4, #1]
    1156:	2700      	movs	r7, #0
    1158:	70a7      	strb	r7, [r4, #2]
    115a:	7025      	strb	r5, [r4, #0]
    115c:	0021      	movs	r1, r4
    115e:	203e      	movs	r0, #62	; 0x3e
    1160:	4e06      	ldr	r6, [pc, #24]	; (117c <system_board_init+0x30>)
    1162:	47b0      	blx	r6
    1164:	2280      	movs	r2, #128	; 0x80
    1166:	05d2      	lsls	r2, r2, #23
    1168:	4b05      	ldr	r3, [pc, #20]	; (1180 <system_board_init+0x34>)
    116a:	619a      	str	r2, [r3, #24]
    116c:	7027      	strb	r7, [r4, #0]
    116e:	7065      	strb	r5, [r4, #1]
    1170:	0021      	movs	r1, r4
    1172:	200f      	movs	r0, #15
    1174:	47b0      	blx	r6
    1176:	b003      	add	sp, #12
    1178:	bdf0      	pop	{r4, r5, r6, r7, pc}
    117a:	46c0      	nop			; (mov r8, r8)
    117c:	00001355 	.word	0x00001355
    1180:	41004480 	.word	0x41004480

00001184 <extint_register_callback>:
    1184:	2317      	movs	r3, #23
    1186:	2a00      	cmp	r2, #0
    1188:	d001      	beq.n	118e <extint_register_callback+0xa>
    118a:	0018      	movs	r0, r3
    118c:	4770      	bx	lr
    118e:	008b      	lsls	r3, r1, #2
    1190:	4a06      	ldr	r2, [pc, #24]	; (11ac <extint_register_callback+0x28>)
    1192:	589b      	ldr	r3, [r3, r2]
    1194:	2b00      	cmp	r3, #0
    1196:	d003      	beq.n	11a0 <extint_register_callback+0x1c>
    1198:	4283      	cmp	r3, r0
    119a:	d005      	beq.n	11a8 <extint_register_callback+0x24>
    119c:	231d      	movs	r3, #29
    119e:	e7f4      	b.n	118a <extint_register_callback+0x6>
    11a0:	0089      	lsls	r1, r1, #2
    11a2:	5088      	str	r0, [r1, r2]
    11a4:	2300      	movs	r3, #0
    11a6:	e7f0      	b.n	118a <extint_register_callback+0x6>
    11a8:	2300      	movs	r3, #0
    11aa:	e7ee      	b.n	118a <extint_register_callback+0x6>
    11ac:	2000034c 	.word	0x2000034c

000011b0 <extint_chan_enable_callback>:
    11b0:	2317      	movs	r3, #23
    11b2:	2900      	cmp	r1, #0
    11b4:	d001      	beq.n	11ba <extint_chan_enable_callback+0xa>
    11b6:	0018      	movs	r0, r3
    11b8:	4770      	bx	lr
    11ba:	2200      	movs	r2, #0
    11bc:	281f      	cmp	r0, #31
    11be:	d800      	bhi.n	11c2 <extint_chan_enable_callback+0x12>
    11c0:	4a02      	ldr	r2, [pc, #8]	; (11cc <extint_chan_enable_callback+0x1c>)
    11c2:	2301      	movs	r3, #1
    11c4:	4083      	lsls	r3, r0
    11c6:	60d3      	str	r3, [r2, #12]
    11c8:	2300      	movs	r3, #0
    11ca:	e7f4      	b.n	11b6 <extint_chan_enable_callback+0x6>
    11cc:	40001800 	.word	0x40001800

000011d0 <extint_chan_disable_callback>:
    11d0:	2317      	movs	r3, #23
    11d2:	2900      	cmp	r1, #0
    11d4:	d001      	beq.n	11da <extint_chan_disable_callback+0xa>
    11d6:	0018      	movs	r0, r3
    11d8:	4770      	bx	lr
    11da:	2200      	movs	r2, #0
    11dc:	281f      	cmp	r0, #31
    11de:	d800      	bhi.n	11e2 <extint_chan_disable_callback+0x12>
    11e0:	4a02      	ldr	r2, [pc, #8]	; (11ec <extint_chan_disable_callback+0x1c>)
    11e2:	2301      	movs	r3, #1
    11e4:	4083      	lsls	r3, r0
    11e6:	6093      	str	r3, [r2, #8]
    11e8:	2300      	movs	r3, #0
    11ea:	e7f4      	b.n	11d6 <extint_chan_disable_callback+0x6>
    11ec:	40001800 	.word	0x40001800

000011f0 <EIC_Handler>:
    11f0:	b570      	push	{r4, r5, r6, lr}
    11f2:	2200      	movs	r2, #0
    11f4:	4b10      	ldr	r3, [pc, #64]	; (1238 <EIC_Handler+0x48>)
    11f6:	701a      	strb	r2, [r3, #0]
    11f8:	2300      	movs	r3, #0
    11fa:	4910      	ldr	r1, [pc, #64]	; (123c <EIC_Handler+0x4c>)
    11fc:	251f      	movs	r5, #31
    11fe:	4e10      	ldr	r6, [pc, #64]	; (1240 <EIC_Handler+0x50>)
    1200:	4c0d      	ldr	r4, [pc, #52]	; (1238 <EIC_Handler+0x48>)
    1202:	e00a      	b.n	121a <EIC_Handler+0x2a>
    1204:	490d      	ldr	r1, [pc, #52]	; (123c <EIC_Handler+0x4c>)
    1206:	e008      	b.n	121a <EIC_Handler+0x2a>
    1208:	7823      	ldrb	r3, [r4, #0]
    120a:	3301      	adds	r3, #1
    120c:	b2db      	uxtb	r3, r3
    120e:	7023      	strb	r3, [r4, #0]
    1210:	2b0f      	cmp	r3, #15
    1212:	d810      	bhi.n	1236 <EIC_Handler+0x46>
    1214:	2100      	movs	r1, #0
    1216:	2b1f      	cmp	r3, #31
    1218:	d9f4      	bls.n	1204 <EIC_Handler+0x14>
    121a:	0028      	movs	r0, r5
    121c:	4018      	ands	r0, r3
    121e:	2201      	movs	r2, #1
    1220:	4082      	lsls	r2, r0
    1222:	6908      	ldr	r0, [r1, #16]
    1224:	4210      	tst	r0, r2
    1226:	d0ef      	beq.n	1208 <EIC_Handler+0x18>
    1228:	610a      	str	r2, [r1, #16]
    122a:	009b      	lsls	r3, r3, #2
    122c:	599b      	ldr	r3, [r3, r6]
    122e:	2b00      	cmp	r3, #0
    1230:	d0ea      	beq.n	1208 <EIC_Handler+0x18>
    1232:	4798      	blx	r3
    1234:	e7e8      	b.n	1208 <EIC_Handler+0x18>
    1236:	bd70      	pop	{r4, r5, r6, pc}
    1238:	20000349 	.word	0x20000349
    123c:	40001800 	.word	0x40001800
    1240:	2000034c 	.word	0x2000034c

00001244 <_extint_enable>:
    1244:	4a04      	ldr	r2, [pc, #16]	; (1258 <_extint_enable+0x14>)
    1246:	7813      	ldrb	r3, [r2, #0]
    1248:	2102      	movs	r1, #2
    124a:	430b      	orrs	r3, r1
    124c:	7013      	strb	r3, [r2, #0]
    124e:	7853      	ldrb	r3, [r2, #1]
    1250:	b25b      	sxtb	r3, r3
    1252:	2b00      	cmp	r3, #0
    1254:	dbfb      	blt.n	124e <_extint_enable+0xa>
    1256:	4770      	bx	lr
    1258:	40001800 	.word	0x40001800

0000125c <_system_extint_init>:
    125c:	b500      	push	{lr}
    125e:	b083      	sub	sp, #12
    1260:	4a12      	ldr	r2, [pc, #72]	; (12ac <_system_extint_init+0x50>)
    1262:	6993      	ldr	r3, [r2, #24]
    1264:	2140      	movs	r1, #64	; 0x40
    1266:	430b      	orrs	r3, r1
    1268:	6193      	str	r3, [r2, #24]
    126a:	a901      	add	r1, sp, #4
    126c:	2300      	movs	r3, #0
    126e:	700b      	strb	r3, [r1, #0]
    1270:	2005      	movs	r0, #5
    1272:	4b0f      	ldr	r3, [pc, #60]	; (12b0 <_system_extint_init+0x54>)
    1274:	4798      	blx	r3
    1276:	2005      	movs	r0, #5
    1278:	4b0e      	ldr	r3, [pc, #56]	; (12b4 <_system_extint_init+0x58>)
    127a:	4798      	blx	r3
    127c:	4a0e      	ldr	r2, [pc, #56]	; (12b8 <_system_extint_init+0x5c>)
    127e:	7813      	ldrb	r3, [r2, #0]
    1280:	2101      	movs	r1, #1
    1282:	430b      	orrs	r3, r1
    1284:	7013      	strb	r3, [r2, #0]
    1286:	7853      	ldrb	r3, [r2, #1]
    1288:	b25b      	sxtb	r3, r3
    128a:	2b00      	cmp	r3, #0
    128c:	dbfb      	blt.n	1286 <_system_extint_init+0x2a>
    128e:	4b0b      	ldr	r3, [pc, #44]	; (12bc <_system_extint_init+0x60>)
    1290:	0019      	movs	r1, r3
    1292:	3140      	adds	r1, #64	; 0x40
    1294:	2200      	movs	r2, #0
    1296:	c304      	stmia	r3!, {r2}
    1298:	4299      	cmp	r1, r3
    129a:	d1fc      	bne.n	1296 <_system_extint_init+0x3a>
    129c:	2210      	movs	r2, #16
    129e:	4b08      	ldr	r3, [pc, #32]	; (12c0 <_system_extint_init+0x64>)
    12a0:	601a      	str	r2, [r3, #0]
    12a2:	4b08      	ldr	r3, [pc, #32]	; (12c4 <_system_extint_init+0x68>)
    12a4:	4798      	blx	r3
    12a6:	b003      	add	sp, #12
    12a8:	bd00      	pop	{pc}
    12aa:	46c0      	nop			; (mov r8, r8)
    12ac:	40000400 	.word	0x40000400
    12b0:	000022bd 	.word	0x000022bd
    12b4:	00002231 	.word	0x00002231
    12b8:	40001800 	.word	0x40001800
    12bc:	2000034c 	.word	0x2000034c
    12c0:	e000e100 	.word	0xe000e100
    12c4:	00001245 	.word	0x00001245

000012c8 <extint_chan_get_config_defaults>:
    12c8:	2300      	movs	r3, #0
    12ca:	6003      	str	r3, [r0, #0]
    12cc:	6043      	str	r3, [r0, #4]
    12ce:	2201      	movs	r2, #1
    12d0:	7202      	strb	r2, [r0, #8]
    12d2:	7242      	strb	r2, [r0, #9]
    12d4:	7283      	strb	r3, [r0, #10]
    12d6:	3302      	adds	r3, #2
    12d8:	72c3      	strb	r3, [r0, #11]
    12da:	4770      	bx	lr

000012dc <extint_chan_set_config>:
    12dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    12de:	b083      	sub	sp, #12
    12e0:	0005      	movs	r5, r0
    12e2:	000c      	movs	r4, r1
    12e4:	a901      	add	r1, sp, #4
    12e6:	2300      	movs	r3, #0
    12e8:	704b      	strb	r3, [r1, #1]
    12ea:	70cb      	strb	r3, [r1, #3]
    12ec:	7923      	ldrb	r3, [r4, #4]
    12ee:	700b      	strb	r3, [r1, #0]
    12f0:	7a23      	ldrb	r3, [r4, #8]
    12f2:	708b      	strb	r3, [r1, #2]
    12f4:	7820      	ldrb	r0, [r4, #0]
    12f6:	4b15      	ldr	r3, [pc, #84]	; (134c <extint_chan_set_config+0x70>)
    12f8:	4798      	blx	r3
    12fa:	2000      	movs	r0, #0
    12fc:	2d1f      	cmp	r5, #31
    12fe:	d800      	bhi.n	1302 <extint_chan_set_config+0x26>
    1300:	4813      	ldr	r0, [pc, #76]	; (1350 <extint_chan_set_config+0x74>)
    1302:	2207      	movs	r2, #7
    1304:	402a      	ands	r2, r5
    1306:	0092      	lsls	r2, r2, #2
    1308:	7ae7      	ldrb	r7, [r4, #11]
    130a:	7aa3      	ldrb	r3, [r4, #10]
    130c:	2b00      	cmp	r3, #0
    130e:	d001      	beq.n	1314 <extint_chan_set_config+0x38>
    1310:	2308      	movs	r3, #8
    1312:	431f      	orrs	r7, r3
    1314:	08eb      	lsrs	r3, r5, #3
    1316:	009b      	lsls	r3, r3, #2
    1318:	18c3      	adds	r3, r0, r3
    131a:	6999      	ldr	r1, [r3, #24]
    131c:	260f      	movs	r6, #15
    131e:	4096      	lsls	r6, r2
    1320:	43b1      	bics	r1, r6
    1322:	4097      	lsls	r7, r2
    1324:	003a      	movs	r2, r7
    1326:	430a      	orrs	r2, r1
    1328:	619a      	str	r2, [r3, #24]
    132a:	7a63      	ldrb	r3, [r4, #9]
    132c:	2b00      	cmp	r3, #0
    132e:	d106      	bne.n	133e <extint_chan_set_config+0x62>
    1330:	6943      	ldr	r3, [r0, #20]
    1332:	2201      	movs	r2, #1
    1334:	40aa      	lsls	r2, r5
    1336:	4393      	bics	r3, r2
    1338:	6143      	str	r3, [r0, #20]
    133a:	b003      	add	sp, #12
    133c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    133e:	6942      	ldr	r2, [r0, #20]
    1340:	2301      	movs	r3, #1
    1342:	40ab      	lsls	r3, r5
    1344:	4313      	orrs	r3, r2
    1346:	6143      	str	r3, [r0, #20]
    1348:	e7f7      	b.n	133a <extint_chan_set_config+0x5e>
    134a:	46c0      	nop			; (mov r8, r8)
    134c:	000023b5 	.word	0x000023b5
    1350:	40001800 	.word	0x40001800

00001354 <port_pin_set_config>:
    1354:	b500      	push	{lr}
    1356:	b083      	sub	sp, #12
    1358:	ab01      	add	r3, sp, #4
    135a:	2280      	movs	r2, #128	; 0x80
    135c:	701a      	strb	r2, [r3, #0]
    135e:	780a      	ldrb	r2, [r1, #0]
    1360:	705a      	strb	r2, [r3, #1]
    1362:	784a      	ldrb	r2, [r1, #1]
    1364:	709a      	strb	r2, [r3, #2]
    1366:	788a      	ldrb	r2, [r1, #2]
    1368:	70da      	strb	r2, [r3, #3]
    136a:	0019      	movs	r1, r3
    136c:	4b01      	ldr	r3, [pc, #4]	; (1374 <port_pin_set_config+0x20>)
    136e:	4798      	blx	r3
    1370:	b003      	add	sp, #12
    1372:	bd00      	pop	{pc}
    1374:	000023b5 	.word	0x000023b5

00001378 <long_division>:
    1378:	b5f0      	push	{r4, r5, r6, r7, lr}
    137a:	46de      	mov	lr, fp
    137c:	4657      	mov	r7, sl
    137e:	464e      	mov	r6, r9
    1380:	4645      	mov	r5, r8
    1382:	b5e0      	push	{r5, r6, r7, lr}
    1384:	b087      	sub	sp, #28
    1386:	4680      	mov	r8, r0
    1388:	9104      	str	r1, [sp, #16]
    138a:	0016      	movs	r6, r2
    138c:	001f      	movs	r7, r3
    138e:	2200      	movs	r2, #0
    1390:	2300      	movs	r3, #0
    1392:	2100      	movs	r1, #0
    1394:	468b      	mov	fp, r1
    1396:	243f      	movs	r4, #63	; 0x3f
    1398:	2001      	movs	r0, #1
    139a:	0021      	movs	r1, r4
    139c:	9600      	str	r6, [sp, #0]
    139e:	9701      	str	r7, [sp, #4]
    13a0:	465c      	mov	r4, fp
    13a2:	9403      	str	r4, [sp, #12]
    13a4:	4644      	mov	r4, r8
    13a6:	9405      	str	r4, [sp, #20]
    13a8:	e013      	b.n	13d2 <long_division+0x5a>
    13aa:	2420      	movs	r4, #32
    13ac:	1a64      	subs	r4, r4, r1
    13ae:	0005      	movs	r5, r0
    13b0:	40e5      	lsrs	r5, r4
    13b2:	46a8      	mov	r8, r5
    13b4:	e014      	b.n	13e0 <long_division+0x68>
    13b6:	9c00      	ldr	r4, [sp, #0]
    13b8:	9d01      	ldr	r5, [sp, #4]
    13ba:	1b12      	subs	r2, r2, r4
    13bc:	41ab      	sbcs	r3, r5
    13be:	465c      	mov	r4, fp
    13c0:	464d      	mov	r5, r9
    13c2:	432c      	orrs	r4, r5
    13c4:	46a3      	mov	fp, r4
    13c6:	9c03      	ldr	r4, [sp, #12]
    13c8:	4645      	mov	r5, r8
    13ca:	432c      	orrs	r4, r5
    13cc:	9403      	str	r4, [sp, #12]
    13ce:	3901      	subs	r1, #1
    13d0:	d325      	bcc.n	141e <long_division+0xa6>
    13d2:	2420      	movs	r4, #32
    13d4:	4264      	negs	r4, r4
    13d6:	190c      	adds	r4, r1, r4
    13d8:	d4e7      	bmi.n	13aa <long_division+0x32>
    13da:	0005      	movs	r5, r0
    13dc:	40a5      	lsls	r5, r4
    13de:	46a8      	mov	r8, r5
    13e0:	0004      	movs	r4, r0
    13e2:	408c      	lsls	r4, r1
    13e4:	46a1      	mov	r9, r4
    13e6:	1892      	adds	r2, r2, r2
    13e8:	415b      	adcs	r3, r3
    13ea:	0014      	movs	r4, r2
    13ec:	001d      	movs	r5, r3
    13ee:	9e05      	ldr	r6, [sp, #20]
    13f0:	464f      	mov	r7, r9
    13f2:	403e      	ands	r6, r7
    13f4:	46b4      	mov	ip, r6
    13f6:	9e04      	ldr	r6, [sp, #16]
    13f8:	4647      	mov	r7, r8
    13fa:	403e      	ands	r6, r7
    13fc:	46b2      	mov	sl, r6
    13fe:	4666      	mov	r6, ip
    1400:	4657      	mov	r7, sl
    1402:	433e      	orrs	r6, r7
    1404:	d003      	beq.n	140e <long_division+0x96>
    1406:	0006      	movs	r6, r0
    1408:	4326      	orrs	r6, r4
    140a:	0032      	movs	r2, r6
    140c:	002b      	movs	r3, r5
    140e:	9c00      	ldr	r4, [sp, #0]
    1410:	9d01      	ldr	r5, [sp, #4]
    1412:	429d      	cmp	r5, r3
    1414:	d8db      	bhi.n	13ce <long_division+0x56>
    1416:	d1ce      	bne.n	13b6 <long_division+0x3e>
    1418:	4294      	cmp	r4, r2
    141a:	d8d8      	bhi.n	13ce <long_division+0x56>
    141c:	e7cb      	b.n	13b6 <long_division+0x3e>
    141e:	9b03      	ldr	r3, [sp, #12]
    1420:	4658      	mov	r0, fp
    1422:	0019      	movs	r1, r3
    1424:	b007      	add	sp, #28
    1426:	bc3c      	pop	{r2, r3, r4, r5}
    1428:	4690      	mov	r8, r2
    142a:	4699      	mov	r9, r3
    142c:	46a2      	mov	sl, r4
    142e:	46ab      	mov	fp, r5
    1430:	bdf0      	pop	{r4, r5, r6, r7, pc}

00001432 <_sercom_get_sync_baud_val>:
    1432:	b510      	push	{r4, lr}
    1434:	0849      	lsrs	r1, r1, #1
    1436:	2340      	movs	r3, #64	; 0x40
    1438:	2400      	movs	r4, #0
    143a:	4281      	cmp	r1, r0
    143c:	d202      	bcs.n	1444 <_sercom_get_sync_baud_val+0x12>
    143e:	0018      	movs	r0, r3
    1440:	bd10      	pop	{r4, pc}
    1442:	001c      	movs	r4, r3
    1444:	1a09      	subs	r1, r1, r0
    1446:	1c63      	adds	r3, r4, #1
    1448:	b29b      	uxth	r3, r3
    144a:	4288      	cmp	r0, r1
    144c:	d9f9      	bls.n	1442 <_sercom_get_sync_baud_val+0x10>
    144e:	2340      	movs	r3, #64	; 0x40
    1450:	2cff      	cmp	r4, #255	; 0xff
    1452:	d8f4      	bhi.n	143e <_sercom_get_sync_baud_val+0xc>
    1454:	8014      	strh	r4, [r2, #0]
    1456:	2300      	movs	r3, #0
    1458:	e7f1      	b.n	143e <_sercom_get_sync_baud_val+0xc>
	...

0000145c <_sercom_get_async_baud_val>:
    145c:	b5f0      	push	{r4, r5, r6, r7, lr}
    145e:	b083      	sub	sp, #12
    1460:	000f      	movs	r7, r1
    1462:	0016      	movs	r6, r2
    1464:	aa08      	add	r2, sp, #32
    1466:	7811      	ldrb	r1, [r2, #0]
    1468:	0004      	movs	r4, r0
    146a:	434c      	muls	r4, r1
    146c:	2240      	movs	r2, #64	; 0x40
    146e:	42bc      	cmp	r4, r7
    1470:	d902      	bls.n	1478 <_sercom_get_async_baud_val+0x1c>
    1472:	0010      	movs	r0, r2
    1474:	b003      	add	sp, #12
    1476:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1478:	2b00      	cmp	r3, #0
    147a:	d114      	bne.n	14a6 <_sercom_get_async_baud_val+0x4a>
    147c:	0002      	movs	r2, r0
    147e:	0008      	movs	r0, r1
    1480:	2100      	movs	r1, #0
    1482:	4c19      	ldr	r4, [pc, #100]	; (14e8 <_sercom_get_async_baud_val+0x8c>)
    1484:	47a0      	blx	r4
    1486:	0001      	movs	r1, r0
    1488:	003a      	movs	r2, r7
    148a:	2300      	movs	r3, #0
    148c:	2000      	movs	r0, #0
    148e:	4c17      	ldr	r4, [pc, #92]	; (14ec <_sercom_get_async_baud_val+0x90>)
    1490:	47a0      	blx	r4
    1492:	2200      	movs	r2, #0
    1494:	2301      	movs	r3, #1
    1496:	1a12      	subs	r2, r2, r0
    1498:	418b      	sbcs	r3, r1
    149a:	0c12      	lsrs	r2, r2, #16
    149c:	041b      	lsls	r3, r3, #16
    149e:	431a      	orrs	r2, r3
    14a0:	8032      	strh	r2, [r6, #0]
    14a2:	2200      	movs	r2, #0
    14a4:	e7e5      	b.n	1472 <_sercom_get_async_baud_val+0x16>
    14a6:	2200      	movs	r2, #0
    14a8:	2b01      	cmp	r3, #1
    14aa:	d1f9      	bne.n	14a0 <_sercom_get_async_baud_val+0x44>
    14ac:	000a      	movs	r2, r1
    14ae:	2300      	movs	r3, #0
    14b0:	2100      	movs	r1, #0
    14b2:	4c0d      	ldr	r4, [pc, #52]	; (14e8 <_sercom_get_async_baud_val+0x8c>)
    14b4:	47a0      	blx	r4
    14b6:	0002      	movs	r2, r0
    14b8:	000b      	movs	r3, r1
    14ba:	9200      	str	r2, [sp, #0]
    14bc:	9301      	str	r3, [sp, #4]
    14be:	0038      	movs	r0, r7
    14c0:	2100      	movs	r1, #0
    14c2:	4c0a      	ldr	r4, [pc, #40]	; (14ec <_sercom_get_async_baud_val+0x90>)
    14c4:	47a0      	blx	r4
    14c6:	0005      	movs	r5, r0
    14c8:	2380      	movs	r3, #128	; 0x80
    14ca:	019b      	lsls	r3, r3, #6
    14cc:	2240      	movs	r2, #64	; 0x40
    14ce:	4298      	cmp	r0, r3
    14d0:	d8cf      	bhi.n	1472 <_sercom_get_async_baud_val+0x16>
    14d2:	0f79      	lsrs	r1, r7, #29
    14d4:	00f8      	lsls	r0, r7, #3
    14d6:	9a00      	ldr	r2, [sp, #0]
    14d8:	9b01      	ldr	r3, [sp, #4]
    14da:	47a0      	blx	r4
    14dc:	00ea      	lsls	r2, r5, #3
    14de:	1a82      	subs	r2, r0, r2
    14e0:	b2d2      	uxtb	r2, r2
    14e2:	0352      	lsls	r2, r2, #13
    14e4:	432a      	orrs	r2, r5
    14e6:	e7db      	b.n	14a0 <_sercom_get_async_baud_val+0x44>
    14e8:	000048dd 	.word	0x000048dd
    14ec:	00001379 	.word	0x00001379

000014f0 <sercom_set_gclk_generator>:
    14f0:	b510      	push	{r4, lr}
    14f2:	b082      	sub	sp, #8
    14f4:	0004      	movs	r4, r0
    14f6:	4b0e      	ldr	r3, [pc, #56]	; (1530 <sercom_set_gclk_generator+0x40>)
    14f8:	781b      	ldrb	r3, [r3, #0]
    14fa:	2b00      	cmp	r3, #0
    14fc:	d007      	beq.n	150e <sercom_set_gclk_generator+0x1e>
    14fe:	2900      	cmp	r1, #0
    1500:	d105      	bne.n	150e <sercom_set_gclk_generator+0x1e>
    1502:	4b0b      	ldr	r3, [pc, #44]	; (1530 <sercom_set_gclk_generator+0x40>)
    1504:	785b      	ldrb	r3, [r3, #1]
    1506:	4283      	cmp	r3, r0
    1508:	d010      	beq.n	152c <sercom_set_gclk_generator+0x3c>
    150a:	201d      	movs	r0, #29
    150c:	e00c      	b.n	1528 <sercom_set_gclk_generator+0x38>
    150e:	a901      	add	r1, sp, #4
    1510:	700c      	strb	r4, [r1, #0]
    1512:	2013      	movs	r0, #19
    1514:	4b07      	ldr	r3, [pc, #28]	; (1534 <sercom_set_gclk_generator+0x44>)
    1516:	4798      	blx	r3
    1518:	2013      	movs	r0, #19
    151a:	4b07      	ldr	r3, [pc, #28]	; (1538 <sercom_set_gclk_generator+0x48>)
    151c:	4798      	blx	r3
    151e:	4b04      	ldr	r3, [pc, #16]	; (1530 <sercom_set_gclk_generator+0x40>)
    1520:	705c      	strb	r4, [r3, #1]
    1522:	2201      	movs	r2, #1
    1524:	701a      	strb	r2, [r3, #0]
    1526:	2000      	movs	r0, #0
    1528:	b002      	add	sp, #8
    152a:	bd10      	pop	{r4, pc}
    152c:	2000      	movs	r0, #0
    152e:	e7fb      	b.n	1528 <sercom_set_gclk_generator+0x38>
    1530:	2000026c 	.word	0x2000026c
    1534:	000022bd 	.word	0x000022bd
    1538:	00002231 	.word	0x00002231

0000153c <_sercom_get_default_pad>:
    153c:	4b40      	ldr	r3, [pc, #256]	; (1640 <_sercom_get_default_pad+0x104>)
    153e:	4298      	cmp	r0, r3
    1540:	d031      	beq.n	15a6 <_sercom_get_default_pad+0x6a>
    1542:	d90a      	bls.n	155a <_sercom_get_default_pad+0x1e>
    1544:	4b3f      	ldr	r3, [pc, #252]	; (1644 <_sercom_get_default_pad+0x108>)
    1546:	4298      	cmp	r0, r3
    1548:	d04d      	beq.n	15e6 <_sercom_get_default_pad+0xaa>
    154a:	4b3f      	ldr	r3, [pc, #252]	; (1648 <_sercom_get_default_pad+0x10c>)
    154c:	4298      	cmp	r0, r3
    154e:	d05a      	beq.n	1606 <_sercom_get_default_pad+0xca>
    1550:	4b3e      	ldr	r3, [pc, #248]	; (164c <_sercom_get_default_pad+0x110>)
    1552:	4298      	cmp	r0, r3
    1554:	d037      	beq.n	15c6 <_sercom_get_default_pad+0x8a>
    1556:	2000      	movs	r0, #0
    1558:	4770      	bx	lr
    155a:	4b3d      	ldr	r3, [pc, #244]	; (1650 <_sercom_get_default_pad+0x114>)
    155c:	4298      	cmp	r0, r3
    155e:	d00c      	beq.n	157a <_sercom_get_default_pad+0x3e>
    1560:	4b3c      	ldr	r3, [pc, #240]	; (1654 <_sercom_get_default_pad+0x118>)
    1562:	4298      	cmp	r0, r3
    1564:	d1f7      	bne.n	1556 <_sercom_get_default_pad+0x1a>
    1566:	2901      	cmp	r1, #1
    1568:	d017      	beq.n	159a <_sercom_get_default_pad+0x5e>
    156a:	2900      	cmp	r1, #0
    156c:	d05d      	beq.n	162a <_sercom_get_default_pad+0xee>
    156e:	2902      	cmp	r1, #2
    1570:	d015      	beq.n	159e <_sercom_get_default_pad+0x62>
    1572:	2903      	cmp	r1, #3
    1574:	d015      	beq.n	15a2 <_sercom_get_default_pad+0x66>
    1576:	2000      	movs	r0, #0
    1578:	e7ee      	b.n	1558 <_sercom_get_default_pad+0x1c>
    157a:	2901      	cmp	r1, #1
    157c:	d007      	beq.n	158e <_sercom_get_default_pad+0x52>
    157e:	2900      	cmp	r1, #0
    1580:	d051      	beq.n	1626 <_sercom_get_default_pad+0xea>
    1582:	2902      	cmp	r1, #2
    1584:	d005      	beq.n	1592 <_sercom_get_default_pad+0x56>
    1586:	2903      	cmp	r1, #3
    1588:	d005      	beq.n	1596 <_sercom_get_default_pad+0x5a>
    158a:	2000      	movs	r0, #0
    158c:	e7e4      	b.n	1558 <_sercom_get_default_pad+0x1c>
    158e:	4832      	ldr	r0, [pc, #200]	; (1658 <_sercom_get_default_pad+0x11c>)
    1590:	e7e2      	b.n	1558 <_sercom_get_default_pad+0x1c>
    1592:	4832      	ldr	r0, [pc, #200]	; (165c <_sercom_get_default_pad+0x120>)
    1594:	e7e0      	b.n	1558 <_sercom_get_default_pad+0x1c>
    1596:	4832      	ldr	r0, [pc, #200]	; (1660 <_sercom_get_default_pad+0x124>)
    1598:	e7de      	b.n	1558 <_sercom_get_default_pad+0x1c>
    159a:	4832      	ldr	r0, [pc, #200]	; (1664 <_sercom_get_default_pad+0x128>)
    159c:	e7dc      	b.n	1558 <_sercom_get_default_pad+0x1c>
    159e:	4832      	ldr	r0, [pc, #200]	; (1668 <_sercom_get_default_pad+0x12c>)
    15a0:	e7da      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15a2:	4832      	ldr	r0, [pc, #200]	; (166c <_sercom_get_default_pad+0x130>)
    15a4:	e7d8      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15a6:	2901      	cmp	r1, #1
    15a8:	d007      	beq.n	15ba <_sercom_get_default_pad+0x7e>
    15aa:	2900      	cmp	r1, #0
    15ac:	d03f      	beq.n	162e <_sercom_get_default_pad+0xf2>
    15ae:	2902      	cmp	r1, #2
    15b0:	d005      	beq.n	15be <_sercom_get_default_pad+0x82>
    15b2:	2903      	cmp	r1, #3
    15b4:	d005      	beq.n	15c2 <_sercom_get_default_pad+0x86>
    15b6:	2000      	movs	r0, #0
    15b8:	e7ce      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15ba:	482d      	ldr	r0, [pc, #180]	; (1670 <_sercom_get_default_pad+0x134>)
    15bc:	e7cc      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15be:	482d      	ldr	r0, [pc, #180]	; (1674 <_sercom_get_default_pad+0x138>)
    15c0:	e7ca      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15c2:	482d      	ldr	r0, [pc, #180]	; (1678 <_sercom_get_default_pad+0x13c>)
    15c4:	e7c8      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15c6:	2901      	cmp	r1, #1
    15c8:	d007      	beq.n	15da <_sercom_get_default_pad+0x9e>
    15ca:	2900      	cmp	r1, #0
    15cc:	d031      	beq.n	1632 <_sercom_get_default_pad+0xf6>
    15ce:	2902      	cmp	r1, #2
    15d0:	d005      	beq.n	15de <_sercom_get_default_pad+0xa2>
    15d2:	2903      	cmp	r1, #3
    15d4:	d005      	beq.n	15e2 <_sercom_get_default_pad+0xa6>
    15d6:	2000      	movs	r0, #0
    15d8:	e7be      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15da:	4828      	ldr	r0, [pc, #160]	; (167c <_sercom_get_default_pad+0x140>)
    15dc:	e7bc      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15de:	4828      	ldr	r0, [pc, #160]	; (1680 <_sercom_get_default_pad+0x144>)
    15e0:	e7ba      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15e2:	4828      	ldr	r0, [pc, #160]	; (1684 <_sercom_get_default_pad+0x148>)
    15e4:	e7b8      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15e6:	2901      	cmp	r1, #1
    15e8:	d007      	beq.n	15fa <_sercom_get_default_pad+0xbe>
    15ea:	2900      	cmp	r1, #0
    15ec:	d023      	beq.n	1636 <_sercom_get_default_pad+0xfa>
    15ee:	2902      	cmp	r1, #2
    15f0:	d005      	beq.n	15fe <_sercom_get_default_pad+0xc2>
    15f2:	2903      	cmp	r1, #3
    15f4:	d005      	beq.n	1602 <_sercom_get_default_pad+0xc6>
    15f6:	2000      	movs	r0, #0
    15f8:	e7ae      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15fa:	4823      	ldr	r0, [pc, #140]	; (1688 <_sercom_get_default_pad+0x14c>)
    15fc:	e7ac      	b.n	1558 <_sercom_get_default_pad+0x1c>
    15fe:	4823      	ldr	r0, [pc, #140]	; (168c <_sercom_get_default_pad+0x150>)
    1600:	e7aa      	b.n	1558 <_sercom_get_default_pad+0x1c>
    1602:	4823      	ldr	r0, [pc, #140]	; (1690 <_sercom_get_default_pad+0x154>)
    1604:	e7a8      	b.n	1558 <_sercom_get_default_pad+0x1c>
    1606:	2901      	cmp	r1, #1
    1608:	d007      	beq.n	161a <_sercom_get_default_pad+0xde>
    160a:	2900      	cmp	r1, #0
    160c:	d015      	beq.n	163a <_sercom_get_default_pad+0xfe>
    160e:	2902      	cmp	r1, #2
    1610:	d005      	beq.n	161e <_sercom_get_default_pad+0xe2>
    1612:	2903      	cmp	r1, #3
    1614:	d005      	beq.n	1622 <_sercom_get_default_pad+0xe6>
    1616:	2000      	movs	r0, #0
    1618:	e79e      	b.n	1558 <_sercom_get_default_pad+0x1c>
    161a:	481e      	ldr	r0, [pc, #120]	; (1694 <_sercom_get_default_pad+0x158>)
    161c:	e79c      	b.n	1558 <_sercom_get_default_pad+0x1c>
    161e:	481e      	ldr	r0, [pc, #120]	; (1698 <_sercom_get_default_pad+0x15c>)
    1620:	e79a      	b.n	1558 <_sercom_get_default_pad+0x1c>
    1622:	481e      	ldr	r0, [pc, #120]	; (169c <_sercom_get_default_pad+0x160>)
    1624:	e798      	b.n	1558 <_sercom_get_default_pad+0x1c>
    1626:	481e      	ldr	r0, [pc, #120]	; (16a0 <_sercom_get_default_pad+0x164>)
    1628:	e796      	b.n	1558 <_sercom_get_default_pad+0x1c>
    162a:	2003      	movs	r0, #3
    162c:	e794      	b.n	1558 <_sercom_get_default_pad+0x1c>
    162e:	481d      	ldr	r0, [pc, #116]	; (16a4 <_sercom_get_default_pad+0x168>)
    1630:	e792      	b.n	1558 <_sercom_get_default_pad+0x1c>
    1632:	481d      	ldr	r0, [pc, #116]	; (16a8 <_sercom_get_default_pad+0x16c>)
    1634:	e790      	b.n	1558 <_sercom_get_default_pad+0x1c>
    1636:	481d      	ldr	r0, [pc, #116]	; (16ac <_sercom_get_default_pad+0x170>)
    1638:	e78e      	b.n	1558 <_sercom_get_default_pad+0x1c>
    163a:	481d      	ldr	r0, [pc, #116]	; (16b0 <_sercom_get_default_pad+0x174>)
    163c:	e78c      	b.n	1558 <_sercom_get_default_pad+0x1c>
    163e:	46c0      	nop			; (mov r8, r8)
    1640:	42001000 	.word	0x42001000
    1644:	42001800 	.word	0x42001800
    1648:	42001c00 	.word	0x42001c00
    164c:	42001400 	.word	0x42001400
    1650:	42000800 	.word	0x42000800
    1654:	42000c00 	.word	0x42000c00
    1658:	00050003 	.word	0x00050003
    165c:	00060003 	.word	0x00060003
    1660:	00070003 	.word	0x00070003
    1664:	00010003 	.word	0x00010003
    1668:	001e0003 	.word	0x001e0003
    166c:	001f0003 	.word	0x001f0003
    1670:	00090003 	.word	0x00090003
    1674:	000a0003 	.word	0x000a0003
    1678:	000b0003 	.word	0x000b0003
    167c:	00110003 	.word	0x00110003
    1680:	00120003 	.word	0x00120003
    1684:	00130003 	.word	0x00130003
    1688:	000d0003 	.word	0x000d0003
    168c:	000e0003 	.word	0x000e0003
    1690:	000f0003 	.word	0x000f0003
    1694:	00170003 	.word	0x00170003
    1698:	00180003 	.word	0x00180003
    169c:	00190003 	.word	0x00190003
    16a0:	00040003 	.word	0x00040003
    16a4:	00080003 	.word	0x00080003
    16a8:	00100003 	.word	0x00100003
    16ac:	000c0003 	.word	0x000c0003
    16b0:	00160003 	.word	0x00160003

000016b4 <_sercom_get_sercom_inst_index>:
    16b4:	b530      	push	{r4, r5, lr}
    16b6:	b087      	sub	sp, #28
    16b8:	4b0b      	ldr	r3, [pc, #44]	; (16e8 <_sercom_get_sercom_inst_index+0x34>)
    16ba:	466a      	mov	r2, sp
    16bc:	cb32      	ldmia	r3!, {r1, r4, r5}
    16be:	c232      	stmia	r2!, {r1, r4, r5}
    16c0:	cb32      	ldmia	r3!, {r1, r4, r5}
    16c2:	c232      	stmia	r2!, {r1, r4, r5}
    16c4:	9b00      	ldr	r3, [sp, #0]
    16c6:	4283      	cmp	r3, r0
    16c8:	d00b      	beq.n	16e2 <_sercom_get_sercom_inst_index+0x2e>
    16ca:	2301      	movs	r3, #1
    16cc:	009a      	lsls	r2, r3, #2
    16ce:	4669      	mov	r1, sp
    16d0:	5852      	ldr	r2, [r2, r1]
    16d2:	4282      	cmp	r2, r0
    16d4:	d006      	beq.n	16e4 <_sercom_get_sercom_inst_index+0x30>
    16d6:	3301      	adds	r3, #1
    16d8:	2b06      	cmp	r3, #6
    16da:	d1f7      	bne.n	16cc <_sercom_get_sercom_inst_index+0x18>
    16dc:	2000      	movs	r0, #0
    16de:	b007      	add	sp, #28
    16e0:	bd30      	pop	{r4, r5, pc}
    16e2:	2300      	movs	r3, #0
    16e4:	b2d8      	uxtb	r0, r3
    16e6:	e7fa      	b.n	16de <_sercom_get_sercom_inst_index+0x2a>
    16e8:	0000499c 	.word	0x0000499c

000016ec <_sercom_default_handler>:
    16ec:	4770      	bx	lr
	...

000016f0 <_sercom_set_handler>:
    16f0:	b5f0      	push	{r4, r5, r6, r7, lr}
    16f2:	4b0a      	ldr	r3, [pc, #40]	; (171c <_sercom_set_handler+0x2c>)
    16f4:	781b      	ldrb	r3, [r3, #0]
    16f6:	2b00      	cmp	r3, #0
    16f8:	d10c      	bne.n	1714 <_sercom_set_handler+0x24>
    16fa:	4f09      	ldr	r7, [pc, #36]	; (1720 <_sercom_set_handler+0x30>)
    16fc:	4e09      	ldr	r6, [pc, #36]	; (1724 <_sercom_set_handler+0x34>)
    16fe:	4d0a      	ldr	r5, [pc, #40]	; (1728 <_sercom_set_handler+0x38>)
    1700:	2400      	movs	r4, #0
    1702:	51de      	str	r6, [r3, r7]
    1704:	195a      	adds	r2, r3, r5
    1706:	6014      	str	r4, [r2, #0]
    1708:	3304      	adds	r3, #4
    170a:	2b18      	cmp	r3, #24
    170c:	d1f9      	bne.n	1702 <_sercom_set_handler+0x12>
    170e:	2201      	movs	r2, #1
    1710:	4b02      	ldr	r3, [pc, #8]	; (171c <_sercom_set_handler+0x2c>)
    1712:	701a      	strb	r2, [r3, #0]
    1714:	0080      	lsls	r0, r0, #2
    1716:	4b02      	ldr	r3, [pc, #8]	; (1720 <_sercom_set_handler+0x30>)
    1718:	50c1      	str	r1, [r0, r3]
    171a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    171c:	2000026e 	.word	0x2000026e
    1720:	20000270 	.word	0x20000270
    1724:	000016ed 	.word	0x000016ed
    1728:	2000038c 	.word	0x2000038c

0000172c <_sercom_get_interrupt_vector>:
    172c:	b500      	push	{lr}
    172e:	b083      	sub	sp, #12
    1730:	2309      	movs	r3, #9
    1732:	466a      	mov	r2, sp
    1734:	7013      	strb	r3, [r2, #0]
    1736:	3301      	adds	r3, #1
    1738:	7053      	strb	r3, [r2, #1]
    173a:	3301      	adds	r3, #1
    173c:	7093      	strb	r3, [r2, #2]
    173e:	3301      	adds	r3, #1
    1740:	70d3      	strb	r3, [r2, #3]
    1742:	3301      	adds	r3, #1
    1744:	7113      	strb	r3, [r2, #4]
    1746:	3301      	adds	r3, #1
    1748:	7153      	strb	r3, [r2, #5]
    174a:	4b03      	ldr	r3, [pc, #12]	; (1758 <_sercom_get_interrupt_vector+0x2c>)
    174c:	4798      	blx	r3
    174e:	466b      	mov	r3, sp
    1750:	5618      	ldrsb	r0, [r3, r0]
    1752:	b003      	add	sp, #12
    1754:	bd00      	pop	{pc}
    1756:	46c0      	nop			; (mov r8, r8)
    1758:	000016b5 	.word	0x000016b5

0000175c <SERCOM0_Handler>:
    175c:	b510      	push	{r4, lr}
    175e:	4b02      	ldr	r3, [pc, #8]	; (1768 <SERCOM0_Handler+0xc>)
    1760:	681b      	ldr	r3, [r3, #0]
    1762:	2000      	movs	r0, #0
    1764:	4798      	blx	r3
    1766:	bd10      	pop	{r4, pc}
    1768:	20000270 	.word	0x20000270

0000176c <SERCOM1_Handler>:
    176c:	b510      	push	{r4, lr}
    176e:	4b02      	ldr	r3, [pc, #8]	; (1778 <SERCOM1_Handler+0xc>)
    1770:	685b      	ldr	r3, [r3, #4]
    1772:	2001      	movs	r0, #1
    1774:	4798      	blx	r3
    1776:	bd10      	pop	{r4, pc}
    1778:	20000270 	.word	0x20000270

0000177c <SERCOM2_Handler>:
    177c:	b510      	push	{r4, lr}
    177e:	4b02      	ldr	r3, [pc, #8]	; (1788 <SERCOM2_Handler+0xc>)
    1780:	689b      	ldr	r3, [r3, #8]
    1782:	2002      	movs	r0, #2
    1784:	4798      	blx	r3
    1786:	bd10      	pop	{r4, pc}
    1788:	20000270 	.word	0x20000270

0000178c <SERCOM3_Handler>:
    178c:	b510      	push	{r4, lr}
    178e:	4b02      	ldr	r3, [pc, #8]	; (1798 <SERCOM3_Handler+0xc>)
    1790:	68db      	ldr	r3, [r3, #12]
    1792:	2003      	movs	r0, #3
    1794:	4798      	blx	r3
    1796:	bd10      	pop	{r4, pc}
    1798:	20000270 	.word	0x20000270

0000179c <SERCOM4_Handler>:
    179c:	b510      	push	{r4, lr}
    179e:	4b02      	ldr	r3, [pc, #8]	; (17a8 <SERCOM4_Handler+0xc>)
    17a0:	691b      	ldr	r3, [r3, #16]
    17a2:	2004      	movs	r0, #4
    17a4:	4798      	blx	r3
    17a6:	bd10      	pop	{r4, pc}
    17a8:	20000270 	.word	0x20000270

000017ac <SERCOM5_Handler>:
    17ac:	b510      	push	{r4, lr}
    17ae:	4b02      	ldr	r3, [pc, #8]	; (17b8 <SERCOM5_Handler+0xc>)
    17b0:	695b      	ldr	r3, [r3, #20]
    17b2:	2005      	movs	r0, #5
    17b4:	4798      	blx	r3
    17b6:	bd10      	pop	{r4, pc}
    17b8:	20000270 	.word	0x20000270

000017bc <usart_init>:
    17bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    17be:	46de      	mov	lr, fp
    17c0:	4657      	mov	r7, sl
    17c2:	464e      	mov	r6, r9
    17c4:	4645      	mov	r5, r8
    17c6:	b5e0      	push	{r5, r6, r7, lr}
    17c8:	b091      	sub	sp, #68	; 0x44
    17ca:	0005      	movs	r5, r0
    17cc:	000c      	movs	r4, r1
    17ce:	0016      	movs	r6, r2
    17d0:	6029      	str	r1, [r5, #0]
    17d2:	0008      	movs	r0, r1
    17d4:	4bbc      	ldr	r3, [pc, #752]	; (1ac8 <usart_init+0x30c>)
    17d6:	4798      	blx	r3
    17d8:	0002      	movs	r2, r0
    17da:	6823      	ldr	r3, [r4, #0]
    17dc:	2005      	movs	r0, #5
    17de:	07db      	lsls	r3, r3, #31
    17e0:	d506      	bpl.n	17f0 <usart_init+0x34>
    17e2:	b011      	add	sp, #68	; 0x44
    17e4:	bc3c      	pop	{r2, r3, r4, r5}
    17e6:	4690      	mov	r8, r2
    17e8:	4699      	mov	r9, r3
    17ea:	46a2      	mov	sl, r4
    17ec:	46ab      	mov	fp, r5
    17ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    17f0:	6823      	ldr	r3, [r4, #0]
    17f2:	3017      	adds	r0, #23
    17f4:	079b      	lsls	r3, r3, #30
    17f6:	d4f4      	bmi.n	17e2 <usart_init+0x26>
    17f8:	49b4      	ldr	r1, [pc, #720]	; (1acc <usart_init+0x310>)
    17fa:	6a08      	ldr	r0, [r1, #32]
    17fc:	1c97      	adds	r7, r2, #2
    17fe:	2301      	movs	r3, #1
    1800:	40bb      	lsls	r3, r7
    1802:	4303      	orrs	r3, r0
    1804:	620b      	str	r3, [r1, #32]
    1806:	a90f      	add	r1, sp, #60	; 0x3c
    1808:	272d      	movs	r7, #45	; 0x2d
    180a:	5df3      	ldrb	r3, [r6, r7]
    180c:	700b      	strb	r3, [r1, #0]
    180e:	3214      	adds	r2, #20
    1810:	b2d3      	uxtb	r3, r2
    1812:	9302      	str	r3, [sp, #8]
    1814:	0018      	movs	r0, r3
    1816:	4bae      	ldr	r3, [pc, #696]	; (1ad0 <usart_init+0x314>)
    1818:	4798      	blx	r3
    181a:	9802      	ldr	r0, [sp, #8]
    181c:	4bad      	ldr	r3, [pc, #692]	; (1ad4 <usart_init+0x318>)
    181e:	4798      	blx	r3
    1820:	5df0      	ldrb	r0, [r6, r7]
    1822:	2100      	movs	r1, #0
    1824:	4bac      	ldr	r3, [pc, #688]	; (1ad8 <usart_init+0x31c>)
    1826:	4798      	blx	r3
    1828:	7af3      	ldrb	r3, [r6, #11]
    182a:	716b      	strb	r3, [r5, #5]
    182c:	2324      	movs	r3, #36	; 0x24
    182e:	5cf3      	ldrb	r3, [r6, r3]
    1830:	71ab      	strb	r3, [r5, #6]
    1832:	2325      	movs	r3, #37	; 0x25
    1834:	5cf3      	ldrb	r3, [r6, r3]
    1836:	71eb      	strb	r3, [r5, #7]
    1838:	7ef3      	ldrb	r3, [r6, #27]
    183a:	722b      	strb	r3, [r5, #8]
    183c:	7f33      	ldrb	r3, [r6, #28]
    183e:	726b      	strb	r3, [r5, #9]
    1840:	682b      	ldr	r3, [r5, #0]
    1842:	4698      	mov	r8, r3
    1844:	0018      	movs	r0, r3
    1846:	4ba0      	ldr	r3, [pc, #640]	; (1ac8 <usart_init+0x30c>)
    1848:	4798      	blx	r3
    184a:	3014      	adds	r0, #20
    184c:	2200      	movs	r2, #0
    184e:	230e      	movs	r3, #14
    1850:	a906      	add	r1, sp, #24
    1852:	468c      	mov	ip, r1
    1854:	4463      	add	r3, ip
    1856:	801a      	strh	r2, [r3, #0]
    1858:	8a32      	ldrh	r2, [r6, #16]
    185a:	9202      	str	r2, [sp, #8]
    185c:	2380      	movs	r3, #128	; 0x80
    185e:	01db      	lsls	r3, r3, #7
    1860:	429a      	cmp	r2, r3
    1862:	d100      	bne.n	1866 <usart_init+0xaa>
    1864:	e09e      	b.n	19a4 <usart_init+0x1e8>
    1866:	d90f      	bls.n	1888 <usart_init+0xcc>
    1868:	23c0      	movs	r3, #192	; 0xc0
    186a:	01db      	lsls	r3, r3, #7
    186c:	9a02      	ldr	r2, [sp, #8]
    186e:	429a      	cmp	r2, r3
    1870:	d100      	bne.n	1874 <usart_init+0xb8>
    1872:	e092      	b.n	199a <usart_init+0x1de>
    1874:	2380      	movs	r3, #128	; 0x80
    1876:	021b      	lsls	r3, r3, #8
    1878:	429a      	cmp	r2, r3
    187a:	d000      	beq.n	187e <usart_init+0xc2>
    187c:	e11f      	b.n	1abe <usart_init+0x302>
    187e:	2303      	movs	r3, #3
    1880:	9306      	str	r3, [sp, #24]
    1882:	2300      	movs	r3, #0
    1884:	9307      	str	r3, [sp, #28]
    1886:	e008      	b.n	189a <usart_init+0xde>
    1888:	2380      	movs	r3, #128	; 0x80
    188a:	019b      	lsls	r3, r3, #6
    188c:	429a      	cmp	r2, r3
    188e:	d000      	beq.n	1892 <usart_init+0xd6>
    1890:	e115      	b.n	1abe <usart_init+0x302>
    1892:	2310      	movs	r3, #16
    1894:	9306      	str	r3, [sp, #24]
    1896:	3b0f      	subs	r3, #15
    1898:	9307      	str	r3, [sp, #28]
    189a:	6833      	ldr	r3, [r6, #0]
    189c:	9305      	str	r3, [sp, #20]
    189e:	68f3      	ldr	r3, [r6, #12]
    18a0:	9303      	str	r3, [sp, #12]
    18a2:	6973      	ldr	r3, [r6, #20]
    18a4:	9304      	str	r3, [sp, #16]
    18a6:	7e33      	ldrb	r3, [r6, #24]
    18a8:	469b      	mov	fp, r3
    18aa:	2326      	movs	r3, #38	; 0x26
    18ac:	5cf3      	ldrb	r3, [r6, r3]
    18ae:	469a      	mov	sl, r3
    18b0:	6873      	ldr	r3, [r6, #4]
    18b2:	4699      	mov	r9, r3
    18b4:	2b00      	cmp	r3, #0
    18b6:	d100      	bne.n	18ba <usart_init+0xfe>
    18b8:	e0a0      	b.n	19fc <usart_init+0x240>
    18ba:	2380      	movs	r3, #128	; 0x80
    18bc:	055b      	lsls	r3, r3, #21
    18be:	4599      	cmp	r9, r3
    18c0:	d100      	bne.n	18c4 <usart_init+0x108>
    18c2:	e084      	b.n	19ce <usart_init+0x212>
    18c4:	7e73      	ldrb	r3, [r6, #25]
    18c6:	2b00      	cmp	r3, #0
    18c8:	d002      	beq.n	18d0 <usart_init+0x114>
    18ca:	7eb3      	ldrb	r3, [r6, #26]
    18cc:	4642      	mov	r2, r8
    18ce:	7393      	strb	r3, [r2, #14]
    18d0:	682a      	ldr	r2, [r5, #0]
    18d2:	9f02      	ldr	r7, [sp, #8]
    18d4:	69d3      	ldr	r3, [r2, #28]
    18d6:	2b00      	cmp	r3, #0
    18d8:	d1fc      	bne.n	18d4 <usart_init+0x118>
    18da:	330e      	adds	r3, #14
    18dc:	aa06      	add	r2, sp, #24
    18de:	4694      	mov	ip, r2
    18e0:	4463      	add	r3, ip
    18e2:	881b      	ldrh	r3, [r3, #0]
    18e4:	4642      	mov	r2, r8
    18e6:	8193      	strh	r3, [r2, #12]
    18e8:	9b05      	ldr	r3, [sp, #20]
    18ea:	9a03      	ldr	r2, [sp, #12]
    18ec:	4313      	orrs	r3, r2
    18ee:	9a04      	ldr	r2, [sp, #16]
    18f0:	4313      	orrs	r3, r2
    18f2:	464a      	mov	r2, r9
    18f4:	4313      	orrs	r3, r2
    18f6:	431f      	orrs	r7, r3
    18f8:	465b      	mov	r3, fp
    18fa:	021b      	lsls	r3, r3, #8
    18fc:	431f      	orrs	r7, r3
    18fe:	4653      	mov	r3, sl
    1900:	075b      	lsls	r3, r3, #29
    1902:	431f      	orrs	r7, r3
    1904:	2327      	movs	r3, #39	; 0x27
    1906:	5cf3      	ldrb	r3, [r6, r3]
    1908:	2b00      	cmp	r3, #0
    190a:	d101      	bne.n	1910 <usart_init+0x154>
    190c:	3304      	adds	r3, #4
    190e:	431f      	orrs	r7, r3
    1910:	7e73      	ldrb	r3, [r6, #25]
    1912:	029b      	lsls	r3, r3, #10
    1914:	7f32      	ldrb	r2, [r6, #28]
    1916:	0252      	lsls	r2, r2, #9
    1918:	4313      	orrs	r3, r2
    191a:	7f72      	ldrb	r2, [r6, #29]
    191c:	0212      	lsls	r2, r2, #8
    191e:	4313      	orrs	r3, r2
    1920:	2224      	movs	r2, #36	; 0x24
    1922:	5cb2      	ldrb	r2, [r6, r2]
    1924:	0452      	lsls	r2, r2, #17
    1926:	4313      	orrs	r3, r2
    1928:	2225      	movs	r2, #37	; 0x25
    192a:	5cb2      	ldrb	r2, [r6, r2]
    192c:	0412      	lsls	r2, r2, #16
    192e:	4313      	orrs	r3, r2
    1930:	7ab1      	ldrb	r1, [r6, #10]
    1932:	7af2      	ldrb	r2, [r6, #11]
    1934:	4311      	orrs	r1, r2
    1936:	4319      	orrs	r1, r3
    1938:	8933      	ldrh	r3, [r6, #8]
    193a:	2bff      	cmp	r3, #255	; 0xff
    193c:	d100      	bne.n	1940 <usart_init+0x184>
    193e:	e081      	b.n	1a44 <usart_init+0x288>
    1940:	2280      	movs	r2, #128	; 0x80
    1942:	0452      	lsls	r2, r2, #17
    1944:	4317      	orrs	r7, r2
    1946:	4319      	orrs	r1, r3
    1948:	232c      	movs	r3, #44	; 0x2c
    194a:	5cf3      	ldrb	r3, [r6, r3]
    194c:	2b00      	cmp	r3, #0
    194e:	d103      	bne.n	1958 <usart_init+0x19c>
    1950:	4b62      	ldr	r3, [pc, #392]	; (1adc <usart_init+0x320>)
    1952:	789b      	ldrb	r3, [r3, #2]
    1954:	079b      	lsls	r3, r3, #30
    1956:	d501      	bpl.n	195c <usart_init+0x1a0>
    1958:	2380      	movs	r3, #128	; 0x80
    195a:	431f      	orrs	r7, r3
    195c:	682a      	ldr	r2, [r5, #0]
    195e:	69d3      	ldr	r3, [r2, #28]
    1960:	2b00      	cmp	r3, #0
    1962:	d1fc      	bne.n	195e <usart_init+0x1a2>
    1964:	4643      	mov	r3, r8
    1966:	6059      	str	r1, [r3, #4]
    1968:	682a      	ldr	r2, [r5, #0]
    196a:	69d3      	ldr	r3, [r2, #28]
    196c:	2b00      	cmp	r3, #0
    196e:	d1fc      	bne.n	196a <usart_init+0x1ae>
    1970:	4643      	mov	r3, r8
    1972:	601f      	str	r7, [r3, #0]
    1974:	ab0e      	add	r3, sp, #56	; 0x38
    1976:	2280      	movs	r2, #128	; 0x80
    1978:	701a      	strb	r2, [r3, #0]
    197a:	2200      	movs	r2, #0
    197c:	705a      	strb	r2, [r3, #1]
    197e:	70da      	strb	r2, [r3, #3]
    1980:	709a      	strb	r2, [r3, #2]
    1982:	6b33      	ldr	r3, [r6, #48]	; 0x30
    1984:	930a      	str	r3, [sp, #40]	; 0x28
    1986:	6b73      	ldr	r3, [r6, #52]	; 0x34
    1988:	930b      	str	r3, [sp, #44]	; 0x2c
    198a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    198c:	930c      	str	r3, [sp, #48]	; 0x30
    198e:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
    1990:	9302      	str	r3, [sp, #8]
    1992:	930d      	str	r3, [sp, #52]	; 0x34
    1994:	2700      	movs	r7, #0
    1996:	ae0a      	add	r6, sp, #40	; 0x28
    1998:	e063      	b.n	1a62 <usart_init+0x2a6>
    199a:	2308      	movs	r3, #8
    199c:	9306      	str	r3, [sp, #24]
    199e:	3b07      	subs	r3, #7
    19a0:	9307      	str	r3, [sp, #28]
    19a2:	e77a      	b.n	189a <usart_init+0xde>
    19a4:	6833      	ldr	r3, [r6, #0]
    19a6:	9305      	str	r3, [sp, #20]
    19a8:	68f3      	ldr	r3, [r6, #12]
    19aa:	9303      	str	r3, [sp, #12]
    19ac:	6973      	ldr	r3, [r6, #20]
    19ae:	9304      	str	r3, [sp, #16]
    19b0:	7e33      	ldrb	r3, [r6, #24]
    19b2:	469b      	mov	fp, r3
    19b4:	2326      	movs	r3, #38	; 0x26
    19b6:	5cf3      	ldrb	r3, [r6, r3]
    19b8:	469a      	mov	sl, r3
    19ba:	6873      	ldr	r3, [r6, #4]
    19bc:	4699      	mov	r9, r3
    19be:	2b00      	cmp	r3, #0
    19c0:	d018      	beq.n	19f4 <usart_init+0x238>
    19c2:	2380      	movs	r3, #128	; 0x80
    19c4:	055b      	lsls	r3, r3, #21
    19c6:	4599      	cmp	r9, r3
    19c8:	d001      	beq.n	19ce <usart_init+0x212>
    19ca:	2000      	movs	r0, #0
    19cc:	e025      	b.n	1a1a <usart_init+0x25e>
    19ce:	2327      	movs	r3, #39	; 0x27
    19d0:	5cf3      	ldrb	r3, [r6, r3]
    19d2:	2b00      	cmp	r3, #0
    19d4:	d000      	beq.n	19d8 <usart_init+0x21c>
    19d6:	e775      	b.n	18c4 <usart_init+0x108>
    19d8:	6a33      	ldr	r3, [r6, #32]
    19da:	001f      	movs	r7, r3
    19dc:	b2c0      	uxtb	r0, r0
    19de:	4b40      	ldr	r3, [pc, #256]	; (1ae0 <usart_init+0x324>)
    19e0:	4798      	blx	r3
    19e2:	0001      	movs	r1, r0
    19e4:	220e      	movs	r2, #14
    19e6:	ab06      	add	r3, sp, #24
    19e8:	469c      	mov	ip, r3
    19ea:	4462      	add	r2, ip
    19ec:	0038      	movs	r0, r7
    19ee:	4b3d      	ldr	r3, [pc, #244]	; (1ae4 <usart_init+0x328>)
    19f0:	4798      	blx	r3
    19f2:	e012      	b.n	1a1a <usart_init+0x25e>
    19f4:	2308      	movs	r3, #8
    19f6:	9306      	str	r3, [sp, #24]
    19f8:	2300      	movs	r3, #0
    19fa:	9307      	str	r3, [sp, #28]
    19fc:	2327      	movs	r3, #39	; 0x27
    19fe:	5cf3      	ldrb	r3, [r6, r3]
    1a00:	2b00      	cmp	r3, #0
    1a02:	d00e      	beq.n	1a22 <usart_init+0x266>
    1a04:	9b06      	ldr	r3, [sp, #24]
    1a06:	9300      	str	r3, [sp, #0]
    1a08:	9b07      	ldr	r3, [sp, #28]
    1a0a:	220e      	movs	r2, #14
    1a0c:	a906      	add	r1, sp, #24
    1a0e:	468c      	mov	ip, r1
    1a10:	4462      	add	r2, ip
    1a12:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    1a14:	6a30      	ldr	r0, [r6, #32]
    1a16:	4f34      	ldr	r7, [pc, #208]	; (1ae8 <usart_init+0x32c>)
    1a18:	47b8      	blx	r7
    1a1a:	2800      	cmp	r0, #0
    1a1c:	d000      	beq.n	1a20 <usart_init+0x264>
    1a1e:	e6e0      	b.n	17e2 <usart_init+0x26>
    1a20:	e750      	b.n	18c4 <usart_init+0x108>
    1a22:	6a33      	ldr	r3, [r6, #32]
    1a24:	001f      	movs	r7, r3
    1a26:	b2c0      	uxtb	r0, r0
    1a28:	4b2d      	ldr	r3, [pc, #180]	; (1ae0 <usart_init+0x324>)
    1a2a:	4798      	blx	r3
    1a2c:	0001      	movs	r1, r0
    1a2e:	9b06      	ldr	r3, [sp, #24]
    1a30:	9300      	str	r3, [sp, #0]
    1a32:	9b07      	ldr	r3, [sp, #28]
    1a34:	220e      	movs	r2, #14
    1a36:	a806      	add	r0, sp, #24
    1a38:	4684      	mov	ip, r0
    1a3a:	4462      	add	r2, ip
    1a3c:	0038      	movs	r0, r7
    1a3e:	4f2a      	ldr	r7, [pc, #168]	; (1ae8 <usart_init+0x32c>)
    1a40:	47b8      	blx	r7
    1a42:	e7ea      	b.n	1a1a <usart_init+0x25e>
    1a44:	7ef3      	ldrb	r3, [r6, #27]
    1a46:	2b00      	cmp	r3, #0
    1a48:	d100      	bne.n	1a4c <usart_init+0x290>
    1a4a:	e77d      	b.n	1948 <usart_init+0x18c>
    1a4c:	2380      	movs	r3, #128	; 0x80
    1a4e:	04db      	lsls	r3, r3, #19
    1a50:	431f      	orrs	r7, r3
    1a52:	e779      	b.n	1948 <usart_init+0x18c>
    1a54:	0020      	movs	r0, r4
    1a56:	4b25      	ldr	r3, [pc, #148]	; (1aec <usart_init+0x330>)
    1a58:	4798      	blx	r3
    1a5a:	e007      	b.n	1a6c <usart_init+0x2b0>
    1a5c:	3701      	adds	r7, #1
    1a5e:	2f04      	cmp	r7, #4
    1a60:	d00d      	beq.n	1a7e <usart_init+0x2c2>
    1a62:	b2f9      	uxtb	r1, r7
    1a64:	00bb      	lsls	r3, r7, #2
    1a66:	5998      	ldr	r0, [r3, r6]
    1a68:	2800      	cmp	r0, #0
    1a6a:	d0f3      	beq.n	1a54 <usart_init+0x298>
    1a6c:	1c43      	adds	r3, r0, #1
    1a6e:	d0f5      	beq.n	1a5c <usart_init+0x2a0>
    1a70:	a90e      	add	r1, sp, #56	; 0x38
    1a72:	7008      	strb	r0, [r1, #0]
    1a74:	0c00      	lsrs	r0, r0, #16
    1a76:	b2c0      	uxtb	r0, r0
    1a78:	4b1d      	ldr	r3, [pc, #116]	; (1af0 <usart_init+0x334>)
    1a7a:	4798      	blx	r3
    1a7c:	e7ee      	b.n	1a5c <usart_init+0x2a0>
    1a7e:	2300      	movs	r3, #0
    1a80:	60eb      	str	r3, [r5, #12]
    1a82:	612b      	str	r3, [r5, #16]
    1a84:	616b      	str	r3, [r5, #20]
    1a86:	61ab      	str	r3, [r5, #24]
    1a88:	61eb      	str	r3, [r5, #28]
    1a8a:	622b      	str	r3, [r5, #32]
    1a8c:	62ab      	str	r3, [r5, #40]	; 0x28
    1a8e:	626b      	str	r3, [r5, #36]	; 0x24
    1a90:	2200      	movs	r2, #0
    1a92:	85eb      	strh	r3, [r5, #46]	; 0x2e
    1a94:	85ab      	strh	r3, [r5, #44]	; 0x2c
    1a96:	3330      	adds	r3, #48	; 0x30
    1a98:	54ea      	strb	r2, [r5, r3]
    1a9a:	3301      	adds	r3, #1
    1a9c:	54ea      	strb	r2, [r5, r3]
    1a9e:	3301      	adds	r3, #1
    1aa0:	54ea      	strb	r2, [r5, r3]
    1aa2:	3301      	adds	r3, #1
    1aa4:	54ea      	strb	r2, [r5, r3]
    1aa6:	6828      	ldr	r0, [r5, #0]
    1aa8:	4b07      	ldr	r3, [pc, #28]	; (1ac8 <usart_init+0x30c>)
    1aaa:	4798      	blx	r3
    1aac:	0004      	movs	r4, r0
    1aae:	4911      	ldr	r1, [pc, #68]	; (1af4 <usart_init+0x338>)
    1ab0:	4b11      	ldr	r3, [pc, #68]	; (1af8 <usart_init+0x33c>)
    1ab2:	4798      	blx	r3
    1ab4:	00a4      	lsls	r4, r4, #2
    1ab6:	4b11      	ldr	r3, [pc, #68]	; (1afc <usart_init+0x340>)
    1ab8:	50e5      	str	r5, [r4, r3]
    1aba:	2000      	movs	r0, #0
    1abc:	e691      	b.n	17e2 <usart_init+0x26>
    1abe:	2310      	movs	r3, #16
    1ac0:	9306      	str	r3, [sp, #24]
    1ac2:	2300      	movs	r3, #0
    1ac4:	9307      	str	r3, [sp, #28]
    1ac6:	e6e8      	b.n	189a <usart_init+0xde>
    1ac8:	000016b5 	.word	0x000016b5
    1acc:	40000400 	.word	0x40000400
    1ad0:	000022bd 	.word	0x000022bd
    1ad4:	00002231 	.word	0x00002231
    1ad8:	000014f1 	.word	0x000014f1
    1adc:	41002000 	.word	0x41002000
    1ae0:	000022d9 	.word	0x000022d9
    1ae4:	00001433 	.word	0x00001433
    1ae8:	0000145d 	.word	0x0000145d
    1aec:	0000153d 	.word	0x0000153d
    1af0:	000023b5 	.word	0x000023b5
    1af4:	00001be5 	.word	0x00001be5
    1af8:	000016f1 	.word	0x000016f1
    1afc:	2000038c 	.word	0x2000038c

00001b00 <_usart_write_buffer>:
    1b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b02:	0006      	movs	r6, r0
    1b04:	000c      	movs	r4, r1
    1b06:	0015      	movs	r5, r2
    1b08:	6807      	ldr	r7, [r0, #0]
    1b0a:	4b0a      	ldr	r3, [pc, #40]	; (1b34 <_usart_write_buffer+0x34>)
    1b0c:	4798      	blx	r3
    1b0e:	8df3      	ldrh	r3, [r6, #46]	; 0x2e
    1b10:	b29b      	uxth	r3, r3
    1b12:	2b00      	cmp	r3, #0
    1b14:	d003      	beq.n	1b1e <_usart_write_buffer+0x1e>
    1b16:	4b08      	ldr	r3, [pc, #32]	; (1b38 <_usart_write_buffer+0x38>)
    1b18:	4798      	blx	r3
    1b1a:	2005      	movs	r0, #5
    1b1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1b1e:	85f5      	strh	r5, [r6, #46]	; 0x2e
    1b20:	4b05      	ldr	r3, [pc, #20]	; (1b38 <_usart_write_buffer+0x38>)
    1b22:	4798      	blx	r3
    1b24:	62b4      	str	r4, [r6, #40]	; 0x28
    1b26:	2205      	movs	r2, #5
    1b28:	2333      	movs	r3, #51	; 0x33
    1b2a:	54f2      	strb	r2, [r6, r3]
    1b2c:	3b32      	subs	r3, #50	; 0x32
    1b2e:	75bb      	strb	r3, [r7, #22]
    1b30:	2000      	movs	r0, #0
    1b32:	e7f3      	b.n	1b1c <_usart_write_buffer+0x1c>
    1b34:	000010dd 	.word	0x000010dd
    1b38:	0000111d 	.word	0x0000111d

00001b3c <_usart_read_buffer>:
    1b3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b3e:	0004      	movs	r4, r0
    1b40:	000d      	movs	r5, r1
    1b42:	0016      	movs	r6, r2
    1b44:	6807      	ldr	r7, [r0, #0]
    1b46:	4b0f      	ldr	r3, [pc, #60]	; (1b84 <_usart_read_buffer+0x48>)
    1b48:	4798      	blx	r3
    1b4a:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    1b4c:	b29b      	uxth	r3, r3
    1b4e:	2b00      	cmp	r3, #0
    1b50:	d003      	beq.n	1b5a <_usart_read_buffer+0x1e>
    1b52:	4b0d      	ldr	r3, [pc, #52]	; (1b88 <_usart_read_buffer+0x4c>)
    1b54:	4798      	blx	r3
    1b56:	2005      	movs	r0, #5
    1b58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1b5a:	85a6      	strh	r6, [r4, #44]	; 0x2c
    1b5c:	4b0a      	ldr	r3, [pc, #40]	; (1b88 <_usart_read_buffer+0x4c>)
    1b5e:	4798      	blx	r3
    1b60:	6265      	str	r5, [r4, #36]	; 0x24
    1b62:	2205      	movs	r2, #5
    1b64:	2332      	movs	r3, #50	; 0x32
    1b66:	54e2      	strb	r2, [r4, r3]
    1b68:	3b2e      	subs	r3, #46	; 0x2e
    1b6a:	75bb      	strb	r3, [r7, #22]
    1b6c:	7a23      	ldrb	r3, [r4, #8]
    1b6e:	2b00      	cmp	r3, #0
    1b70:	d001      	beq.n	1b76 <_usart_read_buffer+0x3a>
    1b72:	2320      	movs	r3, #32
    1b74:	75bb      	strb	r3, [r7, #22]
    1b76:	7a63      	ldrb	r3, [r4, #9]
    1b78:	2000      	movs	r0, #0
    1b7a:	2b00      	cmp	r3, #0
    1b7c:	d0ec      	beq.n	1b58 <_usart_read_buffer+0x1c>
    1b7e:	2308      	movs	r3, #8
    1b80:	75bb      	strb	r3, [r7, #22]
    1b82:	e7e9      	b.n	1b58 <_usart_read_buffer+0x1c>
    1b84:	000010dd 	.word	0x000010dd
    1b88:	0000111d 	.word	0x0000111d

00001b8c <usart_register_callback>:
    1b8c:	1c93      	adds	r3, r2, #2
    1b8e:	009b      	lsls	r3, r3, #2
    1b90:	18c3      	adds	r3, r0, r3
    1b92:	6059      	str	r1, [r3, #4]
    1b94:	2130      	movs	r1, #48	; 0x30
    1b96:	2301      	movs	r3, #1
    1b98:	4093      	lsls	r3, r2
    1b9a:	001a      	movs	r2, r3
    1b9c:	5c43      	ldrb	r3, [r0, r1]
    1b9e:	4313      	orrs	r3, r2
    1ba0:	5443      	strb	r3, [r0, r1]
    1ba2:	4770      	bx	lr

00001ba4 <usart_write_buffer_job>:
    1ba4:	b510      	push	{r4, lr}
    1ba6:	2317      	movs	r3, #23
    1ba8:	2a00      	cmp	r2, #0
    1baa:	d101      	bne.n	1bb0 <usart_write_buffer_job+0xc>
    1bac:	0018      	movs	r0, r3
    1bae:	bd10      	pop	{r4, pc}
    1bb0:	79c4      	ldrb	r4, [r0, #7]
    1bb2:	3305      	adds	r3, #5
    1bb4:	2c00      	cmp	r4, #0
    1bb6:	d0f9      	beq.n	1bac <usart_write_buffer_job+0x8>
    1bb8:	4b01      	ldr	r3, [pc, #4]	; (1bc0 <usart_write_buffer_job+0x1c>)
    1bba:	4798      	blx	r3
    1bbc:	0003      	movs	r3, r0
    1bbe:	e7f5      	b.n	1bac <usart_write_buffer_job+0x8>
    1bc0:	00001b01 	.word	0x00001b01

00001bc4 <usart_read_buffer_job>:
    1bc4:	b510      	push	{r4, lr}
    1bc6:	2317      	movs	r3, #23
    1bc8:	2a00      	cmp	r2, #0
    1bca:	d101      	bne.n	1bd0 <usart_read_buffer_job+0xc>
    1bcc:	0018      	movs	r0, r3
    1bce:	bd10      	pop	{r4, pc}
    1bd0:	7984      	ldrb	r4, [r0, #6]
    1bd2:	3305      	adds	r3, #5
    1bd4:	2c00      	cmp	r4, #0
    1bd6:	d0f9      	beq.n	1bcc <usart_read_buffer_job+0x8>
    1bd8:	4b01      	ldr	r3, [pc, #4]	; (1be0 <usart_read_buffer_job+0x1c>)
    1bda:	4798      	blx	r3
    1bdc:	0003      	movs	r3, r0
    1bde:	e7f5      	b.n	1bcc <usart_read_buffer_job+0x8>
    1be0:	00001b3d 	.word	0x00001b3d

00001be4 <_usart_interrupt_handler>:
    1be4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1be6:	0080      	lsls	r0, r0, #2
    1be8:	4b62      	ldr	r3, [pc, #392]	; (1d74 <_usart_interrupt_handler+0x190>)
    1bea:	58c5      	ldr	r5, [r0, r3]
    1bec:	682c      	ldr	r4, [r5, #0]
    1bee:	69e3      	ldr	r3, [r4, #28]
    1bf0:	2b00      	cmp	r3, #0
    1bf2:	d1fc      	bne.n	1bee <_usart_interrupt_handler+0xa>
    1bf4:	7e23      	ldrb	r3, [r4, #24]
    1bf6:	7da6      	ldrb	r6, [r4, #22]
    1bf8:	401e      	ands	r6, r3
    1bfa:	2330      	movs	r3, #48	; 0x30
    1bfc:	5ceb      	ldrb	r3, [r5, r3]
    1bfe:	2231      	movs	r2, #49	; 0x31
    1c00:	5caf      	ldrb	r7, [r5, r2]
    1c02:	401f      	ands	r7, r3
    1c04:	07f3      	lsls	r3, r6, #31
    1c06:	d522      	bpl.n	1c4e <_usart_interrupt_handler+0x6a>
    1c08:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    1c0a:	b29b      	uxth	r3, r3
    1c0c:	2b00      	cmp	r3, #0
    1c0e:	d01c      	beq.n	1c4a <_usart_interrupt_handler+0x66>
    1c10:	6aaa      	ldr	r2, [r5, #40]	; 0x28
    1c12:	7813      	ldrb	r3, [r2, #0]
    1c14:	b2db      	uxtb	r3, r3
    1c16:	1c51      	adds	r1, r2, #1
    1c18:	62a9      	str	r1, [r5, #40]	; 0x28
    1c1a:	7969      	ldrb	r1, [r5, #5]
    1c1c:	2901      	cmp	r1, #1
    1c1e:	d00e      	beq.n	1c3e <_usart_interrupt_handler+0x5a>
    1c20:	b29b      	uxth	r3, r3
    1c22:	05db      	lsls	r3, r3, #23
    1c24:	0ddb      	lsrs	r3, r3, #23
    1c26:	8523      	strh	r3, [r4, #40]	; 0x28
    1c28:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    1c2a:	3b01      	subs	r3, #1
    1c2c:	b29b      	uxth	r3, r3
    1c2e:	85eb      	strh	r3, [r5, #46]	; 0x2e
    1c30:	2b00      	cmp	r3, #0
    1c32:	d10c      	bne.n	1c4e <_usart_interrupt_handler+0x6a>
    1c34:	3301      	adds	r3, #1
    1c36:	7523      	strb	r3, [r4, #20]
    1c38:	3301      	adds	r3, #1
    1c3a:	75a3      	strb	r3, [r4, #22]
    1c3c:	e007      	b.n	1c4e <_usart_interrupt_handler+0x6a>
    1c3e:	7851      	ldrb	r1, [r2, #1]
    1c40:	0209      	lsls	r1, r1, #8
    1c42:	430b      	orrs	r3, r1
    1c44:	3202      	adds	r2, #2
    1c46:	62aa      	str	r2, [r5, #40]	; 0x28
    1c48:	e7eb      	b.n	1c22 <_usart_interrupt_handler+0x3e>
    1c4a:	2301      	movs	r3, #1
    1c4c:	7523      	strb	r3, [r4, #20]
    1c4e:	07b3      	lsls	r3, r6, #30
    1c50:	d506      	bpl.n	1c60 <_usart_interrupt_handler+0x7c>
    1c52:	2302      	movs	r3, #2
    1c54:	7523      	strb	r3, [r4, #20]
    1c56:	2200      	movs	r2, #0
    1c58:	3331      	adds	r3, #49	; 0x31
    1c5a:	54ea      	strb	r2, [r5, r3]
    1c5c:	07fb      	lsls	r3, r7, #31
    1c5e:	d41a      	bmi.n	1c96 <_usart_interrupt_handler+0xb2>
    1c60:	0773      	lsls	r3, r6, #29
    1c62:	d565      	bpl.n	1d30 <_usart_interrupt_handler+0x14c>
    1c64:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    1c66:	b29b      	uxth	r3, r3
    1c68:	2b00      	cmp	r3, #0
    1c6a:	d05f      	beq.n	1d2c <_usart_interrupt_handler+0x148>
    1c6c:	8b63      	ldrh	r3, [r4, #26]
    1c6e:	b2db      	uxtb	r3, r3
    1c70:	071a      	lsls	r2, r3, #28
    1c72:	d414      	bmi.n	1c9e <_usart_interrupt_handler+0xba>
    1c74:	223f      	movs	r2, #63	; 0x3f
    1c76:	4013      	ands	r3, r2
    1c78:	2b00      	cmp	r3, #0
    1c7a:	d034      	beq.n	1ce6 <_usart_interrupt_handler+0x102>
    1c7c:	079a      	lsls	r2, r3, #30
    1c7e:	d511      	bpl.n	1ca4 <_usart_interrupt_handler+0xc0>
    1c80:	221a      	movs	r2, #26
    1c82:	2332      	movs	r3, #50	; 0x32
    1c84:	54ea      	strb	r2, [r5, r3]
    1c86:	3b30      	subs	r3, #48	; 0x30
    1c88:	8363      	strh	r3, [r4, #26]
    1c8a:	077b      	lsls	r3, r7, #29
    1c8c:	d550      	bpl.n	1d30 <_usart_interrupt_handler+0x14c>
    1c8e:	0028      	movs	r0, r5
    1c90:	696b      	ldr	r3, [r5, #20]
    1c92:	4798      	blx	r3
    1c94:	e04c      	b.n	1d30 <_usart_interrupt_handler+0x14c>
    1c96:	0028      	movs	r0, r5
    1c98:	68eb      	ldr	r3, [r5, #12]
    1c9a:	4798      	blx	r3
    1c9c:	e7e0      	b.n	1c60 <_usart_interrupt_handler+0x7c>
    1c9e:	2237      	movs	r2, #55	; 0x37
    1ca0:	4013      	ands	r3, r2
    1ca2:	e7e9      	b.n	1c78 <_usart_interrupt_handler+0x94>
    1ca4:	075a      	lsls	r2, r3, #29
    1ca6:	d505      	bpl.n	1cb4 <_usart_interrupt_handler+0xd0>
    1ca8:	221e      	movs	r2, #30
    1caa:	2332      	movs	r3, #50	; 0x32
    1cac:	54ea      	strb	r2, [r5, r3]
    1cae:	3b2e      	subs	r3, #46	; 0x2e
    1cb0:	8363      	strh	r3, [r4, #26]
    1cb2:	e7ea      	b.n	1c8a <_usart_interrupt_handler+0xa6>
    1cb4:	07da      	lsls	r2, r3, #31
    1cb6:	d505      	bpl.n	1cc4 <_usart_interrupt_handler+0xe0>
    1cb8:	2213      	movs	r2, #19
    1cba:	2332      	movs	r3, #50	; 0x32
    1cbc:	54ea      	strb	r2, [r5, r3]
    1cbe:	3b31      	subs	r3, #49	; 0x31
    1cc0:	8363      	strh	r3, [r4, #26]
    1cc2:	e7e2      	b.n	1c8a <_usart_interrupt_handler+0xa6>
    1cc4:	06da      	lsls	r2, r3, #27
    1cc6:	d505      	bpl.n	1cd4 <_usart_interrupt_handler+0xf0>
    1cc8:	2242      	movs	r2, #66	; 0x42
    1cca:	2332      	movs	r3, #50	; 0x32
    1ccc:	54ea      	strb	r2, [r5, r3]
    1cce:	3b22      	subs	r3, #34	; 0x22
    1cd0:	8363      	strh	r3, [r4, #26]
    1cd2:	e7da      	b.n	1c8a <_usart_interrupt_handler+0xa6>
    1cd4:	2220      	movs	r2, #32
    1cd6:	421a      	tst	r2, r3
    1cd8:	d0d7      	beq.n	1c8a <_usart_interrupt_handler+0xa6>
    1cda:	3221      	adds	r2, #33	; 0x21
    1cdc:	2332      	movs	r3, #50	; 0x32
    1cde:	54ea      	strb	r2, [r5, r3]
    1ce0:	3b12      	subs	r3, #18
    1ce2:	8363      	strh	r3, [r4, #26]
    1ce4:	e7d1      	b.n	1c8a <_usart_interrupt_handler+0xa6>
    1ce6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    1ce8:	05db      	lsls	r3, r3, #23
    1cea:	0ddb      	lsrs	r3, r3, #23
    1cec:	b2da      	uxtb	r2, r3
    1cee:	6a69      	ldr	r1, [r5, #36]	; 0x24
    1cf0:	700a      	strb	r2, [r1, #0]
    1cf2:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    1cf4:	1c51      	adds	r1, r2, #1
    1cf6:	6269      	str	r1, [r5, #36]	; 0x24
    1cf8:	7969      	ldrb	r1, [r5, #5]
    1cfa:	2901      	cmp	r1, #1
    1cfc:	d010      	beq.n	1d20 <_usart_interrupt_handler+0x13c>
    1cfe:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    1d00:	3b01      	subs	r3, #1
    1d02:	b29b      	uxth	r3, r3
    1d04:	85ab      	strh	r3, [r5, #44]	; 0x2c
    1d06:	2b00      	cmp	r3, #0
    1d08:	d112      	bne.n	1d30 <_usart_interrupt_handler+0x14c>
    1d0a:	3304      	adds	r3, #4
    1d0c:	7523      	strb	r3, [r4, #20]
    1d0e:	2200      	movs	r2, #0
    1d10:	332e      	adds	r3, #46	; 0x2e
    1d12:	54ea      	strb	r2, [r5, r3]
    1d14:	07bb      	lsls	r3, r7, #30
    1d16:	d50b      	bpl.n	1d30 <_usart_interrupt_handler+0x14c>
    1d18:	0028      	movs	r0, r5
    1d1a:	692b      	ldr	r3, [r5, #16]
    1d1c:	4798      	blx	r3
    1d1e:	e007      	b.n	1d30 <_usart_interrupt_handler+0x14c>
    1d20:	0a1b      	lsrs	r3, r3, #8
    1d22:	7053      	strb	r3, [r2, #1]
    1d24:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    1d26:	3301      	adds	r3, #1
    1d28:	626b      	str	r3, [r5, #36]	; 0x24
    1d2a:	e7e8      	b.n	1cfe <_usart_interrupt_handler+0x11a>
    1d2c:	2304      	movs	r3, #4
    1d2e:	7523      	strb	r3, [r4, #20]
    1d30:	06f3      	lsls	r3, r6, #27
    1d32:	d504      	bpl.n	1d3e <_usart_interrupt_handler+0x15a>
    1d34:	2310      	movs	r3, #16
    1d36:	7523      	strb	r3, [r4, #20]
    1d38:	7623      	strb	r3, [r4, #24]
    1d3a:	06fb      	lsls	r3, r7, #27
    1d3c:	d40e      	bmi.n	1d5c <_usart_interrupt_handler+0x178>
    1d3e:	06b3      	lsls	r3, r6, #26
    1d40:	d504      	bpl.n	1d4c <_usart_interrupt_handler+0x168>
    1d42:	2320      	movs	r3, #32
    1d44:	7523      	strb	r3, [r4, #20]
    1d46:	7623      	strb	r3, [r4, #24]
    1d48:	073b      	lsls	r3, r7, #28
    1d4a:	d40b      	bmi.n	1d64 <_usart_interrupt_handler+0x180>
    1d4c:	0733      	lsls	r3, r6, #28
    1d4e:	d504      	bpl.n	1d5a <_usart_interrupt_handler+0x176>
    1d50:	2308      	movs	r3, #8
    1d52:	7523      	strb	r3, [r4, #20]
    1d54:	7623      	strb	r3, [r4, #24]
    1d56:	06bb      	lsls	r3, r7, #26
    1d58:	d408      	bmi.n	1d6c <_usart_interrupt_handler+0x188>
    1d5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1d5c:	0028      	movs	r0, r5
    1d5e:	69eb      	ldr	r3, [r5, #28]
    1d60:	4798      	blx	r3
    1d62:	e7ec      	b.n	1d3e <_usart_interrupt_handler+0x15a>
    1d64:	0028      	movs	r0, r5
    1d66:	69ab      	ldr	r3, [r5, #24]
    1d68:	4798      	blx	r3
    1d6a:	e7ef      	b.n	1d4c <_usart_interrupt_handler+0x168>
    1d6c:	6a2b      	ldr	r3, [r5, #32]
    1d6e:	0028      	movs	r0, r5
    1d70:	4798      	blx	r3
    1d72:	e7f2      	b.n	1d5a <_usart_interrupt_handler+0x176>
    1d74:	2000038c 	.word	0x2000038c

00001d78 <system_clock_source_get_hz>:
    1d78:	b510      	push	{r4, lr}
    1d7a:	2808      	cmp	r0, #8
    1d7c:	d803      	bhi.n	1d86 <system_clock_source_get_hz+0xe>
    1d7e:	0080      	lsls	r0, r0, #2
    1d80:	4b1b      	ldr	r3, [pc, #108]	; (1df0 <system_clock_source_get_hz+0x78>)
    1d82:	581b      	ldr	r3, [r3, r0]
    1d84:	469f      	mov	pc, r3
    1d86:	2000      	movs	r0, #0
    1d88:	e030      	b.n	1dec <system_clock_source_get_hz+0x74>
    1d8a:	4b1a      	ldr	r3, [pc, #104]	; (1df4 <system_clock_source_get_hz+0x7c>)
    1d8c:	6918      	ldr	r0, [r3, #16]
    1d8e:	e02d      	b.n	1dec <system_clock_source_get_hz+0x74>
    1d90:	4b19      	ldr	r3, [pc, #100]	; (1df8 <system_clock_source_get_hz+0x80>)
    1d92:	6a1b      	ldr	r3, [r3, #32]
    1d94:	059b      	lsls	r3, r3, #22
    1d96:	0f9b      	lsrs	r3, r3, #30
    1d98:	4818      	ldr	r0, [pc, #96]	; (1dfc <system_clock_source_get_hz+0x84>)
    1d9a:	40d8      	lsrs	r0, r3
    1d9c:	e026      	b.n	1dec <system_clock_source_get_hz+0x74>
    1d9e:	4b15      	ldr	r3, [pc, #84]	; (1df4 <system_clock_source_get_hz+0x7c>)
    1da0:	6958      	ldr	r0, [r3, #20]
    1da2:	e023      	b.n	1dec <system_clock_source_get_hz+0x74>
    1da4:	4b13      	ldr	r3, [pc, #76]	; (1df4 <system_clock_source_get_hz+0x7c>)
    1da6:	681b      	ldr	r3, [r3, #0]
    1da8:	2000      	movs	r0, #0
    1daa:	079b      	lsls	r3, r3, #30
    1dac:	d51e      	bpl.n	1dec <system_clock_source_get_hz+0x74>
    1dae:	4912      	ldr	r1, [pc, #72]	; (1df8 <system_clock_source_get_hz+0x80>)
    1db0:	2210      	movs	r2, #16
    1db2:	68cb      	ldr	r3, [r1, #12]
    1db4:	421a      	tst	r2, r3
    1db6:	d0fc      	beq.n	1db2 <system_clock_source_get_hz+0x3a>
    1db8:	4b0e      	ldr	r3, [pc, #56]	; (1df4 <system_clock_source_get_hz+0x7c>)
    1dba:	681b      	ldr	r3, [r3, #0]
    1dbc:	075b      	lsls	r3, r3, #29
    1dbe:	d401      	bmi.n	1dc4 <system_clock_source_get_hz+0x4c>
    1dc0:	480f      	ldr	r0, [pc, #60]	; (1e00 <system_clock_source_get_hz+0x88>)
    1dc2:	e013      	b.n	1dec <system_clock_source_get_hz+0x74>
    1dc4:	2000      	movs	r0, #0
    1dc6:	4b0f      	ldr	r3, [pc, #60]	; (1e04 <system_clock_source_get_hz+0x8c>)
    1dc8:	4798      	blx	r3
    1dca:	4b0a      	ldr	r3, [pc, #40]	; (1df4 <system_clock_source_get_hz+0x7c>)
    1dcc:	689b      	ldr	r3, [r3, #8]
    1dce:	041b      	lsls	r3, r3, #16
    1dd0:	0c1b      	lsrs	r3, r3, #16
    1dd2:	4358      	muls	r0, r3
    1dd4:	e00a      	b.n	1dec <system_clock_source_get_hz+0x74>
    1dd6:	2350      	movs	r3, #80	; 0x50
    1dd8:	4a07      	ldr	r2, [pc, #28]	; (1df8 <system_clock_source_get_hz+0x80>)
    1dda:	5cd3      	ldrb	r3, [r2, r3]
    1ddc:	2000      	movs	r0, #0
    1dde:	075b      	lsls	r3, r3, #29
    1de0:	d504      	bpl.n	1dec <system_clock_source_get_hz+0x74>
    1de2:	4b04      	ldr	r3, [pc, #16]	; (1df4 <system_clock_source_get_hz+0x7c>)
    1de4:	68d8      	ldr	r0, [r3, #12]
    1de6:	e001      	b.n	1dec <system_clock_source_get_hz+0x74>
    1de8:	2080      	movs	r0, #128	; 0x80
    1dea:	0200      	lsls	r0, r0, #8
    1dec:	bd10      	pop	{r4, pc}
    1dee:	46c0      	nop			; (mov r8, r8)
    1df0:	000049b4 	.word	0x000049b4
    1df4:	20000288 	.word	0x20000288
    1df8:	40000800 	.word	0x40000800
    1dfc:	007a1200 	.word	0x007a1200
    1e00:	02dc6c00 	.word	0x02dc6c00
    1e04:	000022d9 	.word	0x000022d9

00001e08 <system_clock_source_osc8m_set_config>:
    1e08:	b570      	push	{r4, r5, r6, lr}
    1e0a:	490c      	ldr	r1, [pc, #48]	; (1e3c <system_clock_source_osc8m_set_config+0x34>)
    1e0c:	6a0b      	ldr	r3, [r1, #32]
    1e0e:	7804      	ldrb	r4, [r0, #0]
    1e10:	7885      	ldrb	r5, [r0, #2]
    1e12:	7840      	ldrb	r0, [r0, #1]
    1e14:	2201      	movs	r2, #1
    1e16:	4010      	ands	r0, r2
    1e18:	0180      	lsls	r0, r0, #6
    1e1a:	2640      	movs	r6, #64	; 0x40
    1e1c:	43b3      	bics	r3, r6
    1e1e:	4303      	orrs	r3, r0
    1e20:	402a      	ands	r2, r5
    1e22:	01d2      	lsls	r2, r2, #7
    1e24:	2080      	movs	r0, #128	; 0x80
    1e26:	4383      	bics	r3, r0
    1e28:	4313      	orrs	r3, r2
    1e2a:	2203      	movs	r2, #3
    1e2c:	4022      	ands	r2, r4
    1e2e:	0212      	lsls	r2, r2, #8
    1e30:	4803      	ldr	r0, [pc, #12]	; (1e40 <system_clock_source_osc8m_set_config+0x38>)
    1e32:	4003      	ands	r3, r0
    1e34:	4313      	orrs	r3, r2
    1e36:	620b      	str	r3, [r1, #32]
    1e38:	bd70      	pop	{r4, r5, r6, pc}
    1e3a:	46c0      	nop			; (mov r8, r8)
    1e3c:	40000800 	.word	0x40000800
    1e40:	fffffcff 	.word	0xfffffcff

00001e44 <system_clock_source_dfll_set_config>:
    1e44:	b510      	push	{r4, lr}
    1e46:	7a03      	ldrb	r3, [r0, #8]
    1e48:	069b      	lsls	r3, r3, #26
    1e4a:	0c1b      	lsrs	r3, r3, #16
    1e4c:	8942      	ldrh	r2, [r0, #10]
    1e4e:	0592      	lsls	r2, r2, #22
    1e50:	0d92      	lsrs	r2, r2, #22
    1e52:	4313      	orrs	r3, r2
    1e54:	4918      	ldr	r1, [pc, #96]	; (1eb8 <system_clock_source_dfll_set_config+0x74>)
    1e56:	604b      	str	r3, [r1, #4]
    1e58:	7983      	ldrb	r3, [r0, #6]
    1e5a:	79c2      	ldrb	r2, [r0, #7]
    1e5c:	4313      	orrs	r3, r2
    1e5e:	8842      	ldrh	r2, [r0, #2]
    1e60:	8884      	ldrh	r4, [r0, #4]
    1e62:	4322      	orrs	r2, r4
    1e64:	4313      	orrs	r3, r2
    1e66:	7842      	ldrb	r2, [r0, #1]
    1e68:	01d2      	lsls	r2, r2, #7
    1e6a:	4313      	orrs	r3, r2
    1e6c:	600b      	str	r3, [r1, #0]
    1e6e:	7803      	ldrb	r3, [r0, #0]
    1e70:	2b04      	cmp	r3, #4
    1e72:	d011      	beq.n	1e98 <system_clock_source_dfll_set_config+0x54>
    1e74:	2b20      	cmp	r3, #32
    1e76:	d10e      	bne.n	1e96 <system_clock_source_dfll_set_config+0x52>
    1e78:	7b03      	ldrb	r3, [r0, #12]
    1e7a:	069b      	lsls	r3, r3, #26
    1e7c:	8a02      	ldrh	r2, [r0, #16]
    1e7e:	4313      	orrs	r3, r2
    1e80:	89c2      	ldrh	r2, [r0, #14]
    1e82:	0412      	lsls	r2, r2, #16
    1e84:	490d      	ldr	r1, [pc, #52]	; (1ebc <system_clock_source_dfll_set_config+0x78>)
    1e86:	400a      	ands	r2, r1
    1e88:	4313      	orrs	r3, r2
    1e8a:	4a0b      	ldr	r2, [pc, #44]	; (1eb8 <system_clock_source_dfll_set_config+0x74>)
    1e8c:	6093      	str	r3, [r2, #8]
    1e8e:	6811      	ldr	r1, [r2, #0]
    1e90:	4b0b      	ldr	r3, [pc, #44]	; (1ec0 <system_clock_source_dfll_set_config+0x7c>)
    1e92:	430b      	orrs	r3, r1
    1e94:	6013      	str	r3, [r2, #0]
    1e96:	bd10      	pop	{r4, pc}
    1e98:	7b03      	ldrb	r3, [r0, #12]
    1e9a:	069b      	lsls	r3, r3, #26
    1e9c:	8a02      	ldrh	r2, [r0, #16]
    1e9e:	4313      	orrs	r3, r2
    1ea0:	89c2      	ldrh	r2, [r0, #14]
    1ea2:	0412      	lsls	r2, r2, #16
    1ea4:	4905      	ldr	r1, [pc, #20]	; (1ebc <system_clock_source_dfll_set_config+0x78>)
    1ea6:	400a      	ands	r2, r1
    1ea8:	4313      	orrs	r3, r2
    1eaa:	4a03      	ldr	r2, [pc, #12]	; (1eb8 <system_clock_source_dfll_set_config+0x74>)
    1eac:	6093      	str	r3, [r2, #8]
    1eae:	6813      	ldr	r3, [r2, #0]
    1eb0:	2104      	movs	r1, #4
    1eb2:	430b      	orrs	r3, r1
    1eb4:	6013      	str	r3, [r2, #0]
    1eb6:	e7ee      	b.n	1e96 <system_clock_source_dfll_set_config+0x52>
    1eb8:	20000288 	.word	0x20000288
    1ebc:	03ff0000 	.word	0x03ff0000
    1ec0:	00000424 	.word	0x00000424

00001ec4 <system_clock_source_enable>:
    1ec4:	2808      	cmp	r0, #8
    1ec6:	d803      	bhi.n	1ed0 <system_clock_source_enable+0xc>
    1ec8:	0080      	lsls	r0, r0, #2
    1eca:	4b25      	ldr	r3, [pc, #148]	; (1f60 <system_clock_source_enable+0x9c>)
    1ecc:	581b      	ldr	r3, [r3, r0]
    1ece:	469f      	mov	pc, r3
    1ed0:	2017      	movs	r0, #23
    1ed2:	e044      	b.n	1f5e <system_clock_source_enable+0x9a>
    1ed4:	4a23      	ldr	r2, [pc, #140]	; (1f64 <system_clock_source_enable+0xa0>)
    1ed6:	6a13      	ldr	r3, [r2, #32]
    1ed8:	2102      	movs	r1, #2
    1eda:	430b      	orrs	r3, r1
    1edc:	6213      	str	r3, [r2, #32]
    1ede:	2000      	movs	r0, #0
    1ee0:	e03d      	b.n	1f5e <system_clock_source_enable+0x9a>
    1ee2:	4a20      	ldr	r2, [pc, #128]	; (1f64 <system_clock_source_enable+0xa0>)
    1ee4:	6993      	ldr	r3, [r2, #24]
    1ee6:	2102      	movs	r1, #2
    1ee8:	430b      	orrs	r3, r1
    1eea:	6193      	str	r3, [r2, #24]
    1eec:	2000      	movs	r0, #0
    1eee:	e036      	b.n	1f5e <system_clock_source_enable+0x9a>
    1ef0:	4a1c      	ldr	r2, [pc, #112]	; (1f64 <system_clock_source_enable+0xa0>)
    1ef2:	8a13      	ldrh	r3, [r2, #16]
    1ef4:	2102      	movs	r1, #2
    1ef6:	430b      	orrs	r3, r1
    1ef8:	8213      	strh	r3, [r2, #16]
    1efa:	2000      	movs	r0, #0
    1efc:	e02f      	b.n	1f5e <system_clock_source_enable+0x9a>
    1efe:	4a19      	ldr	r2, [pc, #100]	; (1f64 <system_clock_source_enable+0xa0>)
    1f00:	8a93      	ldrh	r3, [r2, #20]
    1f02:	2102      	movs	r1, #2
    1f04:	430b      	orrs	r3, r1
    1f06:	8293      	strh	r3, [r2, #20]
    1f08:	2000      	movs	r0, #0
    1f0a:	e028      	b.n	1f5e <system_clock_source_enable+0x9a>
    1f0c:	4916      	ldr	r1, [pc, #88]	; (1f68 <system_clock_source_enable+0xa4>)
    1f0e:	680b      	ldr	r3, [r1, #0]
    1f10:	2202      	movs	r2, #2
    1f12:	4313      	orrs	r3, r2
    1f14:	600b      	str	r3, [r1, #0]
    1f16:	4b13      	ldr	r3, [pc, #76]	; (1f64 <system_clock_source_enable+0xa0>)
    1f18:	849a      	strh	r2, [r3, #36]	; 0x24
    1f1a:	0019      	movs	r1, r3
    1f1c:	320e      	adds	r2, #14
    1f1e:	68cb      	ldr	r3, [r1, #12]
    1f20:	421a      	tst	r2, r3
    1f22:	d0fc      	beq.n	1f1e <system_clock_source_enable+0x5a>
    1f24:	4a10      	ldr	r2, [pc, #64]	; (1f68 <system_clock_source_enable+0xa4>)
    1f26:	6891      	ldr	r1, [r2, #8]
    1f28:	4b0e      	ldr	r3, [pc, #56]	; (1f64 <system_clock_source_enable+0xa0>)
    1f2a:	62d9      	str	r1, [r3, #44]	; 0x2c
    1f2c:	6852      	ldr	r2, [r2, #4]
    1f2e:	629a      	str	r2, [r3, #40]	; 0x28
    1f30:	2200      	movs	r2, #0
    1f32:	849a      	strh	r2, [r3, #36]	; 0x24
    1f34:	0019      	movs	r1, r3
    1f36:	3210      	adds	r2, #16
    1f38:	68cb      	ldr	r3, [r1, #12]
    1f3a:	421a      	tst	r2, r3
    1f3c:	d0fc      	beq.n	1f38 <system_clock_source_enable+0x74>
    1f3e:	4b0a      	ldr	r3, [pc, #40]	; (1f68 <system_clock_source_enable+0xa4>)
    1f40:	681b      	ldr	r3, [r3, #0]
    1f42:	b29b      	uxth	r3, r3
    1f44:	4a07      	ldr	r2, [pc, #28]	; (1f64 <system_clock_source_enable+0xa0>)
    1f46:	8493      	strh	r3, [r2, #36]	; 0x24
    1f48:	2000      	movs	r0, #0
    1f4a:	e008      	b.n	1f5e <system_clock_source_enable+0x9a>
    1f4c:	4905      	ldr	r1, [pc, #20]	; (1f64 <system_clock_source_enable+0xa0>)
    1f4e:	2244      	movs	r2, #68	; 0x44
    1f50:	5c8b      	ldrb	r3, [r1, r2]
    1f52:	2002      	movs	r0, #2
    1f54:	4303      	orrs	r3, r0
    1f56:	548b      	strb	r3, [r1, r2]
    1f58:	2000      	movs	r0, #0
    1f5a:	e000      	b.n	1f5e <system_clock_source_enable+0x9a>
    1f5c:	2000      	movs	r0, #0
    1f5e:	4770      	bx	lr
    1f60:	000049d8 	.word	0x000049d8
    1f64:	40000800 	.word	0x40000800
    1f68:	20000288 	.word	0x20000288

00001f6c <system_clock_init>:
    1f6c:	b570      	push	{r4, r5, r6, lr}
    1f6e:	b08a      	sub	sp, #40	; 0x28
    1f70:	22c2      	movs	r2, #194	; 0xc2
    1f72:	00d2      	lsls	r2, r2, #3
    1f74:	4b36      	ldr	r3, [pc, #216]	; (2050 <STACK_SIZE+0x50>)
    1f76:	609a      	str	r2, [r3, #8]
    1f78:	4a36      	ldr	r2, [pc, #216]	; (2054 <STACK_SIZE+0x54>)
    1f7a:	6853      	ldr	r3, [r2, #4]
    1f7c:	211e      	movs	r1, #30
    1f7e:	438b      	bics	r3, r1
    1f80:	391a      	subs	r1, #26
    1f82:	430b      	orrs	r3, r1
    1f84:	6053      	str	r3, [r2, #4]
    1f86:	2201      	movs	r2, #1
    1f88:	ab01      	add	r3, sp, #4
    1f8a:	701a      	strb	r2, [r3, #0]
    1f8c:	2400      	movs	r4, #0
    1f8e:	4d32      	ldr	r5, [pc, #200]	; (2058 <STACK_SIZE+0x58>)
    1f90:	b2e0      	uxtb	r0, r4
    1f92:	a901      	add	r1, sp, #4
    1f94:	47a8      	blx	r5
    1f96:	3401      	adds	r4, #1
    1f98:	2c25      	cmp	r4, #37	; 0x25
    1f9a:	d1f9      	bne.n	1f90 <system_clock_init+0x24>
    1f9c:	ab05      	add	r3, sp, #20
    1f9e:	2200      	movs	r2, #0
    1fa0:	2100      	movs	r1, #0
    1fa2:	8059      	strh	r1, [r3, #2]
    1fa4:	719a      	strb	r2, [r3, #6]
    1fa6:	71da      	strb	r2, [r3, #7]
    1fa8:	3120      	adds	r1, #32
    1faa:	7019      	strb	r1, [r3, #0]
    1fac:	705a      	strb	r2, [r3, #1]
    1fae:	4b2b      	ldr	r3, [pc, #172]	; (205c <STACK_SIZE+0x5c>)
    1fb0:	681b      	ldr	r3, [r3, #0]
    1fb2:	0e9b      	lsrs	r3, r3, #26
    1fb4:	2b3f      	cmp	r3, #63	; 0x3f
    1fb6:	d049      	beq.n	204c <STACK_SIZE+0x4c>
    1fb8:	a805      	add	r0, sp, #20
    1fba:	7203      	strb	r3, [r0, #8]
    1fbc:	2307      	movs	r3, #7
    1fbe:	7303      	strb	r3, [r0, #12]
    1fc0:	3303      	adds	r3, #3
    1fc2:	81c3      	strh	r3, [r0, #14]
    1fc4:	4b26      	ldr	r3, [pc, #152]	; (2060 <STACK_SIZE+0x60>)
    1fc6:	8143      	strh	r3, [r0, #10]
    1fc8:	3bff      	subs	r3, #255	; 0xff
    1fca:	8083      	strh	r3, [r0, #4]
    1fcc:	4b25      	ldr	r3, [pc, #148]	; (2064 <STACK_SIZE+0x64>)
    1fce:	8203      	strh	r3, [r0, #16]
    1fd0:	4b25      	ldr	r3, [pc, #148]	; (2068 <STACK_SIZE+0x68>)
    1fd2:	4798      	blx	r3
    1fd4:	a804      	add	r0, sp, #16
    1fd6:	2400      	movs	r4, #0
    1fd8:	7044      	strb	r4, [r0, #1]
    1fda:	2601      	movs	r6, #1
    1fdc:	7086      	strb	r6, [r0, #2]
    1fde:	7004      	strb	r4, [r0, #0]
    1fe0:	4b22      	ldr	r3, [pc, #136]	; (206c <STACK_SIZE+0x6c>)
    1fe2:	4798      	blx	r3
    1fe4:	2006      	movs	r0, #6
    1fe6:	4d22      	ldr	r5, [pc, #136]	; (2070 <STACK_SIZE+0x70>)
    1fe8:	47a8      	blx	r5
    1fea:	4b22      	ldr	r3, [pc, #136]	; (2074 <STACK_SIZE+0x74>)
    1fec:	4798      	blx	r3
    1fee:	a901      	add	r1, sp, #4
    1ff0:	604e      	str	r6, [r1, #4]
    1ff2:	704c      	strb	r4, [r1, #1]
    1ff4:	2306      	movs	r3, #6
    1ff6:	700b      	strb	r3, [r1, #0]
    1ff8:	720c      	strb	r4, [r1, #8]
    1ffa:	724c      	strb	r4, [r1, #9]
    1ffc:	2003      	movs	r0, #3
    1ffe:	4b1e      	ldr	r3, [pc, #120]	; (2078 <STACK_SIZE+0x78>)
    2000:	4798      	blx	r3
    2002:	2003      	movs	r0, #3
    2004:	4b1d      	ldr	r3, [pc, #116]	; (207c <STACK_SIZE+0x7c>)
    2006:	4798      	blx	r3
    2008:	2007      	movs	r0, #7
    200a:	47a8      	blx	r5
    200c:	4910      	ldr	r1, [pc, #64]	; (2050 <STACK_SIZE+0x50>)
    200e:	2210      	movs	r2, #16
    2010:	68cb      	ldr	r3, [r1, #12]
    2012:	421a      	tst	r2, r3
    2014:	d0fc      	beq.n	2010 <STACK_SIZE+0x10>
    2016:	4a0e      	ldr	r2, [pc, #56]	; (2050 <STACK_SIZE+0x50>)
    2018:	8c93      	ldrh	r3, [r2, #36]	; 0x24
    201a:	2180      	movs	r1, #128	; 0x80
    201c:	430b      	orrs	r3, r1
    201e:	8493      	strh	r3, [r2, #36]	; 0x24
    2020:	4a17      	ldr	r2, [pc, #92]	; (2080 <STACK_SIZE+0x80>)
    2022:	2300      	movs	r3, #0
    2024:	7213      	strb	r3, [r2, #8]
    2026:	7253      	strb	r3, [r2, #9]
    2028:	7293      	strb	r3, [r2, #10]
    202a:	72d3      	strb	r3, [r2, #11]
    202c:	a901      	add	r1, sp, #4
    202e:	2201      	movs	r2, #1
    2030:	604a      	str	r2, [r1, #4]
    2032:	704b      	strb	r3, [r1, #1]
    2034:	724b      	strb	r3, [r1, #9]
    2036:	3307      	adds	r3, #7
    2038:	700b      	strb	r3, [r1, #0]
    203a:	720a      	strb	r2, [r1, #8]
    203c:	2000      	movs	r0, #0
    203e:	4b0e      	ldr	r3, [pc, #56]	; (2078 <STACK_SIZE+0x78>)
    2040:	4798      	blx	r3
    2042:	2000      	movs	r0, #0
    2044:	4b0d      	ldr	r3, [pc, #52]	; (207c <STACK_SIZE+0x7c>)
    2046:	4798      	blx	r3
    2048:	b00a      	add	sp, #40	; 0x28
    204a:	bd70      	pop	{r4, r5, r6, pc}
    204c:	3b20      	subs	r3, #32
    204e:	e7b3      	b.n	1fb8 <system_clock_init+0x4c>
    2050:	40000800 	.word	0x40000800
    2054:	41004000 	.word	0x41004000
    2058:	000022bd 	.word	0x000022bd
    205c:	00806024 	.word	0x00806024
    2060:	000001ff 	.word	0x000001ff
    2064:	ffffbb80 	.word	0xffffbb80
    2068:	00001e45 	.word	0x00001e45
    206c:	00001e09 	.word	0x00001e09
    2070:	00001ec5 	.word	0x00001ec5
    2074:	00002085 	.word	0x00002085
    2078:	000020a9 	.word	0x000020a9
    207c:	00002161 	.word	0x00002161
    2080:	40000400 	.word	0x40000400

00002084 <system_gclk_init>:
    2084:	4a06      	ldr	r2, [pc, #24]	; (20a0 <system_gclk_init+0x1c>)
    2086:	6993      	ldr	r3, [r2, #24]
    2088:	2108      	movs	r1, #8
    208a:	430b      	orrs	r3, r1
    208c:	6193      	str	r3, [r2, #24]
    208e:	2201      	movs	r2, #1
    2090:	4b04      	ldr	r3, [pc, #16]	; (20a4 <system_gclk_init+0x20>)
    2092:	701a      	strb	r2, [r3, #0]
    2094:	0019      	movs	r1, r3
    2096:	780b      	ldrb	r3, [r1, #0]
    2098:	4213      	tst	r3, r2
    209a:	d1fc      	bne.n	2096 <system_gclk_init+0x12>
    209c:	4770      	bx	lr
    209e:	46c0      	nop			; (mov r8, r8)
    20a0:	40000400 	.word	0x40000400
    20a4:	40000c00 	.word	0x40000c00

000020a8 <system_gclk_gen_set_config>:
    20a8:	b570      	push	{r4, r5, r6, lr}
    20aa:	0006      	movs	r6, r0
    20ac:	0004      	movs	r4, r0
    20ae:	780d      	ldrb	r5, [r1, #0]
    20b0:	022d      	lsls	r5, r5, #8
    20b2:	4305      	orrs	r5, r0
    20b4:	784b      	ldrb	r3, [r1, #1]
    20b6:	2b00      	cmp	r3, #0
    20b8:	d002      	beq.n	20c0 <system_gclk_gen_set_config+0x18>
    20ba:	2380      	movs	r3, #128	; 0x80
    20bc:	02db      	lsls	r3, r3, #11
    20be:	431d      	orrs	r5, r3
    20c0:	7a4b      	ldrb	r3, [r1, #9]
    20c2:	2b00      	cmp	r3, #0
    20c4:	d002      	beq.n	20cc <system_gclk_gen_set_config+0x24>
    20c6:	2380      	movs	r3, #128	; 0x80
    20c8:	031b      	lsls	r3, r3, #12
    20ca:	431d      	orrs	r5, r3
    20cc:	6848      	ldr	r0, [r1, #4]
    20ce:	2801      	cmp	r0, #1
    20d0:	d910      	bls.n	20f4 <system_gclk_gen_set_config+0x4c>
    20d2:	1e43      	subs	r3, r0, #1
    20d4:	4218      	tst	r0, r3
    20d6:	d134      	bne.n	2142 <system_gclk_gen_set_config+0x9a>
    20d8:	2802      	cmp	r0, #2
    20da:	d930      	bls.n	213e <system_gclk_gen_set_config+0x96>
    20dc:	2302      	movs	r3, #2
    20de:	2200      	movs	r2, #0
    20e0:	3201      	adds	r2, #1
    20e2:	005b      	lsls	r3, r3, #1
    20e4:	4298      	cmp	r0, r3
    20e6:	d8fb      	bhi.n	20e0 <system_gclk_gen_set_config+0x38>
    20e8:	0212      	lsls	r2, r2, #8
    20ea:	4332      	orrs	r2, r6
    20ec:	0014      	movs	r4, r2
    20ee:	2380      	movs	r3, #128	; 0x80
    20f0:	035b      	lsls	r3, r3, #13
    20f2:	431d      	orrs	r5, r3
    20f4:	7a0b      	ldrb	r3, [r1, #8]
    20f6:	2b00      	cmp	r3, #0
    20f8:	d002      	beq.n	2100 <system_gclk_gen_set_config+0x58>
    20fa:	2380      	movs	r3, #128	; 0x80
    20fc:	039b      	lsls	r3, r3, #14
    20fe:	431d      	orrs	r5, r3
    2100:	4a13      	ldr	r2, [pc, #76]	; (2150 <system_gclk_gen_set_config+0xa8>)
    2102:	7853      	ldrb	r3, [r2, #1]
    2104:	b25b      	sxtb	r3, r3
    2106:	2b00      	cmp	r3, #0
    2108:	dbfb      	blt.n	2102 <system_gclk_gen_set_config+0x5a>
    210a:	4b12      	ldr	r3, [pc, #72]	; (2154 <system_gclk_gen_set_config+0xac>)
    210c:	4798      	blx	r3
    210e:	4b12      	ldr	r3, [pc, #72]	; (2158 <system_gclk_gen_set_config+0xb0>)
    2110:	701e      	strb	r6, [r3, #0]
    2112:	4a0f      	ldr	r2, [pc, #60]	; (2150 <system_gclk_gen_set_config+0xa8>)
    2114:	7853      	ldrb	r3, [r2, #1]
    2116:	b25b      	sxtb	r3, r3
    2118:	2b00      	cmp	r3, #0
    211a:	dbfb      	blt.n	2114 <system_gclk_gen_set_config+0x6c>
    211c:	4b0c      	ldr	r3, [pc, #48]	; (2150 <system_gclk_gen_set_config+0xa8>)
    211e:	609c      	str	r4, [r3, #8]
    2120:	001a      	movs	r2, r3
    2122:	7853      	ldrb	r3, [r2, #1]
    2124:	b25b      	sxtb	r3, r3
    2126:	2b00      	cmp	r3, #0
    2128:	dbfb      	blt.n	2122 <system_gclk_gen_set_config+0x7a>
    212a:	4a09      	ldr	r2, [pc, #36]	; (2150 <system_gclk_gen_set_config+0xa8>)
    212c:	6853      	ldr	r3, [r2, #4]
    212e:	2180      	movs	r1, #128	; 0x80
    2130:	0249      	lsls	r1, r1, #9
    2132:	400b      	ands	r3, r1
    2134:	431d      	orrs	r5, r3
    2136:	6055      	str	r5, [r2, #4]
    2138:	4b08      	ldr	r3, [pc, #32]	; (215c <system_gclk_gen_set_config+0xb4>)
    213a:	4798      	blx	r3
    213c:	bd70      	pop	{r4, r5, r6, pc}
    213e:	2200      	movs	r2, #0
    2140:	e7d2      	b.n	20e8 <system_gclk_gen_set_config+0x40>
    2142:	0204      	lsls	r4, r0, #8
    2144:	4334      	orrs	r4, r6
    2146:	2380      	movs	r3, #128	; 0x80
    2148:	029b      	lsls	r3, r3, #10
    214a:	431d      	orrs	r5, r3
    214c:	e7d2      	b.n	20f4 <system_gclk_gen_set_config+0x4c>
    214e:	46c0      	nop			; (mov r8, r8)
    2150:	40000c00 	.word	0x40000c00
    2154:	000010dd 	.word	0x000010dd
    2158:	40000c08 	.word	0x40000c08
    215c:	0000111d 	.word	0x0000111d

00002160 <system_gclk_gen_enable>:
    2160:	b510      	push	{r4, lr}
    2162:	0004      	movs	r4, r0
    2164:	4a0b      	ldr	r2, [pc, #44]	; (2194 <system_gclk_gen_enable+0x34>)
    2166:	7853      	ldrb	r3, [r2, #1]
    2168:	b25b      	sxtb	r3, r3
    216a:	2b00      	cmp	r3, #0
    216c:	dbfb      	blt.n	2166 <system_gclk_gen_enable+0x6>
    216e:	4b0a      	ldr	r3, [pc, #40]	; (2198 <system_gclk_gen_enable+0x38>)
    2170:	4798      	blx	r3
    2172:	4b0a      	ldr	r3, [pc, #40]	; (219c <system_gclk_gen_enable+0x3c>)
    2174:	701c      	strb	r4, [r3, #0]
    2176:	4a07      	ldr	r2, [pc, #28]	; (2194 <system_gclk_gen_enable+0x34>)
    2178:	7853      	ldrb	r3, [r2, #1]
    217a:	b25b      	sxtb	r3, r3
    217c:	2b00      	cmp	r3, #0
    217e:	dbfb      	blt.n	2178 <system_gclk_gen_enable+0x18>
    2180:	4a04      	ldr	r2, [pc, #16]	; (2194 <system_gclk_gen_enable+0x34>)
    2182:	6851      	ldr	r1, [r2, #4]
    2184:	2380      	movs	r3, #128	; 0x80
    2186:	025b      	lsls	r3, r3, #9
    2188:	430b      	orrs	r3, r1
    218a:	6053      	str	r3, [r2, #4]
    218c:	4b04      	ldr	r3, [pc, #16]	; (21a0 <system_gclk_gen_enable+0x40>)
    218e:	4798      	blx	r3
    2190:	bd10      	pop	{r4, pc}
    2192:	46c0      	nop			; (mov r8, r8)
    2194:	40000c00 	.word	0x40000c00
    2198:	000010dd 	.word	0x000010dd
    219c:	40000c04 	.word	0x40000c04
    21a0:	0000111d 	.word	0x0000111d

000021a4 <system_gclk_gen_get_hz>:
    21a4:	b570      	push	{r4, r5, r6, lr}
    21a6:	0004      	movs	r4, r0
    21a8:	4a1a      	ldr	r2, [pc, #104]	; (2214 <system_gclk_gen_get_hz+0x70>)
    21aa:	7853      	ldrb	r3, [r2, #1]
    21ac:	b25b      	sxtb	r3, r3
    21ae:	2b00      	cmp	r3, #0
    21b0:	dbfb      	blt.n	21aa <system_gclk_gen_get_hz+0x6>
    21b2:	4b19      	ldr	r3, [pc, #100]	; (2218 <system_gclk_gen_get_hz+0x74>)
    21b4:	4798      	blx	r3
    21b6:	4b19      	ldr	r3, [pc, #100]	; (221c <system_gclk_gen_get_hz+0x78>)
    21b8:	701c      	strb	r4, [r3, #0]
    21ba:	4a16      	ldr	r2, [pc, #88]	; (2214 <system_gclk_gen_get_hz+0x70>)
    21bc:	7853      	ldrb	r3, [r2, #1]
    21be:	b25b      	sxtb	r3, r3
    21c0:	2b00      	cmp	r3, #0
    21c2:	dbfb      	blt.n	21bc <system_gclk_gen_get_hz+0x18>
    21c4:	4e13      	ldr	r6, [pc, #76]	; (2214 <system_gclk_gen_get_hz+0x70>)
    21c6:	6870      	ldr	r0, [r6, #4]
    21c8:	04c0      	lsls	r0, r0, #19
    21ca:	0ec0      	lsrs	r0, r0, #27
    21cc:	4b14      	ldr	r3, [pc, #80]	; (2220 <system_gclk_gen_get_hz+0x7c>)
    21ce:	4798      	blx	r3
    21d0:	0005      	movs	r5, r0
    21d2:	4b12      	ldr	r3, [pc, #72]	; (221c <system_gclk_gen_get_hz+0x78>)
    21d4:	701c      	strb	r4, [r3, #0]
    21d6:	6876      	ldr	r6, [r6, #4]
    21d8:	02f6      	lsls	r6, r6, #11
    21da:	0ff6      	lsrs	r6, r6, #31
    21dc:	4b11      	ldr	r3, [pc, #68]	; (2224 <system_gclk_gen_get_hz+0x80>)
    21de:	701c      	strb	r4, [r3, #0]
    21e0:	4a0c      	ldr	r2, [pc, #48]	; (2214 <system_gclk_gen_get_hz+0x70>)
    21e2:	7853      	ldrb	r3, [r2, #1]
    21e4:	b25b      	sxtb	r3, r3
    21e6:	2b00      	cmp	r3, #0
    21e8:	dbfb      	blt.n	21e2 <system_gclk_gen_get_hz+0x3e>
    21ea:	4b0a      	ldr	r3, [pc, #40]	; (2214 <system_gclk_gen_get_hz+0x70>)
    21ec:	689c      	ldr	r4, [r3, #8]
    21ee:	0224      	lsls	r4, r4, #8
    21f0:	0c24      	lsrs	r4, r4, #16
    21f2:	4b0d      	ldr	r3, [pc, #52]	; (2228 <system_gclk_gen_get_hz+0x84>)
    21f4:	4798      	blx	r3
    21f6:	2e00      	cmp	r6, #0
    21f8:	d107      	bne.n	220a <system_gclk_gen_get_hz+0x66>
    21fa:	2c01      	cmp	r4, #1
    21fc:	d907      	bls.n	220e <system_gclk_gen_get_hz+0x6a>
    21fe:	0021      	movs	r1, r4
    2200:	0028      	movs	r0, r5
    2202:	4b0a      	ldr	r3, [pc, #40]	; (222c <system_gclk_gen_get_hz+0x88>)
    2204:	4798      	blx	r3
    2206:	0005      	movs	r5, r0
    2208:	e001      	b.n	220e <system_gclk_gen_get_hz+0x6a>
    220a:	3401      	adds	r4, #1
    220c:	40e5      	lsrs	r5, r4
    220e:	0028      	movs	r0, r5
    2210:	bd70      	pop	{r4, r5, r6, pc}
    2212:	46c0      	nop			; (mov r8, r8)
    2214:	40000c00 	.word	0x40000c00
    2218:	000010dd 	.word	0x000010dd
    221c:	40000c04 	.word	0x40000c04
    2220:	00001d79 	.word	0x00001d79
    2224:	40000c08 	.word	0x40000c08
    2228:	0000111d 	.word	0x0000111d
    222c:	000045b1 	.word	0x000045b1

00002230 <system_gclk_chan_enable>:
    2230:	b510      	push	{r4, lr}
    2232:	0004      	movs	r4, r0
    2234:	4b06      	ldr	r3, [pc, #24]	; (2250 <system_gclk_chan_enable+0x20>)
    2236:	4798      	blx	r3
    2238:	4b06      	ldr	r3, [pc, #24]	; (2254 <system_gclk_chan_enable+0x24>)
    223a:	701c      	strb	r4, [r3, #0]
    223c:	4a06      	ldr	r2, [pc, #24]	; (2258 <system_gclk_chan_enable+0x28>)
    223e:	8853      	ldrh	r3, [r2, #2]
    2240:	2180      	movs	r1, #128	; 0x80
    2242:	01c9      	lsls	r1, r1, #7
    2244:	430b      	orrs	r3, r1
    2246:	8053      	strh	r3, [r2, #2]
    2248:	4b04      	ldr	r3, [pc, #16]	; (225c <system_gclk_chan_enable+0x2c>)
    224a:	4798      	blx	r3
    224c:	bd10      	pop	{r4, pc}
    224e:	46c0      	nop			; (mov r8, r8)
    2250:	000010dd 	.word	0x000010dd
    2254:	40000c02 	.word	0x40000c02
    2258:	40000c00 	.word	0x40000c00
    225c:	0000111d 	.word	0x0000111d

00002260 <system_gclk_chan_disable>:
    2260:	b510      	push	{r4, lr}
    2262:	0004      	movs	r4, r0
    2264:	4b0f      	ldr	r3, [pc, #60]	; (22a4 <system_gclk_chan_disable+0x44>)
    2266:	4798      	blx	r3
    2268:	4b0f      	ldr	r3, [pc, #60]	; (22a8 <system_gclk_chan_disable+0x48>)
    226a:	701c      	strb	r4, [r3, #0]
    226c:	4a0f      	ldr	r2, [pc, #60]	; (22ac <system_gclk_chan_disable+0x4c>)
    226e:	8853      	ldrh	r3, [r2, #2]
    2270:	051b      	lsls	r3, r3, #20
    2272:	0f18      	lsrs	r0, r3, #28
    2274:	8853      	ldrh	r3, [r2, #2]
    2276:	490e      	ldr	r1, [pc, #56]	; (22b0 <system_gclk_chan_disable+0x50>)
    2278:	400b      	ands	r3, r1
    227a:	8053      	strh	r3, [r2, #2]
    227c:	8853      	ldrh	r3, [r2, #2]
    227e:	490d      	ldr	r1, [pc, #52]	; (22b4 <system_gclk_chan_disable+0x54>)
    2280:	400b      	ands	r3, r1
    2282:	8053      	strh	r3, [r2, #2]
    2284:	0011      	movs	r1, r2
    2286:	2280      	movs	r2, #128	; 0x80
    2288:	01d2      	lsls	r2, r2, #7
    228a:	884b      	ldrh	r3, [r1, #2]
    228c:	4213      	tst	r3, r2
    228e:	d1fc      	bne.n	228a <system_gclk_chan_disable+0x2a>
    2290:	4906      	ldr	r1, [pc, #24]	; (22ac <system_gclk_chan_disable+0x4c>)
    2292:	884a      	ldrh	r2, [r1, #2]
    2294:	0203      	lsls	r3, r0, #8
    2296:	4806      	ldr	r0, [pc, #24]	; (22b0 <system_gclk_chan_disable+0x50>)
    2298:	4002      	ands	r2, r0
    229a:	4313      	orrs	r3, r2
    229c:	804b      	strh	r3, [r1, #2]
    229e:	4b06      	ldr	r3, [pc, #24]	; (22b8 <system_gclk_chan_disable+0x58>)
    22a0:	4798      	blx	r3
    22a2:	bd10      	pop	{r4, pc}
    22a4:	000010dd 	.word	0x000010dd
    22a8:	40000c02 	.word	0x40000c02
    22ac:	40000c00 	.word	0x40000c00
    22b0:	fffff0ff 	.word	0xfffff0ff
    22b4:	ffffbfff 	.word	0xffffbfff
    22b8:	0000111d 	.word	0x0000111d

000022bc <system_gclk_chan_set_config>:
    22bc:	b510      	push	{r4, lr}
    22be:	780c      	ldrb	r4, [r1, #0]
    22c0:	0224      	lsls	r4, r4, #8
    22c2:	4304      	orrs	r4, r0
    22c4:	4b02      	ldr	r3, [pc, #8]	; (22d0 <system_gclk_chan_set_config+0x14>)
    22c6:	4798      	blx	r3
    22c8:	b2a4      	uxth	r4, r4
    22ca:	4b02      	ldr	r3, [pc, #8]	; (22d4 <system_gclk_chan_set_config+0x18>)
    22cc:	805c      	strh	r4, [r3, #2]
    22ce:	bd10      	pop	{r4, pc}
    22d0:	00002261 	.word	0x00002261
    22d4:	40000c00 	.word	0x40000c00

000022d8 <system_gclk_chan_get_hz>:
    22d8:	b510      	push	{r4, lr}
    22da:	0004      	movs	r4, r0
    22dc:	4b06      	ldr	r3, [pc, #24]	; (22f8 <system_gclk_chan_get_hz+0x20>)
    22de:	4798      	blx	r3
    22e0:	4b06      	ldr	r3, [pc, #24]	; (22fc <system_gclk_chan_get_hz+0x24>)
    22e2:	701c      	strb	r4, [r3, #0]
    22e4:	4b06      	ldr	r3, [pc, #24]	; (2300 <system_gclk_chan_get_hz+0x28>)
    22e6:	885c      	ldrh	r4, [r3, #2]
    22e8:	0524      	lsls	r4, r4, #20
    22ea:	0f24      	lsrs	r4, r4, #28
    22ec:	4b05      	ldr	r3, [pc, #20]	; (2304 <system_gclk_chan_get_hz+0x2c>)
    22ee:	4798      	blx	r3
    22f0:	0020      	movs	r0, r4
    22f2:	4b05      	ldr	r3, [pc, #20]	; (2308 <system_gclk_chan_get_hz+0x30>)
    22f4:	4798      	blx	r3
    22f6:	bd10      	pop	{r4, pc}
    22f8:	000010dd 	.word	0x000010dd
    22fc:	40000c02 	.word	0x40000c02
    2300:	40000c00 	.word	0x40000c00
    2304:	0000111d 	.word	0x0000111d
    2308:	000021a5 	.word	0x000021a5

0000230c <_system_pinmux_config>:
    230c:	b530      	push	{r4, r5, lr}
    230e:	78d3      	ldrb	r3, [r2, #3]
    2310:	2b00      	cmp	r3, #0
    2312:	d135      	bne.n	2380 <_system_pinmux_config+0x74>
    2314:	7813      	ldrb	r3, [r2, #0]
    2316:	2b80      	cmp	r3, #128	; 0x80
    2318:	d029      	beq.n	236e <_system_pinmux_config+0x62>
    231a:	061b      	lsls	r3, r3, #24
    231c:	2480      	movs	r4, #128	; 0x80
    231e:	0264      	lsls	r4, r4, #9
    2320:	4323      	orrs	r3, r4
    2322:	7854      	ldrb	r4, [r2, #1]
    2324:	2502      	movs	r5, #2
    2326:	43ac      	bics	r4, r5
    2328:	d106      	bne.n	2338 <_system_pinmux_config+0x2c>
    232a:	7894      	ldrb	r4, [r2, #2]
    232c:	2c00      	cmp	r4, #0
    232e:	d120      	bne.n	2372 <_system_pinmux_config+0x66>
    2330:	2480      	movs	r4, #128	; 0x80
    2332:	02a4      	lsls	r4, r4, #10
    2334:	4323      	orrs	r3, r4
    2336:	6041      	str	r1, [r0, #4]
    2338:	7854      	ldrb	r4, [r2, #1]
    233a:	3c01      	subs	r4, #1
    233c:	2c01      	cmp	r4, #1
    233e:	d91c      	bls.n	237a <_system_pinmux_config+0x6e>
    2340:	040d      	lsls	r5, r1, #16
    2342:	0c2d      	lsrs	r5, r5, #16
    2344:	24a0      	movs	r4, #160	; 0xa0
    2346:	05e4      	lsls	r4, r4, #23
    2348:	432c      	orrs	r4, r5
    234a:	431c      	orrs	r4, r3
    234c:	6284      	str	r4, [r0, #40]	; 0x28
    234e:	0c0d      	lsrs	r5, r1, #16
    2350:	24d0      	movs	r4, #208	; 0xd0
    2352:	0624      	lsls	r4, r4, #24
    2354:	432c      	orrs	r4, r5
    2356:	431c      	orrs	r4, r3
    2358:	6284      	str	r4, [r0, #40]	; 0x28
    235a:	78d4      	ldrb	r4, [r2, #3]
    235c:	2c00      	cmp	r4, #0
    235e:	d122      	bne.n	23a6 <_system_pinmux_config+0x9a>
    2360:	035b      	lsls	r3, r3, #13
    2362:	d51c      	bpl.n	239e <_system_pinmux_config+0x92>
    2364:	7893      	ldrb	r3, [r2, #2]
    2366:	2b01      	cmp	r3, #1
    2368:	d01e      	beq.n	23a8 <_system_pinmux_config+0x9c>
    236a:	6141      	str	r1, [r0, #20]
    236c:	e017      	b.n	239e <_system_pinmux_config+0x92>
    236e:	2300      	movs	r3, #0
    2370:	e7d7      	b.n	2322 <_system_pinmux_config+0x16>
    2372:	24c0      	movs	r4, #192	; 0xc0
    2374:	02e4      	lsls	r4, r4, #11
    2376:	4323      	orrs	r3, r4
    2378:	e7dd      	b.n	2336 <_system_pinmux_config+0x2a>
    237a:	4c0d      	ldr	r4, [pc, #52]	; (23b0 <_system_pinmux_config+0xa4>)
    237c:	4023      	ands	r3, r4
    237e:	e7df      	b.n	2340 <_system_pinmux_config+0x34>
    2380:	6041      	str	r1, [r0, #4]
    2382:	040c      	lsls	r4, r1, #16
    2384:	0c24      	lsrs	r4, r4, #16
    2386:	23a0      	movs	r3, #160	; 0xa0
    2388:	05db      	lsls	r3, r3, #23
    238a:	4323      	orrs	r3, r4
    238c:	6283      	str	r3, [r0, #40]	; 0x28
    238e:	0c0c      	lsrs	r4, r1, #16
    2390:	23d0      	movs	r3, #208	; 0xd0
    2392:	061b      	lsls	r3, r3, #24
    2394:	4323      	orrs	r3, r4
    2396:	6283      	str	r3, [r0, #40]	; 0x28
    2398:	78d3      	ldrb	r3, [r2, #3]
    239a:	2b00      	cmp	r3, #0
    239c:	d103      	bne.n	23a6 <_system_pinmux_config+0x9a>
    239e:	7853      	ldrb	r3, [r2, #1]
    23a0:	3b01      	subs	r3, #1
    23a2:	2b01      	cmp	r3, #1
    23a4:	d902      	bls.n	23ac <_system_pinmux_config+0xa0>
    23a6:	bd30      	pop	{r4, r5, pc}
    23a8:	6181      	str	r1, [r0, #24]
    23aa:	e7f8      	b.n	239e <_system_pinmux_config+0x92>
    23ac:	6081      	str	r1, [r0, #8]
    23ae:	e7fa      	b.n	23a6 <_system_pinmux_config+0x9a>
    23b0:	fffbffff 	.word	0xfffbffff

000023b4 <system_pinmux_pin_set_config>:
    23b4:	b510      	push	{r4, lr}
    23b6:	000a      	movs	r2, r1
    23b8:	09c1      	lsrs	r1, r0, #7
    23ba:	2300      	movs	r3, #0
    23bc:	2900      	cmp	r1, #0
    23be:	d104      	bne.n	23ca <system_pinmux_pin_set_config+0x16>
    23c0:	0943      	lsrs	r3, r0, #5
    23c2:	01db      	lsls	r3, r3, #7
    23c4:	4905      	ldr	r1, [pc, #20]	; (23dc <system_pinmux_pin_set_config+0x28>)
    23c6:	468c      	mov	ip, r1
    23c8:	4463      	add	r3, ip
    23ca:	241f      	movs	r4, #31
    23cc:	4020      	ands	r0, r4
    23ce:	2101      	movs	r1, #1
    23d0:	4081      	lsls	r1, r0
    23d2:	0018      	movs	r0, r3
    23d4:	4b02      	ldr	r3, [pc, #8]	; (23e0 <system_pinmux_pin_set_config+0x2c>)
    23d6:	4798      	blx	r3
    23d8:	bd10      	pop	{r4, pc}
    23da:	46c0      	nop			; (mov r8, r8)
    23dc:	41004400 	.word	0x41004400
    23e0:	0000230d 	.word	0x0000230d

000023e4 <_system_dummy_init>:
    23e4:	4770      	bx	lr
	...

000023e8 <system_init>:
    23e8:	b510      	push	{r4, lr}
    23ea:	4b05      	ldr	r3, [pc, #20]	; (2400 <system_init+0x18>)
    23ec:	4798      	blx	r3
    23ee:	4b05      	ldr	r3, [pc, #20]	; (2404 <system_init+0x1c>)
    23f0:	4798      	blx	r3
    23f2:	4b05      	ldr	r3, [pc, #20]	; (2408 <system_init+0x20>)
    23f4:	4798      	blx	r3
    23f6:	4b05      	ldr	r3, [pc, #20]	; (240c <system_init+0x24>)
    23f8:	4798      	blx	r3
    23fa:	4b05      	ldr	r3, [pc, #20]	; (2410 <system_init+0x28>)
    23fc:	4798      	blx	r3
    23fe:	bd10      	pop	{r4, pc}
    2400:	00001f6d 	.word	0x00001f6d
    2404:	0000114d 	.word	0x0000114d
    2408:	000023e5 	.word	0x000023e5
    240c:	0000125d 	.word	0x0000125d
    2410:	000023e5 	.word	0x000023e5

00002414 <udd_sleep_mode>:
/** \brief Manages the sleep mode following the USB state
 *
 * \param new_state  New USB state
 */
static void udd_sleep_mode(enum udd_usb_state_enum new_state)
{
    2414:	b510      	push	{r4, lr}
    2416:	b084      	sub	sp, #16
	enum sleepmgr_mode sleep_mode[] = {
    2418:	ab03      	add	r3, sp, #12
    241a:	2200      	movs	r2, #0
    241c:	701a      	strb	r2, [r3, #0]
    241e:	3203      	adds	r2, #3
    2420:	705a      	strb	r2, [r3, #1]
    2422:	3a01      	subs	r2, #1
    2424:	709a      	strb	r2, [r3, #2]
    2426:	3a01      	subs	r2, #1
    2428:	70da      	strb	r2, [r3, #3]
	#endif	
	};

	static enum udd_usb_state_enum udd_state = UDD_STATE_OFF;

	if (udd_state == new_state) {
    242a:	4b27      	ldr	r3, [pc, #156]	; (24c8 <udd_sleep_mode+0xb4>)
    242c:	781b      	ldrb	r3, [r3, #0]
    242e:	4283      	cmp	r3, r0
    2430:	d007      	beq.n	2442 <udd_sleep_mode+0x2e>
		return; // No change
	}
	if (new_state != UDD_STATE_OFF) {
    2432:	2800      	cmp	r0, #0
    2434:	d107      	bne.n	2446 <udd_sleep_mode+0x32>
		/* Lock new limit */
		sleepmgr_lock_mode(sleep_mode[new_state]);
	}
	if (udd_state != UDD_STATE_OFF) {
    2436:	4b24      	ldr	r3, [pc, #144]	; (24c8 <udd_sleep_mode+0xb4>)
    2438:	781b      	ldrb	r3, [r3, #0]
    243a:	2b00      	cmp	r3, #0
    243c:	d123      	bne.n	2486 <udd_sleep_mode+0x72>
		/* Unlock old limit */
		sleepmgr_unlock_mode(sleep_mode[udd_state]);
	}
	udd_state = new_state;
    243e:	4b22      	ldr	r3, [pc, #136]	; (24c8 <udd_sleep_mode+0xb4>)
    2440:	7018      	strb	r0, [r3, #0]
}
    2442:	b004      	add	sp, #16
    2444:	bd10      	pop	{r4, pc}
		sleepmgr_lock_mode(sleep_mode[new_state]);
    2446:	ab03      	add	r3, sp, #12
static inline void sleepmgr_lock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] >= 0xff) {
    2448:	5c1b      	ldrb	r3, [r3, r0]
    244a:	4a20      	ldr	r2, [pc, #128]	; (24cc <udd_sleep_mode+0xb8>)
    244c:	5cd2      	ldrb	r2, [r2, r3]
    244e:	2aff      	cmp	r2, #255	; 0xff
    2450:	d100      	bne.n	2454 <udd_sleep_mode+0x40>
    2452:	e7fe      	b.n	2452 <udd_sleep_mode+0x3e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    2454:	f3ef 8210 	mrs	r2, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    2458:	4251      	negs	r1, r2
    245a:	414a      	adcs	r2, r1
    245c:	9201      	str	r2, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    245e:	b672      	cpsid	i
    2460:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    2464:	2100      	movs	r1, #0
    2466:	4a1a      	ldr	r2, [pc, #104]	; (24d0 <udd_sleep_mode+0xbc>)
    2468:	7011      	strb	r1, [r2, #0]
	return flags;
    246a:	9c01      	ldr	r4, [sp, #4]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
    246c:	4917      	ldr	r1, [pc, #92]	; (24cc <udd_sleep_mode+0xb8>)
    246e:	5cca      	ldrb	r2, [r1, r3]
    2470:	3201      	adds	r2, #1
    2472:	54ca      	strb	r2, [r1, r3]
	if (cpu_irq_is_enabled_flags(flags))
    2474:	2c00      	cmp	r4, #0
    2476:	d0de      	beq.n	2436 <udd_sleep_mode+0x22>
		cpu_irq_enable();
    2478:	2201      	movs	r2, #1
    247a:	4b15      	ldr	r3, [pc, #84]	; (24d0 <udd_sleep_mode+0xbc>)
    247c:	701a      	strb	r2, [r3, #0]
    247e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    2482:	b662      	cpsie	i
    2484:	e7d7      	b.n	2436 <udd_sleep_mode+0x22>
		sleepmgr_unlock_mode(sleep_mode[udd_state]);
    2486:	aa03      	add	r2, sp, #12
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
    2488:	5cd3      	ldrb	r3, [r2, r3]
    248a:	4a10      	ldr	r2, [pc, #64]	; (24cc <udd_sleep_mode+0xb8>)
    248c:	5cd2      	ldrb	r2, [r2, r3]
    248e:	2a00      	cmp	r2, #0
    2490:	d100      	bne.n	2494 <udd_sleep_mode+0x80>
    2492:	e7fe      	b.n	2492 <udd_sleep_mode+0x7e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    2494:	f3ef 8210 	mrs	r2, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    2498:	4251      	negs	r1, r2
    249a:	414a      	adcs	r2, r1
    249c:	9202      	str	r2, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
    249e:	b672      	cpsid	i
    24a0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    24a4:	2100      	movs	r1, #0
    24a6:	4a0a      	ldr	r2, [pc, #40]	; (24d0 <udd_sleep_mode+0xbc>)
    24a8:	7011      	strb	r1, [r2, #0]
	return flags;
    24aa:	9c02      	ldr	r4, [sp, #8]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
    24ac:	4907      	ldr	r1, [pc, #28]	; (24cc <udd_sleep_mode+0xb8>)
    24ae:	5cca      	ldrb	r2, [r1, r3]
    24b0:	3a01      	subs	r2, #1
    24b2:	54ca      	strb	r2, [r1, r3]
	if (cpu_irq_is_enabled_flags(flags))
    24b4:	2c00      	cmp	r4, #0
    24b6:	d0c2      	beq.n	243e <udd_sleep_mode+0x2a>
		cpu_irq_enable();
    24b8:	2201      	movs	r2, #1
    24ba:	4b05      	ldr	r3, [pc, #20]	; (24d0 <udd_sleep_mode+0xbc>)
    24bc:	701a      	strb	r2, [r3, #0]
    24be:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    24c2:	b662      	cpsie	i
    24c4:	e7bb      	b.n	243e <udd_sleep_mode+0x2a>
    24c6:	46c0      	nop			; (mov r8, r8)
    24c8:	20000320 	.word	0x20000320
    24cc:	20000344 	.word	0x20000344
    24d0:	200000e8 	.word	0x200000e8

000024d4 <udd_ep_get_job>:
 * \param[in] ep  Endpoint Address
 * \retval    pointer to an udd_ep_job_t structure instance
 */
static udd_ep_job_t* udd_ep_get_job(udd_ep_id_t ep)
{
	if ((ep == 0) || (ep == 0x80)) {
    24d4:	0643      	lsls	r3, r0, #25
    24d6:	d00b      	beq.n	24f0 <udd_ep_get_job+0x1c>
		return NULL;
	} else {
		return &udd_ep_job[(2 * (ep & USB_EP_ADDR_MASK) + ((ep & USB_EP_DIR_IN) ? 1 : 0)) - 2];
    24d8:	230f      	movs	r3, #15
    24da:	4003      	ands	r3, r0
    24dc:	005b      	lsls	r3, r3, #1
    24de:	09c0      	lsrs	r0, r0, #7
    24e0:	1818      	adds	r0, r3, r0
    24e2:	3802      	subs	r0, #2
    24e4:	0083      	lsls	r3, r0, #2
    24e6:	1818      	adds	r0, r3, r0
    24e8:	0080      	lsls	r0, r0, #2
    24ea:	4b02      	ldr	r3, [pc, #8]	; (24f4 <udd_ep_get_job+0x20>)
    24ec:	1818      	adds	r0, r3, r0
	}
}
    24ee:	4770      	bx	lr
		return NULL;
    24f0:	2000      	movs	r0, #0
    24f2:	e7fc      	b.n	24ee <udd_ep_get_job+0x1a>
    24f4:	200002a8 	.word	0x200002a8

000024f8 <udd_ep_transfer_process>:
 * \brief     Endpoint Transfer Complete callback function, to do the next transfer depends on the direction(IN or OUT)
 * \param[in] module_inst Pointer to USB module instance
 * \param[in] pointer Pointer to the endpoint transfer status parameter struct from driver layer.
 */
static void udd_ep_transfer_process(struct usb_module *module_inst, void* pointer)
{
    24f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    24fa:	46d6      	mov	lr, sl
    24fc:	464f      	mov	r7, r9
    24fe:	4646      	mov	r6, r8
    2500:	b5c0      	push	{r6, r7, lr}
    2502:	4689      	mov	r9, r1
	struct usb_endpoint_callback_parameter *ep_callback_para = (struct usb_endpoint_callback_parameter*)pointer;
	udd_ep_id_t ep = ep_callback_para->endpoint_address;
    2504:	798d      	ldrb	r5, [r1, #6]

	if (ep & USB_EP_DIR_IN) {
    2506:	b26b      	sxtb	r3, r5
    2508:	2b00      	cmp	r3, #0
    250a:	db26      	blt.n	255a <udd_ep_transfer_process+0x62>
	ptr_job = udd_ep_get_job(ep);
    250c:	0028      	movs	r0, r5
    250e:	4b5e      	ldr	r3, [pc, #376]	; (2688 <udd_ep_transfer_process+0x190>)
    2510:	4798      	blx	r3
    2512:	0004      	movs	r4, r0
	ep_num = ep & USB_EP_ADDR_MASK;
    2514:	270f      	movs	r7, #15
    2516:	402f      	ands	r7, r5
	ep_size = ptr_job->ep_size;
    2518:	8a03      	ldrh	r3, [r0, #16]
    251a:	4698      	mov	r8, r3
	nb_trans = ep_callback_para->received_bytes;
    251c:	464b      	mov	r3, r9
    251e:	881b      	ldrh	r3, [r3, #0]
    2520:	469a      	mov	sl, r3
	if (ptr_job->b_use_out_cache_buffer) {
    2522:	7c83      	ldrb	r3, [r0, #18]
    2524:	075b      	lsls	r3, r3, #29
    2526:	d46a      	bmi.n	25fe <udd_ep_transfer_process+0x106>
	ptr_job->nb_trans += nb_trans;
    2528:	68e3      	ldr	r3, [r4, #12]
    252a:	4453      	add	r3, sl
    252c:	001e      	movs	r6, r3
    252e:	60e3      	str	r3, [r4, #12]
	if (ptr_job->nb_trans > ptr_job->buf_size) {
    2530:	68a3      	ldr	r3, [r4, #8]
    2532:	429e      	cmp	r6, r3
    2534:	d800      	bhi.n	2538 <udd_ep_transfer_process+0x40>
    2536:	e074      	b.n	2622 <udd_ep_transfer_process+0x12a>
		ptr_job->nb_trans = ptr_job->buf_size;
    2538:	60e3      	str	r3, [r4, #12]
	ptr_job->busy = false;
    253a:	7ca3      	ldrb	r3, [r4, #18]
    253c:	2201      	movs	r2, #1
    253e:	4393      	bics	r3, r2
    2540:	74a3      	strb	r3, [r4, #18]
	if (NULL != ptr_job->call_trans) {
    2542:	6823      	ldr	r3, [r4, #0]
    2544:	2b00      	cmp	r3, #0
    2546:	d003      	beq.n	2550 <udd_ep_transfer_process+0x58>
		ptr_job->call_trans(UDD_EP_TRANSFER_OK, ptr_job->nb_trans, ep);
    2548:	68e1      	ldr	r1, [r4, #12]
    254a:	002a      	movs	r2, r5
    254c:	2000      	movs	r0, #0
    254e:	4798      	blx	r3
		udd_ep_trans_in_next(pointer);
	} else {
		udd_ep_trans_out_next(pointer);
	}
}
    2550:	bc1c      	pop	{r2, r3, r4}
    2552:	4690      	mov	r8, r2
    2554:	4699      	mov	r9, r3
    2556:	46a2      	mov	sl, r4
    2558:	bdf0      	pop	{r4, r5, r6, r7, pc}
	ptr_job = udd_ep_get_job(ep);
    255a:	0028      	movs	r0, r5
    255c:	4b4a      	ldr	r3, [pc, #296]	; (2688 <udd_ep_transfer_process+0x190>)
    255e:	4798      	blx	r3
    2560:	0004      	movs	r4, r0
	ep_num = ep & USB_EP_ADDR_MASK;
    2562:	270f      	movs	r7, #15
    2564:	402f      	ands	r7, r5
	ep_size = ptr_job->ep_size;
    2566:	8a03      	ldrh	r3, [r0, #16]
    2568:	4698      	mov	r8, r3
	ptr_job->nb_trans += nb_trans;
    256a:	464b      	mov	r3, r9
    256c:	885e      	ldrh	r6, [r3, #2]
    256e:	68c3      	ldr	r3, [r0, #12]
    2570:	469c      	mov	ip, r3
    2572:	4466      	add	r6, ip
    2574:	60c6      	str	r6, [r0, #12]
	if (ptr_job->nb_trans != ptr_job->buf_size) {
    2576:	6881      	ldr	r1, [r0, #8]
    2578:	428e      	cmp	r6, r1
    257a:	d025      	beq.n	25c8 <udd_ep_transfer_process+0xd0>
		next_trans = ptr_job->buf_size - ptr_job->nb_trans;
    257c:	1b8d      	subs	r5, r1, r6
    257e:	b2ad      	uxth	r5, r5
		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    2580:	4b42      	ldr	r3, [pc, #264]	; (268c <udd_ep_transfer_process+0x194>)
    2582:	429d      	cmp	r5, r3
    2584:	d906      	bls.n	2594 <udd_ep_transfer_process+0x9c>
			next_trans = UDD_ENDPOINT_MAX_TRANS -(UDD_ENDPOINT_MAX_TRANS % ep_size);
    2586:	001d      	movs	r5, r3
    2588:	4641      	mov	r1, r8
    258a:	0018      	movs	r0, r3
    258c:	4b40      	ldr	r3, [pc, #256]	; (2690 <udd_ep_transfer_process+0x198>)
    258e:	4798      	blx	r3
    2590:	1a6d      	subs	r5, r5, r1
    2592:	b2ad      	uxth	r5, r5
		ptr_job->b_shortpacket = ptr_job->b_shortpacket && (0 == (next_trans % ep_size));
    2594:	7ca2      	ldrb	r2, [r4, #18]
    2596:	2300      	movs	r3, #0
    2598:	0792      	lsls	r2, r2, #30
    259a:	d507      	bpl.n	25ac <udd_ep_transfer_process+0xb4>
    259c:	4641      	mov	r1, r8
    259e:	0028      	movs	r0, r5
    25a0:	4b3c      	ldr	r3, [pc, #240]	; (2694 <udd_ep_transfer_process+0x19c>)
    25a2:	4798      	blx	r3
    25a4:	b289      	uxth	r1, r1
    25a6:	424b      	negs	r3, r1
    25a8:	414b      	adcs	r3, r1
    25aa:	b2db      	uxtb	r3, r3
    25ac:	005b      	lsls	r3, r3, #1
    25ae:	7ca2      	ldrb	r2, [r4, #18]
    25b0:	2102      	movs	r1, #2
    25b2:	438a      	bics	r2, r1
    25b4:	4313      	orrs	r3, r2
    25b6:	74a3      	strb	r3, [r4, #18]
		usb_device_endpoint_write_buffer_job(&usb_device,ep_num,&ptr_job->buf[ptr_job->nb_trans],next_trans);
    25b8:	6862      	ldr	r2, [r4, #4]
    25ba:	1992      	adds	r2, r2, r6
    25bc:	002b      	movs	r3, r5
    25be:	0039      	movs	r1, r7
    25c0:	4835      	ldr	r0, [pc, #212]	; (2698 <udd_ep_transfer_process+0x1a0>)
    25c2:	4c36      	ldr	r4, [pc, #216]	; (269c <udd_ep_transfer_process+0x1a4>)
    25c4:	47a0      	blx	r4
    25c6:	e7c3      	b.n	2550 <udd_ep_transfer_process+0x58>
	if (ptr_job->b_shortpacket) {
    25c8:	7c83      	ldrb	r3, [r0, #18]
    25ca:	079b      	lsls	r3, r3, #30
    25cc:	d40b      	bmi.n	25e6 <udd_ep_transfer_process+0xee>
	ptr_job->busy = false;
    25ce:	7c83      	ldrb	r3, [r0, #18]
    25d0:	2201      	movs	r2, #1
    25d2:	4393      	bics	r3, r2
    25d4:	7483      	strb	r3, [r0, #18]
	if (NULL != ptr_job->call_trans) {
    25d6:	6803      	ldr	r3, [r0, #0]
    25d8:	2b00      	cmp	r3, #0
    25da:	d0b9      	beq.n	2550 <udd_ep_transfer_process+0x58>
		ptr_job->call_trans(UDD_EP_TRANSFER_OK, ptr_job->nb_trans, ep);
    25dc:	002a      	movs	r2, r5
    25de:	0031      	movs	r1, r6
    25e0:	2000      	movs	r0, #0
    25e2:	4798      	blx	r3
    25e4:	e7b4      	b.n	2550 <udd_ep_transfer_process+0x58>
		ptr_job->b_shortpacket = false;
    25e6:	7c83      	ldrb	r3, [r0, #18]
    25e8:	2202      	movs	r2, #2
    25ea:	4393      	bics	r3, r2
    25ec:	7483      	strb	r3, [r0, #18]
		usb_device_endpoint_write_buffer_job(&usb_device,ep_num,&ptr_job->buf[ptr_job->nb_trans],0);
    25ee:	6842      	ldr	r2, [r0, #4]
    25f0:	1992      	adds	r2, r2, r6
    25f2:	2300      	movs	r3, #0
    25f4:	0039      	movs	r1, r7
    25f6:	4828      	ldr	r0, [pc, #160]	; (2698 <udd_ep_transfer_process+0x1a0>)
    25f8:	4c28      	ldr	r4, [pc, #160]	; (269c <udd_ep_transfer_process+0x1a4>)
    25fa:	47a0      	blx	r4
    25fc:	e7a8      	b.n	2550 <udd_ep_transfer_process+0x58>
		memcpy(&ptr_job->buf[ptr_job->nb_trans], udd_ep_out_cache_buffer[ep_num - 1], ptr_job->buf_size % ep_size);
    25fe:	6843      	ldr	r3, [r0, #4]
    2600:	68c2      	ldr	r2, [r0, #12]
    2602:	4694      	mov	ip, r2
    2604:	4463      	add	r3, ip
    2606:	001e      	movs	r6, r3
    2608:	4641      	mov	r1, r8
    260a:	6880      	ldr	r0, [r0, #8]
    260c:	4b21      	ldr	r3, [pc, #132]	; (2694 <udd_ep_transfer_process+0x19c>)
    260e:	4798      	blx	r3
    2610:	000a      	movs	r2, r1
    2612:	1e7b      	subs	r3, r7, #1
    2614:	019b      	lsls	r3, r3, #6
    2616:	4922      	ldr	r1, [pc, #136]	; (26a0 <udd_ep_transfer_process+0x1a8>)
    2618:	1859      	adds	r1, r3, r1
    261a:	0030      	movs	r0, r6
    261c:	4b21      	ldr	r3, [pc, #132]	; (26a4 <udd_ep_transfer_process+0x1ac>)
    261e:	4798      	blx	r3
    2620:	e782      	b.n	2528 <udd_ep_transfer_process+0x30>
	if ((nb_trans == ep_callback_para->out_buffer_size) && (ptr_job->nb_trans != ptr_job->buf_size)) {
    2622:	464a      	mov	r2, r9
    2624:	8892      	ldrh	r2, [r2, #4]
    2626:	4552      	cmp	r2, sl
    2628:	d000      	beq.n	262c <udd_ep_transfer_process+0x134>
    262a:	e786      	b.n	253a <udd_ep_transfer_process+0x42>
    262c:	429e      	cmp	r6, r3
    262e:	d100      	bne.n	2632 <udd_ep_transfer_process+0x13a>
    2630:	e783      	b.n	253a <udd_ep_transfer_process+0x42>
		next_trans = ptr_job->buf_size - ptr_job->nb_trans;
    2632:	1b9b      	subs	r3, r3, r6
    2634:	b29d      	uxth	r5, r3
		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    2636:	4b15      	ldr	r3, [pc, #84]	; (268c <udd_ep_transfer_process+0x194>)
    2638:	429d      	cmp	r5, r3
    263a:	d916      	bls.n	266a <udd_ep_transfer_process+0x172>
		next_trans = UDD_ENDPOINT_MAX_TRANS - (UDD_ENDPOINT_MAX_TRANS % ep_size);
    263c:	001d      	movs	r5, r3
    263e:	4641      	mov	r1, r8
    2640:	0018      	movs	r0, r3
    2642:	4b13      	ldr	r3, [pc, #76]	; (2690 <udd_ep_transfer_process+0x198>)
    2644:	4798      	blx	r3
    2646:	1a6b      	subs	r3, r5, r1
    2648:	b29b      	uxth	r3, r3
		if (next_trans < ep_size) {
    264a:	4598      	cmp	r8, r3
    264c:	d914      	bls.n	2678 <udd_ep_transfer_process+0x180>
			ptr_job->b_use_out_cache_buffer = true;
    264e:	7ca3      	ldrb	r3, [r4, #18]
    2650:	2204      	movs	r2, #4
    2652:	4313      	orrs	r3, r2
    2654:	74a3      	strb	r3, [r4, #18]
			usb_device_endpoint_read_buffer_job(&usb_device,ep_num,udd_ep_out_cache_buffer[ep_num - 1],ep_size);
    2656:	1e7a      	subs	r2, r7, #1
    2658:	0192      	lsls	r2, r2, #6
    265a:	4b11      	ldr	r3, [pc, #68]	; (26a0 <udd_ep_transfer_process+0x1a8>)
    265c:	18d2      	adds	r2, r2, r3
    265e:	4643      	mov	r3, r8
    2660:	0039      	movs	r1, r7
    2662:	480d      	ldr	r0, [pc, #52]	; (2698 <udd_ep_transfer_process+0x1a0>)
    2664:	4c10      	ldr	r4, [pc, #64]	; (26a8 <udd_ep_transfer_process+0x1b0>)
    2666:	47a0      	blx	r4
    2668:	e772      	b.n	2550 <udd_ep_transfer_process+0x58>
			next_trans -= next_trans % ep_size;
    266a:	4641      	mov	r1, r8
    266c:	0028      	movs	r0, r5
    266e:	4b09      	ldr	r3, [pc, #36]	; (2694 <udd_ep_transfer_process+0x19c>)
    2670:	4798      	blx	r3
    2672:	1a6b      	subs	r3, r5, r1
    2674:	b29b      	uxth	r3, r3
    2676:	e7e8      	b.n	264a <udd_ep_transfer_process+0x152>
			usb_device_endpoint_read_buffer_job(&usb_device,ep_num,&ptr_job->buf[ptr_job->nb_trans],next_trans);
    2678:	6862      	ldr	r2, [r4, #4]
    267a:	1992      	adds	r2, r2, r6
    267c:	0039      	movs	r1, r7
    267e:	4806      	ldr	r0, [pc, #24]	; (2698 <udd_ep_transfer_process+0x1a0>)
    2680:	4c09      	ldr	r4, [pc, #36]	; (26a8 <udd_ep_transfer_process+0x1b0>)
    2682:	47a0      	blx	r4
    2684:	e764      	b.n	2550 <udd_ep_transfer_process+0x58>
    2686:	46c0      	nop			; (mov r8, r8)
    2688:	000024d5 	.word	0x000024d5
    268c:	00001fff 	.word	0x00001fff
    2690:	00004891 	.word	0x00004891
    2694:	000046bd 	.word	0x000046bd
    2698:	20000464 	.word	0x20000464
    269c:	000037e5 	.word	0x000037e5
    26a0:	200003a4 	.word	0x200003a4
    26a4:	00004979 	.word	0x00004979
    26a8:	00003839 	.word	0x00003839

000026ac <udd_ctrl_stall_data>:

/**
 * \brief Control Endpoint stall sending data
 */
static void udd_ctrl_stall_data(void)
{
    26ac:	b510      	push	{r4, lr}
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    26ae:	2205      	movs	r2, #5
    26b0:	4b05      	ldr	r3, [pc, #20]	; (26c8 <udd_ctrl_stall_data+0x1c>)
    26b2:	701a      	strb	r2, [r3, #0]

	usb_device_endpoint_set_halt(&usb_device, USB_EP_DIR_IN);
    26b4:	4c05      	ldr	r4, [pc, #20]	; (26cc <udd_ctrl_stall_data+0x20>)
    26b6:	2180      	movs	r1, #128	; 0x80
    26b8:	0020      	movs	r0, r4
    26ba:	4b05      	ldr	r3, [pc, #20]	; (26d0 <udd_ctrl_stall_data+0x24>)
    26bc:	4798      	blx	r3
	usb_device_endpoint_clear_halt(&usb_device, USB_EP_DIR_OUT);
    26be:	2100      	movs	r1, #0
    26c0:	0020      	movs	r0, r4
    26c2:	4b04      	ldr	r3, [pc, #16]	; (26d4 <udd_ctrl_stall_data+0x28>)
    26c4:	4798      	blx	r3
}
    26c6:	bd10      	pop	{r4, pc}
    26c8:	200002a6 	.word	0x200002a6
    26cc:	20000464 	.word	0x20000464
    26d0:	00003739 	.word	0x00003739
    26d4:	0000375f 	.word	0x0000375f

000026d8 <_usb_device_lpm_suspend>:
#endif
}

#ifdef  USB_DEVICE_LPM_SUPPORT
static void _usb_device_lpm_suspend(struct usb_module *module_inst, void *pointer)
{
    26d8:	b570      	push	{r4, r5, r6, lr}
    26da:	000e      	movs	r6, r1
	dbg_print("LPM_SUSP\n");

	uint32_t *lpm_wakeup_enable;
	lpm_wakeup_enable = (uint32_t *)pointer;

	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP);
    26dc:	4c0e      	ldr	r4, [pc, #56]	; (2718 <_usb_device_lpm_suspend+0x40>)
    26de:	2106      	movs	r1, #6
    26e0:	0020      	movs	r0, r4
    26e2:	4d0e      	ldr	r5, [pc, #56]	; (271c <_usb_device_lpm_suspend+0x44>)
    26e4:	47a8      	blx	r5
	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    26e6:	2104      	movs	r1, #4
    26e8:	0020      	movs	r0, r4
    26ea:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    26ec:	2102      	movs	r1, #2
    26ee:	0020      	movs	r0, r4
    26f0:	4b0b      	ldr	r3, [pc, #44]	; (2720 <_usb_device_lpm_suspend+0x48>)
    26f2:	4798      	blx	r3

//#warning Here the sleep mode must be choose to have a DFLL startup time < bmAttribut.HIRD
	udd_sleep_mode(UDD_STATE_SUSPEND_LPM);  // Enter in LPM SUSPEND mode
    26f4:	2002      	movs	r0, #2
    26f6:	4b0b      	ldr	r3, [pc, #44]	; (2724 <_usb_device_lpm_suspend+0x4c>)
    26f8:	4798      	blx	r3
	if ((*lpm_wakeup_enable)) {
    26fa:	6833      	ldr	r3, [r6, #0]
    26fc:	2b00      	cmp	r3, #0
    26fe:	d104      	bne.n	270a <_usb_device_lpm_suspend+0x32>
		UDC_REMOTEWAKEUP_LPM_ENABLE();
	}
	if (!(*lpm_wakeup_enable)) {
		UDC_REMOTEWAKEUP_LPM_DISABLE();
    2700:	4b09      	ldr	r3, [pc, #36]	; (2728 <_usb_device_lpm_suspend+0x50>)
    2702:	4798      	blx	r3
	}
	UDC_SUSPEND_LPM_EVENT();
    2704:	4b09      	ldr	r3, [pc, #36]	; (272c <_usb_device_lpm_suspend+0x54>)
    2706:	4798      	blx	r3
}
    2708:	bd70      	pop	{r4, r5, r6, pc}
		UDC_REMOTEWAKEUP_LPM_ENABLE();
    270a:	4b09      	ldr	r3, [pc, #36]	; (2730 <_usb_device_lpm_suspend+0x58>)
    270c:	4798      	blx	r3
	if (!(*lpm_wakeup_enable)) {
    270e:	6833      	ldr	r3, [r6, #0]
    2710:	2b00      	cmp	r3, #0
    2712:	d1f7      	bne.n	2704 <_usb_device_lpm_suspend+0x2c>
    2714:	e7f4      	b.n	2700 <_usb_device_lpm_suspend+0x28>
    2716:	46c0      	nop			; (mov r8, r8)
    2718:	20000464 	.word	0x20000464
    271c:	00003279 	.word	0x00003279
    2720:	00003259 	.word	0x00003259
    2724:	00002415 	.word	0x00002415
    2728:	0000424d 	.word	0x0000424d
    272c:	00004241 	.word	0x00004241
    2730:	00004259 	.word	0x00004259

00002734 <_usb_on_wakeup>:
 * \brief Control endpoint Wakeup callback function
 * \param[in] module_inst Pointer to USB module instance
 * \param[in] pointer Pointer to the callback parameter from driver layer.
 */
static void _usb_on_wakeup(struct usb_module *module_inst, void *pointer)
{
    2734:	b570      	push	{r4, r5, r6, lr}
		if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    2736:	4b13      	ldr	r3, [pc, #76]	; (2784 <_usb_on_wakeup+0x50>)
    2738:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    273a:	069b      	lsls	r3, r3, #26
    273c:	d41c      	bmi.n	2778 <_usb_on_wakeup+0x44>
			while((SYSCTRL->PCLKSR.reg & DFLL_READY_FLAG) != DFLL_READY_FLAG);
    273e:	4911      	ldr	r1, [pc, #68]	; (2784 <_usb_on_wakeup+0x50>)
    2740:	22d0      	movs	r2, #208	; 0xd0
    2742:	68cb      	ldr	r3, [r1, #12]
    2744:	4013      	ands	r3, r2
    2746:	2bd0      	cmp	r3, #208	; 0xd0
    2748:	d1fb      	bne.n	2742 <_usb_on_wakeup+0xe>
	udd_wait_clock_ready();

	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    274a:	4c0f      	ldr	r4, [pc, #60]	; (2788 <_usb_on_wakeup+0x54>)
    274c:	2102      	movs	r1, #2
    274e:	0020      	movs	r0, r4
    2750:	4b0e      	ldr	r3, [pc, #56]	; (278c <_usb_on_wakeup+0x58>)
    2752:	4798      	blx	r3
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    2754:	2104      	movs	r1, #4
    2756:	0020      	movs	r0, r4
    2758:	4d0d      	ldr	r5, [pc, #52]	; (2790 <_usb_on_wakeup+0x5c>)
    275a:	47a8      	blx	r5
#ifdef  USB_DEVICE_LPM_SUPPORT
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP, _usb_device_lpm_suspend);
    275c:	4a0d      	ldr	r2, [pc, #52]	; (2794 <_usb_on_wakeup+0x60>)
    275e:	2106      	movs	r1, #6
    2760:	0020      	movs	r0, r4
    2762:	4b0d      	ldr	r3, [pc, #52]	; (2798 <_usb_on_wakeup+0x64>)
    2764:	4798      	blx	r3
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP);
    2766:	2106      	movs	r1, #6
    2768:	0020      	movs	r0, r4
    276a:	47a8      	blx	r5
#endif
	udd_sleep_mode(UDD_STATE_IDLE);
    276c:	2003      	movs	r0, #3
    276e:	4b0b      	ldr	r3, [pc, #44]	; (279c <_usb_on_wakeup+0x68>)
    2770:	4798      	blx	r3
#ifdef UDC_RESUME_EVENT
	UDC_RESUME_EVENT();
    2772:	4b0b      	ldr	r3, [pc, #44]	; (27a0 <_usb_on_wakeup+0x6c>)
    2774:	4798      	blx	r3
#endif
}
    2776:	bd70      	pop	{r4, r5, r6, pc}
			while((SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY);
    2778:	4902      	ldr	r1, [pc, #8]	; (2784 <_usb_on_wakeup+0x50>)
    277a:	2210      	movs	r2, #16
    277c:	68cb      	ldr	r3, [r1, #12]
    277e:	421a      	tst	r2, r3
    2780:	d0fc      	beq.n	277c <_usb_on_wakeup+0x48>
    2782:	e7e2      	b.n	274a <_usb_on_wakeup+0x16>
    2784:	40000800 	.word	0x40000800
    2788:	20000464 	.word	0x20000464
    278c:	00003279 	.word	0x00003279
    2790:	00003259 	.word	0x00003259
    2794:	000026d9 	.word	0x000026d9
    2798:	00003235 	.word	0x00003235
    279c:	00002415 	.word	0x00002415
    27a0:	00004211 	.word	0x00004211

000027a4 <_usb_on_bus_reset>:
{
    27a4:	b530      	push	{r4, r5, lr}
    27a6:	b083      	sub	sp, #12
    27a8:	0004      	movs	r4, r0
	udc_reset();
    27aa:	4b1e      	ldr	r3, [pc, #120]	; (2824 <_usb_on_bus_reset+0x80>)
    27ac:	4798      	blx	r3
 * \param module_inst Pointer to USB device module instance
 * \param address     USB device address value
 */
static inline void usb_device_set_address(struct usb_module *module_inst, uint8_t address)
{
	module_inst->hw->DEVICE.DADD.reg = USB_DEVICE_DADD_ADDEN | address;
    27ae:	2380      	movs	r3, #128	; 0x80
    27b0:	6822      	ldr	r2, [r4, #0]
    27b2:	7293      	strb	r3, [r2, #10]
	 usb_device_endpoint_get_config_defaults(&config_ep0);
    27b4:	ad01      	add	r5, sp, #4
    27b6:	0028      	movs	r0, r5
    27b8:	4b1b      	ldr	r3, [pc, #108]	; (2828 <_usb_on_bus_reset+0x84>)
    27ba:	4798      	blx	r3
	 config_ep0.ep_size = (enum usb_endpoint_size)(32 - clz(((uint32_t)Min(Max(USB_DEVICE_EP_CTRL_SIZE, 8), 1024) << 1) - 1) - 1 - 3);
    27bc:	2303      	movs	r3, #3
    27be:	706b      	strb	r3, [r5, #1]
	 usb_device_endpoint_set_config(module_inst,&config_ep0);
    27c0:	0029      	movs	r1, r5
    27c2:	0020      	movs	r0, r4
    27c4:	4b19      	ldr	r3, [pc, #100]	; (282c <_usb_on_bus_reset+0x88>)
    27c6:	4798      	blx	r3
	 usb_device_endpoint_setup_buffer_job(module_inst,udd_ctrl_buffer);
    27c8:	4919      	ldr	r1, [pc, #100]	; (2830 <_usb_on_bus_reset+0x8c>)
    27ca:	0020      	movs	r0, r4
    27cc:	4b19      	ldr	r3, [pc, #100]	; (2834 <_usb_on_bus_reset+0x90>)
    27ce:	4798      	blx	r3
	 usb_device_endpoint_register_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_RXSTP, _usb_ep0_on_setup );
    27d0:	4b19      	ldr	r3, [pc, #100]	; (2838 <_usb_on_bus_reset+0x94>)
    27d2:	2202      	movs	r2, #2
    27d4:	2100      	movs	r1, #0
    27d6:	0020      	movs	r0, r4
    27d8:	4d18      	ldr	r5, [pc, #96]	; (283c <_usb_on_bus_reset+0x98>)
    27da:	47a8      	blx	r5
	 usb_device_endpoint_register_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT,_usb_ep0_on_tansfer_ok );
    27dc:	4b18      	ldr	r3, [pc, #96]	; (2840 <_usb_on_bus_reset+0x9c>)
    27de:	2200      	movs	r2, #0
    27e0:	2100      	movs	r1, #0
    27e2:	0020      	movs	r0, r4
    27e4:	47a8      	blx	r5
	 usb_device_endpoint_register_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRFAIL,_usb_ep0_on_tansfer_fail );
    27e6:	4b17      	ldr	r3, [pc, #92]	; (2844 <_usb_on_bus_reset+0xa0>)
    27e8:	2201      	movs	r2, #1
    27ea:	2100      	movs	r1, #0
    27ec:	0020      	movs	r0, r4
    27ee:	47a8      	blx	r5
	 usb_device_endpoint_enable_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_RXSTP);
    27f0:	2202      	movs	r2, #2
    27f2:	2100      	movs	r1, #0
    27f4:	0020      	movs	r0, r4
    27f6:	4d14      	ldr	r5, [pc, #80]	; (2848 <_usb_on_bus_reset+0xa4>)
    27f8:	47a8      	blx	r5
	 usb_device_endpoint_enable_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    27fa:	2200      	movs	r2, #0
    27fc:	2100      	movs	r1, #0
    27fe:	0020      	movs	r0, r4
    2800:	47a8      	blx	r5
	 usb_device_endpoint_enable_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRFAIL);
    2802:	2201      	movs	r2, #1
    2804:	2100      	movs	r1, #0
    2806:	0020      	movs	r0, r4
    2808:	47a8      	blx	r5
 * \param lpm_mode    LPM mode
 */
static inline void usb_device_set_lpm_mode(struct usb_module *module_inst,
		enum usb_device_lpm_mode lpm_mode)
{
	module_inst->hw->DEVICE.CTRLB.bit.LPMHDSK = lpm_mode;
    280a:	6821      	ldr	r1, [r4, #0]
    280c:	890b      	ldrh	r3, [r1, #8]
    280e:	4a0f      	ldr	r2, [pc, #60]	; (284c <_usb_on_bus_reset+0xa8>)
    2810:	401a      	ands	r2, r3
    2812:	2380      	movs	r3, #128	; 0x80
    2814:	00db      	lsls	r3, r3, #3
    2816:	4313      	orrs	r3, r2
    2818:	810b      	strh	r3, [r1, #8]
	 udd_ep_control_state = UDD_EPCTRL_SETUP;
    281a:	2200      	movs	r2, #0
    281c:	4b0c      	ldr	r3, [pc, #48]	; (2850 <_usb_on_bus_reset+0xac>)
    281e:	701a      	strb	r2, [r3, #0]
}
    2820:	b003      	add	sp, #12
    2822:	bd30      	pop	{r4, r5, pc}
    2824:	00000c0d 	.word	0x00000c0d
    2828:	00003485 	.word	0x00003485
    282c:	00003495 	.word	0x00003495
    2830:	200005e4 	.word	0x200005e4
    2834:	00003889 	.word	0x00003889
    2838:	0000298d 	.word	0x0000298d
    283c:	00003295 	.word	0x00003295
    2840:	00002cbd 	.word	0x00002cbd
    2844:	00002891 	.word	0x00002891
    2848:	000032e5 	.word	0x000032e5
    284c:	fffff3ff 	.word	0xfffff3ff
    2850:	200002a6 	.word	0x200002a6

00002854 <udd_ctrl_send_zlp_in>:
{
    2854:	b510      	push	{r4, lr}
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
    2856:	2203      	movs	r2, #3
    2858:	4b07      	ldr	r3, [pc, #28]	; (2878 <udd_ctrl_send_zlp_in+0x24>)
    285a:	701a      	strb	r2, [r3, #0]
	usb_device_endpoint_setup_buffer_job(&usb_device,udd_ctrl_buffer);
    285c:	4c07      	ldr	r4, [pc, #28]	; (287c <udd_ctrl_send_zlp_in+0x28>)
    285e:	4908      	ldr	r1, [pc, #32]	; (2880 <udd_ctrl_send_zlp_in+0x2c>)
    2860:	0020      	movs	r0, r4
    2862:	4b08      	ldr	r3, [pc, #32]	; (2884 <udd_ctrl_send_zlp_in+0x30>)
    2864:	4798      	blx	r3
	usb_device_endpoint_write_buffer_job(&usb_device,0,udd_g_ctrlreq.payload,0);
    2866:	4b08      	ldr	r3, [pc, #32]	; (2888 <udd_ctrl_send_zlp_in+0x34>)
    2868:	689a      	ldr	r2, [r3, #8]
    286a:	2300      	movs	r3, #0
    286c:	2100      	movs	r1, #0
    286e:	0020      	movs	r0, r4
    2870:	4c06      	ldr	r4, [pc, #24]	; (288c <udd_ctrl_send_zlp_in+0x38>)
    2872:	47a0      	blx	r4
}
    2874:	bd10      	pop	{r4, pc}
    2876:	46c0      	nop			; (mov r8, r8)
    2878:	200002a6 	.word	0x200002a6
    287c:	20000464 	.word	0x20000464
    2880:	200005e4 	.word	0x200005e4
    2884:	00003889 	.word	0x00003889
    2888:	200005cc 	.word	0x200005cc
    288c:	000037e5 	.word	0x000037e5

00002890 <_usb_ep0_on_tansfer_fail>:
{
    2890:	b510      	push	{r4, lr}
	if(ep_callback_para->endpoint_address & USB_EP_DIR_IN) {
    2892:	7989      	ldrb	r1, [r1, #6]
    2894:	b24b      	sxtb	r3, r1
    2896:	2b00      	cmp	r3, #0
    2898:	db06      	blt.n	28a8 <_usb_ep0_on_tansfer_fail+0x18>
	if (UDD_EPCTRL_DATA_IN == udd_ep_control_state) {
    289a:	4b0e      	ldr	r3, [pc, #56]	; (28d4 <_usb_ep0_on_tansfer_fail+0x44>)
    289c:	781b      	ldrb	r3, [r3, #0]
    289e:	2b02      	cmp	r3, #2
    28a0:	d00f      	beq.n	28c2 <_usb_ep0_on_tansfer_fail+0x32>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
    28a2:	2b03      	cmp	r3, #3
    28a4:	d011      	beq.n	28ca <_usb_ep0_on_tansfer_fail+0x3a>
}
    28a6:	bd10      	pop	{r4, pc}
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
    28a8:	4b0a      	ldr	r3, [pc, #40]	; (28d4 <_usb_ep0_on_tansfer_fail+0x44>)
    28aa:	781b      	ldrb	r3, [r3, #0]
    28ac:	2b01      	cmp	r3, #1
    28ae:	d005      	beq.n	28bc <_usb_ep0_on_tansfer_fail+0x2c>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
    28b0:	2b04      	cmp	r3, #4
    28b2:	d1f8      	bne.n	28a6 <_usb_ep0_on_tansfer_fail+0x16>
		usb_device_endpoint_set_halt(&usb_device, ep_callback_para->endpoint_address);
    28b4:	4808      	ldr	r0, [pc, #32]	; (28d8 <_usb_ep0_on_tansfer_fail+0x48>)
    28b6:	4b09      	ldr	r3, [pc, #36]	; (28dc <_usb_ep0_on_tansfer_fail+0x4c>)
    28b8:	4798      	blx	r3
    28ba:	e7f4      	b.n	28a6 <_usb_ep0_on_tansfer_fail+0x16>
		udd_ctrl_send_zlp_in();
    28bc:	4b08      	ldr	r3, [pc, #32]	; (28e0 <_usb_ep0_on_tansfer_fail+0x50>)
    28be:	4798      	blx	r3
    28c0:	e7f1      	b.n	28a6 <_usb_ep0_on_tansfer_fail+0x16>
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
    28c2:	2204      	movs	r2, #4
    28c4:	4b03      	ldr	r3, [pc, #12]	; (28d4 <_usb_ep0_on_tansfer_fail+0x44>)
    28c6:	701a      	strb	r2, [r3, #0]
    28c8:	e7ed      	b.n	28a6 <_usb_ep0_on_tansfer_fail+0x16>
		usb_device_endpoint_set_halt(&usb_device, ep_callback_para->endpoint_address);
    28ca:	4803      	ldr	r0, [pc, #12]	; (28d8 <_usb_ep0_on_tansfer_fail+0x48>)
    28cc:	4b03      	ldr	r3, [pc, #12]	; (28dc <_usb_ep0_on_tansfer_fail+0x4c>)
    28ce:	4798      	blx	r3
}
    28d0:	e7e9      	b.n	28a6 <_usb_ep0_on_tansfer_fail+0x16>
    28d2:	46c0      	nop			; (mov r8, r8)
    28d4:	200002a6 	.word	0x200002a6
    28d8:	20000464 	.word	0x20000464
    28dc:	00003739 	.word	0x00003739
    28e0:	00002855 	.word	0x00002855

000028e4 <udd_ctrl_in_sent>:
{
    28e4:	b570      	push	{r4, r5, r6, lr}
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
    28e6:	4b20      	ldr	r3, [pc, #128]	; (2968 <udd_ctrl_in_sent+0x84>)
    28e8:	881b      	ldrh	r3, [r3, #0]
    28ea:	4a20      	ldr	r2, [pc, #128]	; (296c <udd_ctrl_in_sent+0x88>)
    28ec:	8994      	ldrh	r4, [r2, #12]
    28ee:	1ae4      	subs	r4, r4, r3
    28f0:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
    28f2:	2c00      	cmp	r4, #0
    28f4:	d118      	bne.n	2928 <udd_ctrl_in_sent+0x44>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
    28f6:	4a1e      	ldr	r2, [pc, #120]	; (2970 <udd_ctrl_in_sent+0x8c>)
    28f8:	8811      	ldrh	r1, [r2, #0]
    28fa:	185b      	adds	r3, r3, r1
    28fc:	b29b      	uxth	r3, r3
    28fe:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_nb_trans) || b_shortpacket) {
    2900:	4a1a      	ldr	r2, [pc, #104]	; (296c <udd_ctrl_in_sent+0x88>)
    2902:	88d2      	ldrh	r2, [r2, #6]
    2904:	429a      	cmp	r2, r3
    2906:	d023      	beq.n	2950 <udd_ctrl_in_sent+0x6c>
    2908:	4b1a      	ldr	r3, [pc, #104]	; (2974 <udd_ctrl_in_sent+0x90>)
    290a:	781b      	ldrb	r3, [r3, #0]
    290c:	2b00      	cmp	r3, #0
    290e:	d11f      	bne.n	2950 <udd_ctrl_in_sent+0x6c>
		if ((!udd_g_ctrlreq.over_under_run) || (!udd_g_ctrlreq.over_under_run())) {
    2910:	4b16      	ldr	r3, [pc, #88]	; (296c <udd_ctrl_in_sent+0x88>)
    2912:	695b      	ldr	r3, [r3, #20]
    2914:	2b00      	cmp	r3, #0
    2916:	d023      	beq.n	2960 <udd_ctrl_in_sent+0x7c>
    2918:	4798      	blx	r3
    291a:	2800      	cmp	r0, #0
    291c:	d020      	beq.n	2960 <udd_ctrl_in_sent+0x7c>
			udd_ctrl_payload_nb_trans = 0;
    291e:	2200      	movs	r2, #0
    2920:	4b11      	ldr	r3, [pc, #68]	; (2968 <udd_ctrl_in_sent+0x84>)
    2922:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
    2924:	4b11      	ldr	r3, [pc, #68]	; (296c <udd_ctrl_in_sent+0x88>)
    2926:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
    2928:	2c3f      	cmp	r4, #63	; 0x3f
    292a:	d919      	bls.n	2960 <udd_ctrl_in_sent+0x7c>
		b_shortpacket = false;
    292c:	2200      	movs	r2, #0
    292e:	4b11      	ldr	r3, [pc, #68]	; (2974 <udd_ctrl_in_sent+0x90>)
    2930:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
    2932:	2440      	movs	r4, #64	; 0x40
	usb_device_endpoint_write_buffer_job(&usb_device,0,udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans,nb_remain);
    2934:	4d0c      	ldr	r5, [pc, #48]	; (2968 <udd_ctrl_in_sent+0x84>)
    2936:	882b      	ldrh	r3, [r5, #0]
    2938:	4a0c      	ldr	r2, [pc, #48]	; (296c <udd_ctrl_in_sent+0x88>)
    293a:	6892      	ldr	r2, [r2, #8]
    293c:	18d2      	adds	r2, r2, r3
    293e:	0023      	movs	r3, r4
    2940:	2100      	movs	r1, #0
    2942:	480d      	ldr	r0, [pc, #52]	; (2978 <udd_ctrl_in_sent+0x94>)
    2944:	4e0d      	ldr	r6, [pc, #52]	; (297c <udd_ctrl_in_sent+0x98>)
    2946:	47b0      	blx	r6
	udd_ctrl_payload_nb_trans += nb_remain;
    2948:	882b      	ldrh	r3, [r5, #0]
    294a:	18e4      	adds	r4, r4, r3
    294c:	802c      	strh	r4, [r5, #0]
}
    294e:	bd70      	pop	{r4, r5, r6, pc}
			udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
    2950:	2204      	movs	r2, #4
    2952:	4b0b      	ldr	r3, [pc, #44]	; (2980 <udd_ctrl_in_sent+0x9c>)
    2954:	701a      	strb	r2, [r3, #0]
			usb_device_endpoint_setup_buffer_job(&usb_device,udd_ctrl_buffer);
    2956:	490b      	ldr	r1, [pc, #44]	; (2984 <udd_ctrl_in_sent+0xa0>)
    2958:	4807      	ldr	r0, [pc, #28]	; (2978 <udd_ctrl_in_sent+0x94>)
    295a:	4b0b      	ldr	r3, [pc, #44]	; (2988 <udd_ctrl_in_sent+0xa4>)
    295c:	4798      	blx	r3
			return;
    295e:	e7f6      	b.n	294e <udd_ctrl_in_sent+0x6a>
		b_shortpacket = true;
    2960:	2201      	movs	r2, #1
    2962:	4b04      	ldr	r3, [pc, #16]	; (2974 <udd_ctrl_in_sent+0x90>)
    2964:	701a      	strb	r2, [r3, #0]
    2966:	e7e5      	b.n	2934 <udd_ctrl_in_sent+0x50>
    2968:	200002a2 	.word	0x200002a2
    296c:	200005cc 	.word	0x200005cc
    2970:	200002a4 	.word	0x200002a4
    2974:	200002a0 	.word	0x200002a0
    2978:	20000464 	.word	0x20000464
    297c:	000037e5 	.word	0x000037e5
    2980:	200002a6 	.word	0x200002a6
    2984:	200005e4 	.word	0x200005e4
    2988:	00003889 	.word	0x00003889

0000298c <_usb_ep0_on_setup>:
{
    298c:	b510      	push	{r4, lr}
    298e:	000c      	movs	r4, r1
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
    2990:	4b2c      	ldr	r3, [pc, #176]	; (2a44 <_usb_ep0_on_setup+0xb8>)
    2992:	781b      	ldrb	r3, [r3, #0]
    2994:	2b00      	cmp	r3, #0
    2996:	d007      	beq.n	29a8 <_usb_ep0_on_setup+0x1c>
		if (NULL != udd_g_ctrlreq.callback) {
    2998:	4b2b      	ldr	r3, [pc, #172]	; (2a48 <_usb_ep0_on_setup+0xbc>)
    299a:	691b      	ldr	r3, [r3, #16]
    299c:	2b00      	cmp	r3, #0
    299e:	d000      	beq.n	29a2 <_usb_ep0_on_setup+0x16>
			udd_g_ctrlreq.callback();
    29a0:	4798      	blx	r3
		udd_ep_control_state = UDD_EPCTRL_SETUP;
    29a2:	2200      	movs	r2, #0
    29a4:	4b27      	ldr	r3, [pc, #156]	; (2a44 <_usb_ep0_on_setup+0xb8>)
    29a6:	701a      	strb	r2, [r3, #0]
	if ( 8 != ep_callback_para->received_bytes) {
    29a8:	8823      	ldrh	r3, [r4, #0]
    29aa:	2b08      	cmp	r3, #8
    29ac:	d002      	beq.n	29b4 <_usb_ep0_on_setup+0x28>
		udd_ctrl_stall_data();
    29ae:	4b27      	ldr	r3, [pc, #156]	; (2a4c <_usb_ep0_on_setup+0xc0>)
    29b0:	4798      	blx	r3
}
    29b2:	bd10      	pop	{r4, pc}
	udd_g_ctrlreq.req.bmRequestType = udd_ctrl_buffer[0];
    29b4:	4a24      	ldr	r2, [pc, #144]	; (2a48 <_usb_ep0_on_setup+0xbc>)
    29b6:	4b26      	ldr	r3, [pc, #152]	; (2a50 <_usb_ep0_on_setup+0xc4>)
    29b8:	7819      	ldrb	r1, [r3, #0]
    29ba:	7011      	strb	r1, [r2, #0]
	udd_g_ctrlreq.req.bRequest = udd_ctrl_buffer[1];
    29bc:	7859      	ldrb	r1, [r3, #1]
    29be:	7051      	strb	r1, [r2, #1]
	udd_g_ctrlreq.req.wValue = ((uint16_t)(udd_ctrl_buffer[3]) << 8) + udd_ctrl_buffer[2];
    29c0:	78d8      	ldrb	r0, [r3, #3]
    29c2:	0200      	lsls	r0, r0, #8
    29c4:	7899      	ldrb	r1, [r3, #2]
    29c6:	1809      	adds	r1, r1, r0
    29c8:	8051      	strh	r1, [r2, #2]
	udd_g_ctrlreq.req.wIndex = ((uint16_t)(udd_ctrl_buffer[5]) << 8) + udd_ctrl_buffer[4];
    29ca:	7958      	ldrb	r0, [r3, #5]
    29cc:	0200      	lsls	r0, r0, #8
    29ce:	7919      	ldrb	r1, [r3, #4]
    29d0:	1809      	adds	r1, r1, r0
    29d2:	8091      	strh	r1, [r2, #4]
	udd_g_ctrlreq.req.wLength = ((uint16_t)(udd_ctrl_buffer[7]) << 8) + udd_ctrl_buffer[6];
    29d4:	79d9      	ldrb	r1, [r3, #7]
    29d6:	0209      	lsls	r1, r1, #8
    29d8:	799b      	ldrb	r3, [r3, #6]
    29da:	185b      	adds	r3, r3, r1
    29dc:	80d3      	strh	r3, [r2, #6]
		if (false == udc_process_setup()) {
    29de:	4b1d      	ldr	r3, [pc, #116]	; (2a54 <_usb_ep0_on_setup+0xc8>)
    29e0:	4798      	blx	r3
    29e2:	2800      	cmp	r0, #0
    29e4:	d016      	beq.n	2a14 <_usb_ep0_on_setup+0x88>
		} else if (Udd_setup_is_in()) {
    29e6:	4b18      	ldr	r3, [pc, #96]	; (2a48 <_usb_ep0_on_setup+0xbc>)
    29e8:	781b      	ldrb	r3, [r3, #0]
    29ea:	2b7f      	cmp	r3, #127	; 0x7f
    29ec:	d815      	bhi.n	2a1a <_usb_ep0_on_setup+0x8e>
			if(0 == udd_g_ctrlreq.req.wLength) {
    29ee:	4b16      	ldr	r3, [pc, #88]	; (2a48 <_usb_ep0_on_setup+0xbc>)
    29f0:	88db      	ldrh	r3, [r3, #6]
    29f2:	2b00      	cmp	r3, #0
    29f4:	d022      	beq.n	2a3c <_usb_ep0_on_setup+0xb0>
				udd_ctrl_prev_payload_nb_trans = 0;
    29f6:	2300      	movs	r3, #0
    29f8:	4a17      	ldr	r2, [pc, #92]	; (2a58 <_usb_ep0_on_setup+0xcc>)
    29fa:	8013      	strh	r3, [r2, #0]
				udd_ctrl_payload_nb_trans = 0;
    29fc:	4a17      	ldr	r2, [pc, #92]	; (2a5c <_usb_ep0_on_setup+0xd0>)
    29fe:	8013      	strh	r3, [r2, #0]
				udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
    2a00:	2201      	movs	r2, #1
    2a02:	4b10      	ldr	r3, [pc, #64]	; (2a44 <_usb_ep0_on_setup+0xb8>)
    2a04:	701a      	strb	r2, [r3, #0]
				usb_device_endpoint_read_buffer_job(&usb_device,0,udd_ctrl_buffer,USB_DEVICE_EP_CTRL_SIZE);
    2a06:	2340      	movs	r3, #64	; 0x40
    2a08:	4a11      	ldr	r2, [pc, #68]	; (2a50 <_usb_ep0_on_setup+0xc4>)
    2a0a:	2100      	movs	r1, #0
    2a0c:	4814      	ldr	r0, [pc, #80]	; (2a60 <_usb_ep0_on_setup+0xd4>)
    2a0e:	4c15      	ldr	r4, [pc, #84]	; (2a64 <_usb_ep0_on_setup+0xd8>)
    2a10:	47a0      	blx	r4
    2a12:	e7ce      	b.n	29b2 <_usb_ep0_on_setup+0x26>
			udd_ctrl_stall_data();
    2a14:	4b0d      	ldr	r3, [pc, #52]	; (2a4c <_usb_ep0_on_setup+0xc0>)
    2a16:	4798      	blx	r3
			return;
    2a18:	e7cb      	b.n	29b2 <_usb_ep0_on_setup+0x26>
			udd_ctrl_prev_payload_nb_trans = 0;
    2a1a:	2300      	movs	r3, #0
    2a1c:	4a0e      	ldr	r2, [pc, #56]	; (2a58 <_usb_ep0_on_setup+0xcc>)
    2a1e:	8013      	strh	r3, [r2, #0]
			udd_ctrl_payload_nb_trans = 0;
    2a20:	4a0e      	ldr	r2, [pc, #56]	; (2a5c <_usb_ep0_on_setup+0xd0>)
    2a22:	8013      	strh	r3, [r2, #0]
			udd_ep_control_state = UDD_EPCTRL_DATA_IN;
    2a24:	2202      	movs	r2, #2
    2a26:	4b07      	ldr	r3, [pc, #28]	; (2a44 <_usb_ep0_on_setup+0xb8>)
    2a28:	701a      	strb	r2, [r3, #0]
			usb_device_endpoint_read_buffer_job(&usb_device,0,udd_ctrl_buffer,USB_DEVICE_EP_CTRL_SIZE);
    2a2a:	2340      	movs	r3, #64	; 0x40
    2a2c:	4a08      	ldr	r2, [pc, #32]	; (2a50 <_usb_ep0_on_setup+0xc4>)
    2a2e:	2100      	movs	r1, #0
    2a30:	480b      	ldr	r0, [pc, #44]	; (2a60 <_usb_ep0_on_setup+0xd4>)
    2a32:	4c0c      	ldr	r4, [pc, #48]	; (2a64 <_usb_ep0_on_setup+0xd8>)
    2a34:	47a0      	blx	r4
			udd_ctrl_in_sent();
    2a36:	4b0c      	ldr	r3, [pc, #48]	; (2a68 <_usb_ep0_on_setup+0xdc>)
    2a38:	4798      	blx	r3
    2a3a:	e7ba      	b.n	29b2 <_usb_ep0_on_setup+0x26>
				udd_ctrl_send_zlp_in();
    2a3c:	4b0b      	ldr	r3, [pc, #44]	; (2a6c <_usb_ep0_on_setup+0xe0>)
    2a3e:	4798      	blx	r3
				return;
    2a40:	e7b7      	b.n	29b2 <_usb_ep0_on_setup+0x26>
    2a42:	46c0      	nop			; (mov r8, r8)
    2a44:	200002a6 	.word	0x200002a6
    2a48:	200005cc 	.word	0x200005cc
    2a4c:	000026ad 	.word	0x000026ad
    2a50:	200005e4 	.word	0x200005e4
    2a54:	00000c9d 	.word	0x00000c9d
    2a58:	200002a4 	.word	0x200002a4
    2a5c:	200002a2 	.word	0x200002a2
    2a60:	20000464 	.word	0x20000464
    2a64:	00003839 	.word	0x00003839
    2a68:	000028e5 	.word	0x000028e5
    2a6c:	00002855 	.word	0x00002855

00002a70 <_usb_on_sof_notify>:
{
    2a70:	b510      	push	{r4, lr}
	udc_sof_notify();
    2a72:	4b02      	ldr	r3, [pc, #8]	; (2a7c <_usb_on_sof_notify+0xc>)
    2a74:	4798      	blx	r3
	UDC_SOF_EVENT();
    2a76:	4b02      	ldr	r3, [pc, #8]	; (2a80 <_usb_on_sof_notify+0x10>)
    2a78:	4798      	blx	r3
}
    2a7a:	bd10      	pop	{r4, pc}
    2a7c:	00000c59 	.word	0x00000c59
    2a80:	0000421d 	.word	0x0000421d

00002a84 <_usb_on_suspend>:
{
    2a84:	b510      	push	{r4, lr}
	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    2a86:	4c07      	ldr	r4, [pc, #28]	; (2aa4 <_usb_on_suspend+0x20>)
    2a88:	2104      	movs	r1, #4
    2a8a:	0020      	movs	r0, r4
    2a8c:	4b06      	ldr	r3, [pc, #24]	; (2aa8 <_usb_on_suspend+0x24>)
    2a8e:	4798      	blx	r3
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    2a90:	2102      	movs	r1, #2
    2a92:	0020      	movs	r0, r4
    2a94:	4b05      	ldr	r3, [pc, #20]	; (2aac <_usb_on_suspend+0x28>)
    2a96:	4798      	blx	r3
	udd_sleep_mode(UDD_STATE_SUSPEND);
    2a98:	2001      	movs	r0, #1
    2a9a:	4b05      	ldr	r3, [pc, #20]	; (2ab0 <_usb_on_suspend+0x2c>)
    2a9c:	4798      	blx	r3
	UDC_SUSPEND_EVENT();
    2a9e:	4b05      	ldr	r3, [pc, #20]	; (2ab4 <_usb_on_suspend+0x30>)
    2aa0:	4798      	blx	r3
}
    2aa2:	bd10      	pop	{r4, pc}
    2aa4:	20000464 	.word	0x20000464
    2aa8:	00003279 	.word	0x00003279
    2aac:	00003259 	.word	0x00003259
    2ab0:	00002415 	.word	0x00002415
    2ab4:	00004205 	.word	0x00004205

00002ab8 <udd_ep_abort>:
{
    2ab8:	b510      	push	{r4, lr}
    2aba:	0004      	movs	r4, r0
	usb_device_endpoint_abort_job(&usb_device, ep);
    2abc:	0001      	movs	r1, r0
    2abe:	480a      	ldr	r0, [pc, #40]	; (2ae8 <udd_ep_abort+0x30>)
    2ac0:	4b0a      	ldr	r3, [pc, #40]	; (2aec <udd_ep_abort+0x34>)
    2ac2:	4798      	blx	r3
	ptr_job = udd_ep_get_job(ep);
    2ac4:	0020      	movs	r0, r4
    2ac6:	4b0a      	ldr	r3, [pc, #40]	; (2af0 <udd_ep_abort+0x38>)
    2ac8:	4798      	blx	r3
	if (!ptr_job->busy) {
    2aca:	7c83      	ldrb	r3, [r0, #18]
    2acc:	07db      	lsls	r3, r3, #31
    2ace:	d50a      	bpl.n	2ae6 <udd_ep_abort+0x2e>
	ptr_job->busy = false;
    2ad0:	7c83      	ldrb	r3, [r0, #18]
    2ad2:	2201      	movs	r2, #1
    2ad4:	4393      	bics	r3, r2
    2ad6:	7483      	strb	r3, [r0, #18]
	if (NULL != ptr_job->call_trans) {
    2ad8:	6803      	ldr	r3, [r0, #0]
    2ada:	2b00      	cmp	r3, #0
    2adc:	d003      	beq.n	2ae6 <udd_ep_abort+0x2e>
		ptr_job->call_trans(UDD_EP_TRANSFER_ABORT, ptr_job->nb_trans, ep);
    2ade:	68c1      	ldr	r1, [r0, #12]
    2ae0:	0022      	movs	r2, r4
    2ae2:	2001      	movs	r0, #1
    2ae4:	4798      	blx	r3
}
    2ae6:	bd10      	pop	{r4, pc}
    2ae8:	20000464 	.word	0x20000464
    2aec:	000036d9 	.word	0x000036d9
    2af0:	000024d5 	.word	0x000024d5

00002af4 <udd_is_high_speed>:
}
    2af4:	2000      	movs	r0, #0
    2af6:	4770      	bx	lr

00002af8 <udd_get_frame_number>:
	return ((uint16_t)(module_inst->hw->DEVICE.FNUM.bit.FNUM));
    2af8:	4b02      	ldr	r3, [pc, #8]	; (2b04 <udd_get_frame_number+0xc>)
    2afa:	681b      	ldr	r3, [r3, #0]
    2afc:	8a18      	ldrh	r0, [r3, #16]
    2afe:	0480      	lsls	r0, r0, #18
    2b00:	0d40      	lsrs	r0, r0, #21
}
    2b02:	4770      	bx	lr
    2b04:	20000464 	.word	0x20000464

00002b08 <udd_get_micro_frame_number>:
	return ((uint16_t)(module_inst->hw->DEVICE.FNUM.reg));
    2b08:	4b02      	ldr	r3, [pc, #8]	; (2b14 <udd_get_micro_frame_number+0xc>)
    2b0a:	681b      	ldr	r3, [r3, #0]
    2b0c:	8a18      	ldrh	r0, [r3, #16]
    2b0e:	b280      	uxth	r0, r0
}
    2b10:	4770      	bx	lr
    2b12:	46c0      	nop			; (mov r8, r8)
    2b14:	20000464 	.word	0x20000464

00002b18 <udd_ep_free>:
{
    2b18:	b570      	push	{r4, r5, r6, lr}
    2b1a:	b082      	sub	sp, #8
    2b1c:	0004      	movs	r4, r0
	usb_device_endpoint_get_config_defaults(&config_ep);
    2b1e:	ad01      	add	r5, sp, #4
    2b20:	0028      	movs	r0, r5
    2b22:	4b0d      	ldr	r3, [pc, #52]	; (2b58 <udd_ep_free+0x40>)
    2b24:	4798      	blx	r3
	udd_ep_abort(ep);
    2b26:	0020      	movs	r0, r4
    2b28:	4b0c      	ldr	r3, [pc, #48]	; (2b5c <udd_ep_free+0x44>)
    2b2a:	4798      	blx	r3
	config_ep.ep_address = ep;
    2b2c:	702c      	strb	r4, [r5, #0]
	config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_DISABLE;
    2b2e:	2300      	movs	r3, #0
    2b30:	70eb      	strb	r3, [r5, #3]
	usb_device_endpoint_set_config(&usb_device, &config_ep);
    2b32:	4e0b      	ldr	r6, [pc, #44]	; (2b60 <udd_ep_free+0x48>)
    2b34:	0029      	movs	r1, r5
    2b36:	0030      	movs	r0, r6
    2b38:	4b0a      	ldr	r3, [pc, #40]	; (2b64 <udd_ep_free+0x4c>)
    2b3a:	4798      	blx	r3
	usb_device_endpoint_unregister_callback(&usb_device,ep_num,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    2b3c:	210f      	movs	r1, #15
    2b3e:	4021      	ands	r1, r4
    2b40:	2200      	movs	r2, #0
    2b42:	0030      	movs	r0, r6
    2b44:	4b08      	ldr	r3, [pc, #32]	; (2b68 <udd_ep_free+0x50>)
    2b46:	4798      	blx	r3
	usb_device_endpoint_disable_callback(&usb_device,ep,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    2b48:	2200      	movs	r2, #0
    2b4a:	0021      	movs	r1, r4
    2b4c:	0030      	movs	r0, r6
    2b4e:	4b07      	ldr	r3, [pc, #28]	; (2b6c <udd_ep_free+0x54>)
    2b50:	4798      	blx	r3
}
    2b52:	b002      	add	sp, #8
    2b54:	bd70      	pop	{r4, r5, r6, pc}
    2b56:	46c0      	nop			; (mov r8, r8)
    2b58:	00003485 	.word	0x00003485
    2b5c:	00002ab9 	.word	0x00002ab9
    2b60:	20000464 	.word	0x20000464
    2b64:	00003495 	.word	0x00003495
    2b68:	000032bd 	.word	0x000032bd
    2b6c:	000033b5 	.word	0x000033b5

00002b70 <udd_ep_alloc>:
{
    2b70:	b5f0      	push	{r4, r5, r6, r7, lr}
    2b72:	b083      	sub	sp, #12
    2b74:	0005      	movs	r5, r0
    2b76:	000f      	movs	r7, r1
    2b78:	0014      	movs	r4, r2
	usb_device_endpoint_get_config_defaults(&config_ep);
    2b7a:	ae01      	add	r6, sp, #4
    2b7c:	0030      	movs	r0, r6
    2b7e:	4b36      	ldr	r3, [pc, #216]	; (2c58 <udd_ep_alloc+0xe8>)
    2b80:	4798      	blx	r3
	config_ep.ep_address = ep;
    2b82:	7035      	strb	r5, [r6, #0]
	if(MaxEndpointSize <= 8) {
    2b84:	2c08      	cmp	r4, #8
    2b86:	d813      	bhi.n	2bb0 <udd_ep_alloc+0x40>
		config_ep.ep_size = USB_ENDPOINT_8_BYTE;
    2b88:	2200      	movs	r2, #0
    2b8a:	ab01      	add	r3, sp, #4
    2b8c:	705a      	strb	r2, [r3, #1]
	udd_ep_job_t *ptr_job = udd_ep_get_job(ep);
    2b8e:	0028      	movs	r0, r5
    2b90:	4b32      	ldr	r3, [pc, #200]	; (2c5c <udd_ep_alloc+0xec>)
    2b92:	4798      	blx	r3
	ptr_job->ep_size = MaxEndpointSize;
    2b94:	8204      	strh	r4, [r0, #16]
	bmAttributes = bmAttributes & USB_EP_TYPE_MASK;
    2b96:	2103      	movs	r1, #3
    2b98:	4039      	ands	r1, r7
	if(USB_EP_TYPE_ISOCHRONOUS == bmAttributes) {
    2b9a:	2901      	cmp	r1, #1
    2b9c:	d038      	beq.n	2c10 <udd_ep_alloc+0xa0>
	} else if (USB_EP_TYPE_BULK == bmAttributes) {
    2b9e:	2902      	cmp	r1, #2
    2ba0:	d043      	beq.n	2c2a <udd_ep_alloc+0xba>
		return false;
    2ba2:	2300      	movs	r3, #0
	} else if (USB_EP_TYPE_INTERRUPT == bmAttributes) {
    2ba4:	2903      	cmp	r1, #3
    2ba6:	d13d      	bne.n	2c24 <udd_ep_alloc+0xb4>
		config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_INTERRUPT;
    2ba8:	2204      	movs	r2, #4
    2baa:	ab01      	add	r3, sp, #4
    2bac:	70da      	strb	r2, [r3, #3]
    2bae:	e032      	b.n	2c16 <udd_ep_alloc+0xa6>
	} else if(MaxEndpointSize <= 16) {
    2bb0:	2c10      	cmp	r4, #16
    2bb2:	d803      	bhi.n	2bbc <udd_ep_alloc+0x4c>
		config_ep.ep_size = USB_ENDPOINT_16_BYTE;
    2bb4:	2201      	movs	r2, #1
    2bb6:	ab01      	add	r3, sp, #4
    2bb8:	705a      	strb	r2, [r3, #1]
    2bba:	e7e8      	b.n	2b8e <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 32) {
    2bbc:	2c20      	cmp	r4, #32
    2bbe:	d803      	bhi.n	2bc8 <udd_ep_alloc+0x58>
		config_ep.ep_size = USB_ENDPOINT_32_BYTE;
    2bc0:	2202      	movs	r2, #2
    2bc2:	ab01      	add	r3, sp, #4
    2bc4:	705a      	strb	r2, [r3, #1]
    2bc6:	e7e2      	b.n	2b8e <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 64) {
    2bc8:	2c40      	cmp	r4, #64	; 0x40
    2bca:	d803      	bhi.n	2bd4 <udd_ep_alloc+0x64>
		config_ep.ep_size = USB_ENDPOINT_64_BYTE;
    2bcc:	2203      	movs	r2, #3
    2bce:	ab01      	add	r3, sp, #4
    2bd0:	705a      	strb	r2, [r3, #1]
    2bd2:	e7dc      	b.n	2b8e <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 128) {
    2bd4:	2c80      	cmp	r4, #128	; 0x80
    2bd6:	d803      	bhi.n	2be0 <udd_ep_alloc+0x70>
		config_ep.ep_size = USB_ENDPOINT_128_BYTE;
    2bd8:	2204      	movs	r2, #4
    2bda:	ab01      	add	r3, sp, #4
    2bdc:	705a      	strb	r2, [r3, #1]
    2bde:	e7d6      	b.n	2b8e <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 256) {
    2be0:	2380      	movs	r3, #128	; 0x80
    2be2:	005b      	lsls	r3, r3, #1
    2be4:	429c      	cmp	r4, r3
    2be6:	d803      	bhi.n	2bf0 <udd_ep_alloc+0x80>
		config_ep.ep_size = USB_ENDPOINT_256_BYTE;
    2be8:	2205      	movs	r2, #5
    2bea:	ab01      	add	r3, sp, #4
    2bec:	705a      	strb	r2, [r3, #1]
    2bee:	e7ce      	b.n	2b8e <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 512) {
    2bf0:	2380      	movs	r3, #128	; 0x80
    2bf2:	009b      	lsls	r3, r3, #2
    2bf4:	429c      	cmp	r4, r3
    2bf6:	d803      	bhi.n	2c00 <udd_ep_alloc+0x90>
		config_ep.ep_size = USB_ENDPOINT_512_BYTE;
    2bf8:	2206      	movs	r2, #6
    2bfa:	ab01      	add	r3, sp, #4
    2bfc:	705a      	strb	r2, [r3, #1]
    2bfe:	e7c6      	b.n	2b8e <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 1023) {
    2c00:	4a17      	ldr	r2, [pc, #92]	; (2c60 <udd_ep_alloc+0xf0>)
		return false;
    2c02:	2300      	movs	r3, #0
	} else if(MaxEndpointSize <= 1023) {
    2c04:	4294      	cmp	r4, r2
    2c06:	d80d      	bhi.n	2c24 <udd_ep_alloc+0xb4>
		config_ep.ep_size = USB_ENDPOINT_1023_BYTE;
    2c08:	2207      	movs	r2, #7
    2c0a:	ab01      	add	r3, sp, #4
    2c0c:	705a      	strb	r2, [r3, #1]
    2c0e:	e7be      	b.n	2b8e <udd_ep_alloc+0x1e>
		config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_ISOCHRONOUS;
    2c10:	2202      	movs	r2, #2
    2c12:	ab01      	add	r3, sp, #4
    2c14:	70da      	strb	r2, [r3, #3]
	if (STATUS_OK != usb_device_endpoint_set_config(&usb_device, &config_ep)) {
    2c16:	a901      	add	r1, sp, #4
    2c18:	4812      	ldr	r0, [pc, #72]	; (2c64 <udd_ep_alloc+0xf4>)
    2c1a:	4b13      	ldr	r3, [pc, #76]	; (2c68 <udd_ep_alloc+0xf8>)
    2c1c:	4798      	blx	r3
		return false;
    2c1e:	2300      	movs	r3, #0
	if (STATUS_OK != usb_device_endpoint_set_config(&usb_device, &config_ep)) {
    2c20:	2800      	cmp	r0, #0
    2c22:	d006      	beq.n	2c32 <udd_ep_alloc+0xc2>
}
    2c24:	0018      	movs	r0, r3
    2c26:	b003      	add	sp, #12
    2c28:	bdf0      	pop	{r4, r5, r6, r7, pc}
		config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_BULK;
    2c2a:	2203      	movs	r2, #3
    2c2c:	ab01      	add	r3, sp, #4
    2c2e:	70da      	strb	r2, [r3, #3]
    2c30:	e7f1      	b.n	2c16 <udd_ep_alloc+0xa6>
	usb_device_endpoint_register_callback(&usb_device,ep_num,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT,udd_ep_transfer_process);
    2c32:	210f      	movs	r1, #15
    2c34:	4029      	ands	r1, r5
    2c36:	4c0b      	ldr	r4, [pc, #44]	; (2c64 <udd_ep_alloc+0xf4>)
    2c38:	4b0c      	ldr	r3, [pc, #48]	; (2c6c <udd_ep_alloc+0xfc>)
    2c3a:	2200      	movs	r2, #0
    2c3c:	0020      	movs	r0, r4
    2c3e:	4e0c      	ldr	r6, [pc, #48]	; (2c70 <udd_ep_alloc+0x100>)
    2c40:	47b0      	blx	r6
	usb_device_endpoint_enable_callback(&usb_device,ep,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    2c42:	2200      	movs	r2, #0
    2c44:	0029      	movs	r1, r5
    2c46:	0020      	movs	r0, r4
    2c48:	4e0a      	ldr	r6, [pc, #40]	; (2c74 <udd_ep_alloc+0x104>)
    2c4a:	47b0      	blx	r6
	usb_device_endpoint_enable_callback(&usb_device,ep,USB_DEVICE_ENDPOINT_CALLBACK_TRFAIL);
    2c4c:	2201      	movs	r2, #1
    2c4e:	0029      	movs	r1, r5
    2c50:	0020      	movs	r0, r4
    2c52:	47b0      	blx	r6
	return true;
    2c54:	2301      	movs	r3, #1
    2c56:	e7e5      	b.n	2c24 <udd_ep_alloc+0xb4>
    2c58:	00003485 	.word	0x00003485
    2c5c:	000024d5 	.word	0x000024d5
    2c60:	000003ff 	.word	0x000003ff
    2c64:	20000464 	.word	0x20000464
    2c68:	00003495 	.word	0x00003495
    2c6c:	000024f9 	.word	0x000024f9
    2c70:	00003295 	.word	0x00003295
    2c74:	000032e5 	.word	0x000032e5

00002c78 <udd_ep_is_halted>:
{
    2c78:	b510      	push	{r4, lr}
    2c7a:	0001      	movs	r1, r0
	return usb_device_endpoint_is_halted(&usb_device, ep);
    2c7c:	4801      	ldr	r0, [pc, #4]	; (2c84 <udd_ep_is_halted+0xc>)
    2c7e:	4b02      	ldr	r3, [pc, #8]	; (2c88 <udd_ep_is_halted+0x10>)
    2c80:	4798      	blx	r3
}
    2c82:	bd10      	pop	{r4, pc}
    2c84:	20000464 	.word	0x20000464
    2c88:	0000370f 	.word	0x0000370f

00002c8c <udd_ep_set_halt>:
{
    2c8c:	b510      	push	{r4, lr}
    2c8e:	0004      	movs	r4, r0
	if (USB_DEVICE_MAX_EP < ep_num) {
    2c90:	230f      	movs	r3, #15
    2c92:	4003      	ands	r3, r0
		return false;
    2c94:	2000      	movs	r0, #0
	if (USB_DEVICE_MAX_EP < ep_num) {
    2c96:	2b03      	cmp	r3, #3
    2c98:	d900      	bls.n	2c9c <udd_ep_set_halt+0x10>
}
    2c9a:	bd10      	pop	{r4, pc}
	usb_device_endpoint_set_halt(&usb_device, ep);
    2c9c:	0021      	movs	r1, r4
    2c9e:	4804      	ldr	r0, [pc, #16]	; (2cb0 <udd_ep_set_halt+0x24>)
    2ca0:	4b04      	ldr	r3, [pc, #16]	; (2cb4 <udd_ep_set_halt+0x28>)
    2ca2:	4798      	blx	r3
	udd_ep_abort(ep);
    2ca4:	0020      	movs	r0, r4
    2ca6:	4b04      	ldr	r3, [pc, #16]	; (2cb8 <udd_ep_set_halt+0x2c>)
    2ca8:	4798      	blx	r3
	return true;
    2caa:	2001      	movs	r0, #1
    2cac:	e7f5      	b.n	2c9a <udd_ep_set_halt+0xe>
    2cae:	46c0      	nop			; (mov r8, r8)
    2cb0:	20000464 	.word	0x20000464
    2cb4:	00003739 	.word	0x00003739
    2cb8:	00002ab9 	.word	0x00002ab9

00002cbc <_usb_ep0_on_tansfer_ok>:
{
    2cbc:	b570      	push	{r4, r5, r6, lr}
		if (UDD_EPCTRL_DATA_OUT  == udd_ep_control_state) { /* handshake Out for status stage */
    2cbe:	4b34      	ldr	r3, [pc, #208]	; (2d90 <_usb_ep0_on_tansfer_ok+0xd4>)
    2cc0:	781b      	ldrb	r3, [r3, #0]
    2cc2:	2b01      	cmp	r3, #1
    2cc4:	d00a      	beq.n	2cdc <_usb_ep0_on_tansfer_ok+0x20>
		} else if (UDD_EPCTRL_DATA_IN == udd_ep_control_state) { /* handshake In for status stage */
    2cc6:	2b02      	cmp	r3, #2
    2cc8:	d05f      	beq.n	2d8a <_usb_ep0_on_tansfer_ok+0xce>
			if (NULL != udd_g_ctrlreq.callback) {
    2cca:	4b32      	ldr	r3, [pc, #200]	; (2d94 <_usb_ep0_on_tansfer_ok+0xd8>)
    2ccc:	691b      	ldr	r3, [r3, #16]
    2cce:	2b00      	cmp	r3, #0
    2cd0:	d000      	beq.n	2cd4 <_usb_ep0_on_tansfer_ok+0x18>
				udd_g_ctrlreq.callback();
    2cd2:	4798      	blx	r3
			udd_ep_control_state = UDD_EPCTRL_SETUP;
    2cd4:	2200      	movs	r2, #0
    2cd6:	4b2e      	ldr	r3, [pc, #184]	; (2d90 <_usb_ep0_on_tansfer_ok+0xd4>)
    2cd8:	701a      	strb	r2, [r3, #0]
}
    2cda:	bd70      	pop	{r4, r5, r6, pc}
	nb_data = ep_callback_para->received_bytes; /* Read data received during OUT phase */
    2cdc:	880d      	ldrh	r5, [r1, #0]
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_nb_trans + nb_data)) {
    2cde:	4b2d      	ldr	r3, [pc, #180]	; (2d94 <_usb_ep0_on_tansfer_ok+0xd8>)
    2ce0:	899b      	ldrh	r3, [r3, #12]
    2ce2:	4a2d      	ldr	r2, [pc, #180]	; (2d98 <_usb_ep0_on_tansfer_ok+0xdc>)
    2ce4:	8814      	ldrh	r4, [r2, #0]
    2ce6:	1962      	adds	r2, r4, r5
    2ce8:	4293      	cmp	r3, r2
    2cea:	da01      	bge.n	2cf0 <_usb_ep0_on_tansfer_ok+0x34>
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
    2cec:	1b1d      	subs	r5, r3, r4
    2cee:	b2ad      	uxth	r5, r5
	memcpy((uint8_t *) (udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans), udd_ctrl_buffer, nb_data);
    2cf0:	4b28      	ldr	r3, [pc, #160]	; (2d94 <_usb_ep0_on_tansfer_ok+0xd8>)
    2cf2:	6898      	ldr	r0, [r3, #8]
    2cf4:	1900      	adds	r0, r0, r4
    2cf6:	002a      	movs	r2, r5
    2cf8:	4928      	ldr	r1, [pc, #160]	; (2d9c <_usb_ep0_on_tansfer_ok+0xe0>)
    2cfa:	4b29      	ldr	r3, [pc, #164]	; (2da0 <_usb_ep0_on_tansfer_ok+0xe4>)
    2cfc:	4798      	blx	r3
	udd_ctrl_payload_nb_trans += nb_data;
    2cfe:	1964      	adds	r4, r4, r5
    2d00:	b2a4      	uxth	r4, r4
    2d02:	4b25      	ldr	r3, [pc, #148]	; (2d98 <_usb_ep0_on_tansfer_ok+0xdc>)
    2d04:	801c      	strh	r4, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data) || \
    2d06:	2d40      	cmp	r5, #64	; 0x40
    2d08:	d00a      	beq.n	2d20 <_usb_ep0_on_tansfer_ok+0x64>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_nb_trans;
    2d0a:	4b22      	ldr	r3, [pc, #136]	; (2d94 <_usb_ep0_on_tansfer_ok+0xd8>)
    2d0c:	819c      	strh	r4, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
    2d0e:	695b      	ldr	r3, [r3, #20]
    2d10:	2b00      	cmp	r3, #0
    2d12:	d002      	beq.n	2d1a <_usb_ep0_on_tansfer_ok+0x5e>
			if (!udd_g_ctrlreq.over_under_run()) {
    2d14:	4798      	blx	r3
    2d16:	2800      	cmp	r0, #0
    2d18:	d014      	beq.n	2d44 <_usb_ep0_on_tansfer_ok+0x88>
		udd_ctrl_send_zlp_in();
    2d1a:	4b22      	ldr	r3, [pc, #136]	; (2da4 <_usb_ep0_on_tansfer_ok+0xe8>)
    2d1c:	4798      	blx	r3
    2d1e:	e7dc      	b.n	2cda <_usb_ep0_on_tansfer_ok+0x1e>
	(udd_g_ctrlreq.req.wLength <= (udd_ctrl_prev_payload_nb_trans + udd_ctrl_payload_nb_trans))) {
    2d20:	4b1c      	ldr	r3, [pc, #112]	; (2d94 <_usb_ep0_on_tansfer_ok+0xd8>)
    2d22:	88da      	ldrh	r2, [r3, #6]
    2d24:	4b20      	ldr	r3, [pc, #128]	; (2da8 <_usb_ep0_on_tansfer_ok+0xec>)
    2d26:	881b      	ldrh	r3, [r3, #0]
    2d28:	191b      	adds	r3, r3, r4
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data) || \
    2d2a:	429a      	cmp	r2, r3
    2d2c:	dded      	ble.n	2d0a <_usb_ep0_on_tansfer_ok+0x4e>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_nb_trans) {
    2d2e:	4b19      	ldr	r3, [pc, #100]	; (2d94 <_usb_ep0_on_tansfer_ok+0xd8>)
    2d30:	899b      	ldrh	r3, [r3, #12]
    2d32:	42a3      	cmp	r3, r4
    2d34:	d00c      	beq.n	2d50 <_usb_ep0_on_tansfer_ok+0x94>
	usb_device_endpoint_read_buffer_job(&usb_device,0,udd_ctrl_buffer,USB_DEVICE_EP_CTRL_SIZE);
    2d36:	2340      	movs	r3, #64	; 0x40
    2d38:	4a18      	ldr	r2, [pc, #96]	; (2d9c <_usb_ep0_on_tansfer_ok+0xe0>)
    2d3a:	2100      	movs	r1, #0
    2d3c:	481b      	ldr	r0, [pc, #108]	; (2dac <_usb_ep0_on_tansfer_ok+0xf0>)
    2d3e:	4c1c      	ldr	r4, [pc, #112]	; (2db0 <_usb_ep0_on_tansfer_ok+0xf4>)
    2d40:	47a0      	blx	r4
    2d42:	e7ca      	b.n	2cda <_usb_ep0_on_tansfer_ok+0x1e>
				udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    2d44:	2205      	movs	r2, #5
    2d46:	4b12      	ldr	r3, [pc, #72]	; (2d90 <_usb_ep0_on_tansfer_ok+0xd4>)
    2d48:	701a      	strb	r2, [r3, #0]
				udd_ep_set_halt(0);
    2d4a:	4b1a      	ldr	r3, [pc, #104]	; (2db4 <_usb_ep0_on_tansfer_ok+0xf8>)
    2d4c:	4798      	blx	r3
    2d4e:	e7c4      	b.n	2cda <_usb_ep0_on_tansfer_ok+0x1e>
		if (!udd_g_ctrlreq.over_under_run) {
    2d50:	4b10      	ldr	r3, [pc, #64]	; (2d94 <_usb_ep0_on_tansfer_ok+0xd8>)
    2d52:	695b      	ldr	r3, [r3, #20]
    2d54:	2b00      	cmp	r3, #0
    2d56:	d00b      	beq.n	2d70 <_usb_ep0_on_tansfer_ok+0xb4>
		if (!udd_g_ctrlreq.over_under_run()) {
    2d58:	4798      	blx	r3
    2d5a:	2800      	cmp	r0, #0
    2d5c:	d00f      	beq.n	2d7e <_usb_ep0_on_tansfer_ok+0xc2>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
    2d5e:	4912      	ldr	r1, [pc, #72]	; (2da8 <_usb_ep0_on_tansfer_ok+0xec>)
    2d60:	4a0d      	ldr	r2, [pc, #52]	; (2d98 <_usb_ep0_on_tansfer_ok+0xdc>)
    2d62:	880b      	ldrh	r3, [r1, #0]
    2d64:	8810      	ldrh	r0, [r2, #0]
    2d66:	181b      	adds	r3, r3, r0
    2d68:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_nb_trans = 0;
    2d6a:	2300      	movs	r3, #0
    2d6c:	8013      	strh	r3, [r2, #0]
    2d6e:	e7e2      	b.n	2d36 <_usb_ep0_on_tansfer_ok+0x7a>
			udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    2d70:	2205      	movs	r2, #5
    2d72:	4b07      	ldr	r3, [pc, #28]	; (2d90 <_usb_ep0_on_tansfer_ok+0xd4>)
    2d74:	701a      	strb	r2, [r3, #0]
			udd_ep_set_halt(0);
    2d76:	2000      	movs	r0, #0
    2d78:	4b0e      	ldr	r3, [pc, #56]	; (2db4 <_usb_ep0_on_tansfer_ok+0xf8>)
    2d7a:	4798      	blx	r3
    2d7c:	e7ad      	b.n	2cda <_usb_ep0_on_tansfer_ok+0x1e>
			udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    2d7e:	2205      	movs	r2, #5
    2d80:	4b03      	ldr	r3, [pc, #12]	; (2d90 <_usb_ep0_on_tansfer_ok+0xd4>)
    2d82:	701a      	strb	r2, [r3, #0]
			udd_ep_set_halt(0);
    2d84:	4b0b      	ldr	r3, [pc, #44]	; (2db4 <_usb_ep0_on_tansfer_ok+0xf8>)
    2d86:	4798      	blx	r3
    2d88:	e7a7      	b.n	2cda <_usb_ep0_on_tansfer_ok+0x1e>
			udd_ctrl_in_sent();
    2d8a:	4b0b      	ldr	r3, [pc, #44]	; (2db8 <_usb_ep0_on_tansfer_ok+0xfc>)
    2d8c:	4798      	blx	r3
    2d8e:	e7a4      	b.n	2cda <_usb_ep0_on_tansfer_ok+0x1e>
    2d90:	200002a6 	.word	0x200002a6
    2d94:	200005cc 	.word	0x200005cc
    2d98:	200002a2 	.word	0x200002a2
    2d9c:	200005e4 	.word	0x200005e4
    2da0:	00004979 	.word	0x00004979
    2da4:	00002855 	.word	0x00002855
    2da8:	200002a4 	.word	0x200002a4
    2dac:	20000464 	.word	0x20000464
    2db0:	00003839 	.word	0x00003839
    2db4:	00002c8d 	.word	0x00002c8d
    2db8:	000028e5 	.word	0x000028e5

00002dbc <udd_ep_clear_halt>:
{
    2dbc:	b570      	push	{r4, r5, r6, lr}
    2dbe:	0004      	movs	r4, r0
	if (USB_DEVICE_MAX_EP < ep_num) {
    2dc0:	230f      	movs	r3, #15
    2dc2:	4003      	ands	r3, r0
		return false;
    2dc4:	2000      	movs	r0, #0
	if (USB_DEVICE_MAX_EP < ep_num) {
    2dc6:	2b03      	cmp	r3, #3
    2dc8:	d900      	bls.n	2dcc <udd_ep_clear_halt+0x10>
}
    2dca:	bd70      	pop	{r4, r5, r6, pc}
	ptr_job = udd_ep_get_job(ep);
    2dcc:	0020      	movs	r0, r4
    2dce:	4b09      	ldr	r3, [pc, #36]	; (2df4 <udd_ep_clear_halt+0x38>)
    2dd0:	4798      	blx	r3
    2dd2:	0005      	movs	r5, r0
	usb_device_endpoint_clear_halt(&usb_device, ep);
    2dd4:	0021      	movs	r1, r4
    2dd6:	4808      	ldr	r0, [pc, #32]	; (2df8 <udd_ep_clear_halt+0x3c>)
    2dd8:	4b08      	ldr	r3, [pc, #32]	; (2dfc <udd_ep_clear_halt+0x40>)
    2dda:	4798      	blx	r3
	if (ptr_job->busy == true) {
    2ddc:	7cab      	ldrb	r3, [r5, #18]
	return true;
    2dde:	2001      	movs	r0, #1
	if (ptr_job->busy == true) {
    2de0:	07db      	lsls	r3, r3, #31
    2de2:	d5f2      	bpl.n	2dca <udd_ep_clear_halt+0xe>
		ptr_job->busy = false;
    2de4:	7cab      	ldrb	r3, [r5, #18]
    2de6:	2201      	movs	r2, #1
    2de8:	4393      	bics	r3, r2
    2dea:	74ab      	strb	r3, [r5, #18]
		ptr_job->call_nohalt();
    2dec:	682b      	ldr	r3, [r5, #0]
    2dee:	4798      	blx	r3
	return true;
    2df0:	2001      	movs	r0, #1
    2df2:	e7ea      	b.n	2dca <udd_ep_clear_halt+0xe>
    2df4:	000024d5 	.word	0x000024d5
    2df8:	20000464 	.word	0x20000464
    2dfc:	0000375f 	.word	0x0000375f

00002e00 <udd_ep_run>:
{
    2e00:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e02:	b087      	sub	sp, #28
    2e04:	0005      	movs	r5, r0
    2e06:	9103      	str	r1, [sp, #12]
    2e08:	9202      	str	r2, [sp, #8]
    2e0a:	9301      	str	r3, [sp, #4]
	ep_num = ep & USB_EP_ADDR_MASK;
    2e0c:	260f      	movs	r6, #15
    2e0e:	4006      	ands	r6, r0
		return false;
    2e10:	2400      	movs	r4, #0
	if ((USB_DEVICE_MAX_EP < ep_num) || (udd_ep_is_halted(ep))) {
    2e12:	2e03      	cmp	r6, #3
    2e14:	d902      	bls.n	2e1c <udd_ep_run+0x1c>
}
    2e16:	0020      	movs	r0, r4
    2e18:	b007      	add	sp, #28
    2e1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if ((USB_DEVICE_MAX_EP < ep_num) || (udd_ep_is_halted(ep))) {
    2e1c:	4b64      	ldr	r3, [pc, #400]	; (2fb0 <udd_ep_run+0x1b0>)
    2e1e:	4798      	blx	r3
    2e20:	1e04      	subs	r4, r0, #0
    2e22:	d000      	beq.n	2e26 <udd_ep_run+0x26>
    2e24:	e0bd      	b.n	2fa2 <udd_ep_run+0x1a2>
	ptr_job = udd_ep_get_job(ep);
    2e26:	0028      	movs	r0, r5
    2e28:	4b62      	ldr	r3, [pc, #392]	; (2fb4 <udd_ep_run+0x1b4>)
    2e2a:	4798      	blx	r3
    2e2c:	0007      	movs	r7, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    2e2e:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    2e32:	425a      	negs	r2, r3
    2e34:	4153      	adcs	r3, r2
    2e36:	9305      	str	r3, [sp, #20]
  __ASM volatile ("cpsid i" : : : "memory");
    2e38:	b672      	cpsid	i
    2e3a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    2e3e:	2200      	movs	r2, #0
    2e40:	4b5d      	ldr	r3, [pc, #372]	; (2fb8 <udd_ep_run+0x1b8>)
    2e42:	701a      	strb	r2, [r3, #0]
	return flags;
    2e44:	9a05      	ldr	r2, [sp, #20]
	if (ptr_job->busy == true) {
    2e46:	7c83      	ldrb	r3, [r0, #18]
    2e48:	07db      	lsls	r3, r3, #31
    2e4a:	d508      	bpl.n	2e5e <udd_ep_run+0x5e>
	if (cpu_irq_is_enabled_flags(flags))
    2e4c:	2a00      	cmp	r2, #0
    2e4e:	d0e2      	beq.n	2e16 <udd_ep_run+0x16>
		cpu_irq_enable();
    2e50:	2201      	movs	r2, #1
    2e52:	4b59      	ldr	r3, [pc, #356]	; (2fb8 <udd_ep_run+0x1b8>)
    2e54:	701a      	strb	r2, [r3, #0]
    2e56:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    2e5a:	b662      	cpsie	i
    2e5c:	e7db      	b.n	2e16 <udd_ep_run+0x16>
	ptr_job->busy = true;
    2e5e:	7c83      	ldrb	r3, [r0, #18]
    2e60:	2101      	movs	r1, #1
    2e62:	430b      	orrs	r3, r1
    2e64:	7483      	strb	r3, [r0, #18]
	if (cpu_irq_is_enabled_flags(flags))
    2e66:	2a00      	cmp	r2, #0
    2e68:	d005      	beq.n	2e76 <udd_ep_run+0x76>
		cpu_irq_enable();
    2e6a:	2201      	movs	r2, #1
    2e6c:	4b52      	ldr	r3, [pc, #328]	; (2fb8 <udd_ep_run+0x1b8>)
    2e6e:	701a      	strb	r2, [r3, #0]
    2e70:	f3bf 8f5f 	dmb	sy
    2e74:	b662      	cpsie	i
	ptr_job->buf = buf;
    2e76:	9b02      	ldr	r3, [sp, #8]
    2e78:	607b      	str	r3, [r7, #4]
	ptr_job->buf_size = buf_size;
    2e7a:	9b01      	ldr	r3, [sp, #4]
    2e7c:	60bb      	str	r3, [r7, #8]
	ptr_job->nb_trans = 0;
    2e7e:	2300      	movs	r3, #0
    2e80:	60fb      	str	r3, [r7, #12]
	ptr_job->call_trans = callback;
    2e82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2e84:	603b      	str	r3, [r7, #0]
	ptr_job->b_shortpacket = b_shortpacket;
    2e86:	2301      	movs	r3, #1
    2e88:	9a03      	ldr	r2, [sp, #12]
    2e8a:	4013      	ands	r3, r2
    2e8c:	005a      	lsls	r2, r3, #1
    2e8e:	7cbb      	ldrb	r3, [r7, #18]
    2e90:	2102      	movs	r1, #2
    2e92:	438b      	bics	r3, r1
	ptr_job->b_use_out_cache_buffer = false;
    2e94:	4313      	orrs	r3, r2
    2e96:	2204      	movs	r2, #4
    2e98:	4393      	bics	r3, r2
    2e9a:	74bb      	strb	r3, [r7, #18]
	if (ep & USB_EP_DIR_IN) {
    2e9c:	b26b      	sxtb	r3, r5
    2e9e:	2b00      	cmp	r3, #0
    2ea0:	db20      	blt.n	2ee4 <udd_ep_run+0xe4>
		if (0 != ptr_job->buf_size) {
    2ea2:	9b01      	ldr	r3, [sp, #4]
    2ea4:	2b00      	cmp	r3, #0
    2ea6:	d06f      	beq.n	2f88 <udd_ep_run+0x188>
			next_trans = ptr_job->buf_size;
    2ea8:	b29c      	uxth	r4, r3
			if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    2eaa:	4b44      	ldr	r3, [pc, #272]	; (2fbc <udd_ep_run+0x1bc>)
    2eac:	429c      	cmp	r4, r3
    2eae:	d95a      	bls.n	2f66 <udd_ep_run+0x166>
						(UDD_ENDPOINT_MAX_TRANS % ptr_job->ep_size);
    2eb0:	8a39      	ldrh	r1, [r7, #16]
    2eb2:	001c      	movs	r4, r3
    2eb4:	0018      	movs	r0, r3
    2eb6:	4b42      	ldr	r3, [pc, #264]	; (2fc0 <udd_ep_run+0x1c0>)
    2eb8:	4798      	blx	r3
				next_trans = UDD_ENDPOINT_MAX_TRANS -
    2eba:	1a63      	subs	r3, r4, r1
    2ebc:	b29a      	uxth	r2, r3
			if (next_trans < ptr_job->ep_size) {
    2ebe:	8a3b      	ldrh	r3, [r7, #16]
    2ec0:	429a      	cmp	r2, r3
    2ec2:	d257      	bcs.n	2f74 <udd_ep_run+0x174>
				ptr_job->b_use_out_cache_buffer = true;
    2ec4:	7cba      	ldrb	r2, [r7, #18]
    2ec6:	2104      	movs	r1, #4
    2ec8:	430a      	orrs	r2, r1
    2eca:	74ba      	strb	r2, [r7, #18]
								udd_ep_out_cache_buffer[ep_num - 1],
    2ecc:	1e72      	subs	r2, r6, #1
    2ece:	0192      	lsls	r2, r2, #6
    2ed0:	493c      	ldr	r1, [pc, #240]	; (2fc4 <udd_ep_run+0x1c4>)
    2ed2:	1852      	adds	r2, r2, r1
						usb_device_endpoint_read_buffer_job(&usb_device, ep_num,
    2ed4:	0031      	movs	r1, r6
    2ed6:	483c      	ldr	r0, [pc, #240]	; (2fc8 <udd_ep_run+0x1c8>)
    2ed8:	4c3c      	ldr	r4, [pc, #240]	; (2fcc <udd_ep_run+0x1cc>)
    2eda:	47a0      	blx	r4
				return (STATUS_OK ==
    2edc:	4244      	negs	r4, r0
    2ede:	4144      	adcs	r4, r0
    2ee0:	b2e4      	uxtb	r4, r4
    2ee2:	e798      	b.n	2e16 <udd_ep_run+0x16>
		if (0 != ptr_job->buf_size) {
    2ee4:	9b01      	ldr	r3, [sp, #4]
    2ee6:	2b00      	cmp	r3, #0
    2ee8:	d027      	beq.n	2f3a <udd_ep_run+0x13a>
			next_trans = ptr_job->buf_size;
    2eea:	b29d      	uxth	r5, r3
			if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    2eec:	4b33      	ldr	r3, [pc, #204]	; (2fbc <udd_ep_run+0x1bc>)
    2eee:	429d      	cmp	r5, r3
    2ef0:	d906      	bls.n	2f00 <udd_ep_run+0x100>
						(UDD_ENDPOINT_MAX_TRANS % ptr_job->ep_size);
    2ef2:	8a39      	ldrh	r1, [r7, #16]
    2ef4:	001d      	movs	r5, r3
    2ef6:	0018      	movs	r0, r3
    2ef8:	4b31      	ldr	r3, [pc, #196]	; (2fc0 <udd_ep_run+0x1c0>)
    2efa:	4798      	blx	r3
				next_trans = UDD_ENDPOINT_MAX_TRANS -
    2efc:	1a6b      	subs	r3, r5, r1
    2efe:	b29d      	uxth	r5, r3
			ptr_job->b_shortpacket = ptr_job->b_shortpacket &&
    2f00:	7cbb      	ldrb	r3, [r7, #18]
    2f02:	079b      	lsls	r3, r3, #30
    2f04:	d507      	bpl.n	2f16 <udd_ep_run+0x116>
					(0 == (next_trans % ptr_job->ep_size));
    2f06:	8a39      	ldrh	r1, [r7, #16]
    2f08:	0028      	movs	r0, r5
    2f0a:	4b31      	ldr	r3, [pc, #196]	; (2fd0 <udd_ep_run+0x1d0>)
    2f0c:	4798      	blx	r3
			ptr_job->b_shortpacket = ptr_job->b_shortpacket &&
    2f0e:	b289      	uxth	r1, r1
    2f10:	424c      	negs	r4, r1
    2f12:	414c      	adcs	r4, r1
    2f14:	b2e4      	uxtb	r4, r4
    2f16:	2001      	movs	r0, #1
    2f18:	4020      	ands	r0, r4
    2f1a:	0040      	lsls	r0, r0, #1
    2f1c:	7cbc      	ldrb	r4, [r7, #18]
    2f1e:	2302      	movs	r3, #2
    2f20:	439c      	bics	r4, r3
    2f22:	4304      	orrs	r4, r0
    2f24:	74bc      	strb	r4, [r7, #18]
				usb_device_endpoint_write_buffer_job(&usb_device,
    2f26:	002b      	movs	r3, r5
    2f28:	9a02      	ldr	r2, [sp, #8]
    2f2a:	0031      	movs	r1, r6
    2f2c:	4826      	ldr	r0, [pc, #152]	; (2fc8 <udd_ep_run+0x1c8>)
    2f2e:	4c29      	ldr	r4, [pc, #164]	; (2fd4 <udd_ep_run+0x1d4>)
    2f30:	47a0      	blx	r4
		return (STATUS_OK ==
    2f32:	4244      	negs	r4, r0
    2f34:	4144      	adcs	r4, r0
    2f36:	b2e4      	uxtb	r4, r4
    2f38:	e76d      	b.n	2e16 <udd_ep_run+0x16>
		} else if (true == ptr_job->b_shortpacket) {
    2f3a:	7cbb      	ldrb	r3, [r7, #18]
    2f3c:	079b      	lsls	r3, r3, #30
    2f3e:	d505      	bpl.n	2f4c <udd_ep_run+0x14c>
			ptr_job->b_shortpacket = false; /* avoid to send zero length packet again */
    2f40:	7cbb      	ldrb	r3, [r7, #18]
    2f42:	2202      	movs	r2, #2
    2f44:	4393      	bics	r3, r2
    2f46:	74bb      	strb	r3, [r7, #18]
			next_trans = 0;
    2f48:	2500      	movs	r5, #0
    2f4a:	e7ec      	b.n	2f26 <udd_ep_run+0x126>
			ptr_job->busy = false;
    2f4c:	7cbb      	ldrb	r3, [r7, #18]
    2f4e:	2201      	movs	r2, #1
    2f50:	4393      	bics	r3, r2
    2f52:	74bb      	strb	r3, [r7, #18]
			if (NULL != ptr_job->call_trans) {
    2f54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2f56:	2b00      	cmp	r3, #0
    2f58:	d025      	beq.n	2fa6 <udd_ep_run+0x1a6>
				ptr_job->call_trans(UDD_EP_TRANSFER_OK, 0, ep);
    2f5a:	002a      	movs	r2, r5
    2f5c:	2100      	movs	r1, #0
    2f5e:	2000      	movs	r0, #0
    2f60:	4798      	blx	r3
			return true;
    2f62:	2401      	movs	r4, #1
    2f64:	e757      	b.n	2e16 <udd_ep_run+0x16>
				next_trans -= next_trans % ptr_job->ep_size;
    2f66:	8a39      	ldrh	r1, [r7, #16]
    2f68:	0020      	movs	r0, r4
    2f6a:	4b19      	ldr	r3, [pc, #100]	; (2fd0 <udd_ep_run+0x1d0>)
    2f6c:	4798      	blx	r3
    2f6e:	1a63      	subs	r3, r4, r1
    2f70:	b29a      	uxth	r2, r3
    2f72:	e7a4      	b.n	2ebe <udd_ep_run+0xbe>
						usb_device_endpoint_read_buffer_job(&usb_device, ep_num,
    2f74:	0013      	movs	r3, r2
    2f76:	9a02      	ldr	r2, [sp, #8]
    2f78:	0031      	movs	r1, r6
    2f7a:	4813      	ldr	r0, [pc, #76]	; (2fc8 <udd_ep_run+0x1c8>)
    2f7c:	4c13      	ldr	r4, [pc, #76]	; (2fcc <udd_ep_run+0x1cc>)
    2f7e:	47a0      	blx	r4
				return (STATUS_OK ==
    2f80:	4244      	negs	r4, r0
    2f82:	4144      	adcs	r4, r0
    2f84:	b2e4      	uxtb	r4, r4
    2f86:	e746      	b.n	2e16 <udd_ep_run+0x16>
			ptr_job->busy = false;
    2f88:	7cbb      	ldrb	r3, [r7, #18]
    2f8a:	2201      	movs	r2, #1
    2f8c:	4393      	bics	r3, r2
    2f8e:	74bb      	strb	r3, [r7, #18]
			if (NULL != ptr_job->call_trans) {
    2f90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2f92:	2b00      	cmp	r3, #0
    2f94:	d009      	beq.n	2faa <udd_ep_run+0x1aa>
				ptr_job->call_trans(UDD_EP_TRANSFER_OK, 0, ep);
    2f96:	002a      	movs	r2, r5
    2f98:	2100      	movs	r1, #0
    2f9a:	2000      	movs	r0, #0
    2f9c:	4798      	blx	r3
			return true;
    2f9e:	2401      	movs	r4, #1
    2fa0:	e739      	b.n	2e16 <udd_ep_run+0x16>
		return false;
    2fa2:	2400      	movs	r4, #0
    2fa4:	e737      	b.n	2e16 <udd_ep_run+0x16>
			return true;
    2fa6:	2401      	movs	r4, #1
    2fa8:	e735      	b.n	2e16 <udd_ep_run+0x16>
			return true;
    2faa:	2401      	movs	r4, #1
    2fac:	e733      	b.n	2e16 <udd_ep_run+0x16>
    2fae:	46c0      	nop			; (mov r8, r8)
    2fb0:	00002c79 	.word	0x00002c79
    2fb4:	000024d5 	.word	0x000024d5
    2fb8:	200000e8 	.word	0x200000e8
    2fbc:	00001fff 	.word	0x00001fff
    2fc0:	00004891 	.word	0x00004891
    2fc4:	200003a4 	.word	0x200003a4
    2fc8:	20000464 	.word	0x20000464
    2fcc:	00003839 	.word	0x00003839
    2fd0:	000046bd 	.word	0x000046bd
    2fd4:	000037e5 	.word	0x000037e5

00002fd8 <udd_set_address>:
	module_inst->hw->DEVICE.DADD.reg = USB_DEVICE_DADD_ADDEN | address;
    2fd8:	4b02      	ldr	r3, [pc, #8]	; (2fe4 <udd_set_address+0xc>)
    2fda:	681b      	ldr	r3, [r3, #0]
    2fdc:	2280      	movs	r2, #128	; 0x80
    2fde:	4310      	orrs	r0, r2
    2fe0:	7298      	strb	r0, [r3, #10]
}
    2fe2:	4770      	bx	lr
    2fe4:	20000464 	.word	0x20000464

00002fe8 <udd_getaddress>:
	return ((uint8_t)(module_inst->hw->DEVICE.DADD.bit.DADD));
    2fe8:	4b02      	ldr	r3, [pc, #8]	; (2ff4 <udd_getaddress+0xc>)
    2fea:	681b      	ldr	r3, [r3, #0]
    2fec:	7a98      	ldrb	r0, [r3, #10]
    2fee:	0640      	lsls	r0, r0, #25
    2ff0:	0e40      	lsrs	r0, r0, #25
}
    2ff2:	4770      	bx	lr
    2ff4:	20000464 	.word	0x20000464

00002ff8 <udd_send_remotewakeup>:
{
    2ff8:	b510      	push	{r4, lr}
		if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    2ffa:	4b12      	ldr	r3, [pc, #72]	; (3044 <udd_send_remotewakeup+0x4c>)
    2ffc:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    2ffe:	069b      	lsls	r3, r3, #26
    3000:	d41a      	bmi.n	3038 <udd_send_remotewakeup+0x40>
			while((SYSCTRL->PCLKSR.reg & DFLL_READY_FLAG) != DFLL_READY_FLAG);
    3002:	4910      	ldr	r1, [pc, #64]	; (3044 <udd_send_remotewakeup+0x4c>)
    3004:	22d0      	movs	r2, #208	; 0xd0
    3006:	68cb      	ldr	r3, [r1, #12]
    3008:	4013      	ands	r3, r2
    300a:	2bd0      	cmp	r3, #208	; 0xd0
    300c:	d1fb      	bne.n	3006 <udd_send_remotewakeup+0xe>
	udd_sleep_mode(UDD_STATE_IDLE);
    300e:	2003      	movs	r0, #3
    3010:	4b0d      	ldr	r3, [pc, #52]	; (3048 <udd_send_remotewakeup+0x50>)
    3012:	4798      	blx	r3
	return module_inst->hw->DEVICE.FSMSTATUS.reg;
    3014:	4b0d      	ldr	r3, [pc, #52]	; (304c <udd_send_remotewakeup+0x54>)
    3016:	681a      	ldr	r2, [r3, #0]
    3018:	7b53      	ldrb	r3, [r2, #13]
	while(2 != usb_get_state_machine_status(&usb_device) && try --) {
    301a:	2b02      	cmp	r3, #2
    301c:	d00b      	beq.n	3036 <udd_send_remotewakeup+0x3e>
    301e:	2105      	movs	r1, #5
	module_inst->hw->DEVICE.CTRLB.reg |= USB_DEVICE_CTRLB_UPRSM;
    3020:	2002      	movs	r0, #2
    3022:	8913      	ldrh	r3, [r2, #8]
    3024:	4303      	orrs	r3, r0
    3026:	b29b      	uxth	r3, r3
    3028:	8113      	strh	r3, [r2, #8]
	return module_inst->hw->DEVICE.FSMSTATUS.reg;
    302a:	7b53      	ldrb	r3, [r2, #13]
    302c:	2b02      	cmp	r3, #2
    302e:	d002      	beq.n	3036 <udd_send_remotewakeup+0x3e>
    3030:	3901      	subs	r1, #1
    3032:	2900      	cmp	r1, #0
    3034:	d1f5      	bne.n	3022 <udd_send_remotewakeup+0x2a>
}
    3036:	bd10      	pop	{r4, pc}
			while((SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY);
    3038:	4902      	ldr	r1, [pc, #8]	; (3044 <udd_send_remotewakeup+0x4c>)
    303a:	2210      	movs	r2, #16
    303c:	68cb      	ldr	r3, [r1, #12]
    303e:	421a      	tst	r2, r3
    3040:	d0fc      	beq.n	303c <udd_send_remotewakeup+0x44>
    3042:	e7e4      	b.n	300e <udd_send_remotewakeup+0x16>
    3044:	40000800 	.word	0x40000800
    3048:	00002415 	.word	0x00002415
    304c:	20000464 	.word	0x20000464

00003050 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
    3050:	4b01      	ldr	r3, [pc, #4]	; (3058 <udd_set_setup_payload+0x8>)
    3052:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
    3054:	8199      	strh	r1, [r3, #12]
}
    3056:	4770      	bx	lr
    3058:	200005cc 	.word	0x200005cc

0000305c <udd_detach>:

void udd_detach(void)
{
    305c:	b510      	push	{r4, lr}
	module_inst->hw->DEVICE.CTRLB.reg |= USB_DEVICE_CTRLB_DETACH;
    305e:	4b05      	ldr	r3, [pc, #20]	; (3074 <udd_detach+0x18>)
    3060:	681a      	ldr	r2, [r3, #0]
    3062:	8913      	ldrh	r3, [r2, #8]
    3064:	2101      	movs	r1, #1
    3066:	430b      	orrs	r3, r1
    3068:	8113      	strh	r3, [r2, #8]
	usb_device_detach(&usb_device);
	udd_sleep_mode(UDD_STATE_SUSPEND);
    306a:	2001      	movs	r0, #1
    306c:	4b02      	ldr	r3, [pc, #8]	; (3078 <udd_detach+0x1c>)
    306e:	4798      	blx	r3
}
    3070:	bd10      	pop	{r4, pc}
    3072:	46c0      	nop			; (mov r8, r8)
    3074:	20000464 	.word	0x20000464
    3078:	00002415 	.word	0x00002415

0000307c <udd_attach>:

void udd_attach(void)
{
    307c:	b570      	push	{r4, r5, r6, lr}
	udd_sleep_mode(UDD_STATE_IDLE);
    307e:	2003      	movs	r0, #3
    3080:	4b16      	ldr	r3, [pc, #88]	; (30dc <udd_attach+0x60>)
    3082:	4798      	blx	r3
	module_inst->hw->DEVICE.CTRLB.reg &= ~USB_DEVICE_CTRLB_DETACH;
    3084:	4c16      	ldr	r4, [pc, #88]	; (30e0 <udd_attach+0x64>)
    3086:	6822      	ldr	r2, [r4, #0]
    3088:	8913      	ldrh	r3, [r2, #8]
    308a:	2101      	movs	r1, #1
    308c:	438b      	bics	r3, r1
    308e:	8113      	strh	r3, [r2, #8]
	usb_device_attach(&usb_device);

	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND, _usb_on_suspend);
    3090:	4a14      	ldr	r2, [pc, #80]	; (30e4 <udd_attach+0x68>)
    3092:	3103      	adds	r1, #3
    3094:	0020      	movs	r0, r4
    3096:	4e14      	ldr	r6, [pc, #80]	; (30e8 <udd_attach+0x6c>)
    3098:	47b0      	blx	r6
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_SOF, _usb_on_sof_notify);
    309a:	4a14      	ldr	r2, [pc, #80]	; (30ec <udd_attach+0x70>)
    309c:	2100      	movs	r1, #0
    309e:	0020      	movs	r0, r4
    30a0:	47b0      	blx	r6
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_RESET, _usb_on_bus_reset);
    30a2:	4a13      	ldr	r2, [pc, #76]	; (30f0 <udd_attach+0x74>)
    30a4:	2101      	movs	r1, #1
    30a6:	0020      	movs	r0, r4
    30a8:	47b0      	blx	r6
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP, _usb_on_wakeup);
    30aa:	4a12      	ldr	r2, [pc, #72]	; (30f4 <udd_attach+0x78>)
    30ac:	2102      	movs	r1, #2
    30ae:	0020      	movs	r0, r4
    30b0:	47b0      	blx	r6

	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    30b2:	2104      	movs	r1, #4
    30b4:	0020      	movs	r0, r4
    30b6:	4d10      	ldr	r5, [pc, #64]	; (30f8 <udd_attach+0x7c>)
    30b8:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_SOF);
    30ba:	2100      	movs	r1, #0
    30bc:	0020      	movs	r0, r4
    30be:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_RESET);
    30c0:	2101      	movs	r1, #1
    30c2:	0020      	movs	r0, r4
    30c4:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    30c6:	2102      	movs	r1, #2
    30c8:	0020      	movs	r0, r4
    30ca:	47a8      	blx	r5
#ifdef  USB_DEVICE_LPM_SUPPORT
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP, _usb_device_lpm_suspend);
    30cc:	4a0b      	ldr	r2, [pc, #44]	; (30fc <udd_attach+0x80>)
    30ce:	2106      	movs	r1, #6
    30d0:	0020      	movs	r0, r4
    30d2:	47b0      	blx	r6
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP);
    30d4:	2106      	movs	r1, #6
    30d6:	0020      	movs	r0, r4
    30d8:	47a8      	blx	r5
#endif
}
    30da:	bd70      	pop	{r4, r5, r6, pc}
    30dc:	00002415 	.word	0x00002415
    30e0:	20000464 	.word	0x20000464
    30e4:	00002a85 	.word	0x00002a85
    30e8:	00003235 	.word	0x00003235
    30ec:	00002a71 	.word	0x00002a71
    30f0:	000027a5 	.word	0x000027a5
    30f4:	00002735 	.word	0x00002735
    30f8:	00003259 	.word	0x00003259
    30fc:	000026d9 	.word	0x000026d9

00003100 <_uhd_vbus_handler>:
/**
 * \internal
 * \brief USB VBUS pin change handler
 */
static void _uhd_vbus_handler(void)
{
    3100:	b510      	push	{r4, lr}
	extint_chan_disable_callback(USB_VBUS_EIC_LINE,
    3102:	2100      	movs	r1, #0
    3104:	200e      	movs	r0, #14
    3106:	4b08      	ldr	r3, [pc, #32]	; (3128 <_uhd_vbus_handler+0x28>)
    3108:	4798      	blx	r3
	return (port_base->IN.reg & pin_mask);
    310a:	4b08      	ldr	r3, [pc, #32]	; (312c <_uhd_vbus_handler+0x2c>)
    310c:	6a1b      	ldr	r3, [r3, #32]
			EXTINT_CALLBACK_TYPE_DETECT);
# ifndef USB_DEVICE_ATTACH_AUTO_DISABLE
	if (is_usb_vbus_high()) {
    310e:	045b      	lsls	r3, r3, #17
    3110:	d406      	bmi.n	3120 <_uhd_vbus_handler+0x20>
		udd_attach();
	} else {
		udd_detach();
    3112:	4b07      	ldr	r3, [pc, #28]	; (3130 <_uhd_vbus_handler+0x30>)
    3114:	4798      	blx	r3
	}
# endif
# ifdef UDC_VBUS_EVENT
	UDC_VBUS_EVENT(is_usb_vbus_high());
# endif
	extint_chan_enable_callback(USB_VBUS_EIC_LINE,
    3116:	2100      	movs	r1, #0
    3118:	200e      	movs	r0, #14
    311a:	4b06      	ldr	r3, [pc, #24]	; (3134 <_uhd_vbus_handler+0x34>)
    311c:	4798      	blx	r3
			EXTINT_CALLBACK_TYPE_DETECT);
}
    311e:	bd10      	pop	{r4, pc}
		udd_attach();
    3120:	4b05      	ldr	r3, [pc, #20]	; (3138 <_uhd_vbus_handler+0x38>)
    3122:	4798      	blx	r3
    3124:	e7f7      	b.n	3116 <_uhd_vbus_handler+0x16>
    3126:	46c0      	nop			; (mov r8, r8)
    3128:	000011d1 	.word	0x000011d1
    312c:	41004400 	.word	0x41004400
    3130:	0000305d 	.word	0x0000305d
    3134:	000011b1 	.word	0x000011b1
    3138:	0000307d 	.word	0x0000307d

0000313c <udd_enable>:
	return false;
#endif
}

void udd_enable(void)
{
    313c:	b570      	push	{r4, r5, r6, lr}
    313e:	b086      	sub	sp, #24
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    3140:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    3144:	425a      	negs	r2, r3
    3146:	4153      	adcs	r3, r2
    3148:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    314a:	b672      	cpsid	i
    314c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    3150:	2600      	movs	r6, #0
    3152:	4b29      	ldr	r3, [pc, #164]	; (31f8 <udd_enable+0xbc>)
    3154:	701e      	strb	r6, [r3, #0]
	return flags;
    3156:	9d01      	ldr	r5, [sp, #4]
	}
#endif
	struct usb_config config_usb;

	/* USB Module configuration */
	usb_get_config_defaults(&config_usb);
    3158:	ac05      	add	r4, sp, #20
    315a:	0020      	movs	r0, r4
    315c:	4b27      	ldr	r3, [pc, #156]	; (31fc <udd_enable+0xc0>)
    315e:	4798      	blx	r3
	config_usb.source_generator = UDD_CLOCK_GEN;
    3160:	70a6      	strb	r6, [r4, #2]
	usb_init(&usb_device, USB, &config_usb);
    3162:	4e27      	ldr	r6, [pc, #156]	; (3200 <udd_enable+0xc4>)
    3164:	0022      	movs	r2, r4
    3166:	4927      	ldr	r1, [pc, #156]	; (3204 <udd_enable+0xc8>)
    3168:	0030      	movs	r0, r6
    316a:	4b27      	ldr	r3, [pc, #156]	; (3208 <udd_enable+0xcc>)
    316c:	4798      	blx	r3

	/* USB Module Enable */
	usb_enable(&usb_device);
    316e:	0030      	movs	r0, r6
    3170:	4b26      	ldr	r3, [pc, #152]	; (320c <udd_enable+0xd0>)
    3172:	4798      	blx	r3
		if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    3174:	4b26      	ldr	r3, [pc, #152]	; (3210 <udd_enable+0xd4>)
    3176:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    3178:	069b      	lsls	r3, r3, #26
    317a:	d434      	bmi.n	31e6 <udd_enable+0xaa>
			while((SYSCTRL->PCLKSR.reg & DFLL_READY_FLAG) != DFLL_READY_FLAG);
    317c:	4924      	ldr	r1, [pc, #144]	; (3210 <udd_enable+0xd4>)
    317e:	22d0      	movs	r2, #208	; 0xd0
    3180:	68cb      	ldr	r3, [r1, #12]
    3182:	4013      	ands	r3, r2
    3184:	2bd0      	cmp	r3, #208	; 0xd0
    3186:	d1fb      	bne.n	3180 <udd_enable+0x44>

	/* Check clock after enable module, request the clock */
	udd_wait_clock_ready();

	udd_sleep_mode(UDD_STATE_SUSPEND);
    3188:	2001      	movs	r0, #1
    318a:	4b22      	ldr	r3, [pc, #136]	; (3214 <udd_enable+0xd8>)
    318c:	4798      	blx	r3
	extint_chan_get_config_defaults(&eint_chan_conf);
    318e:	ac02      	add	r4, sp, #8
    3190:	0020      	movs	r0, r4
    3192:	4b21      	ldr	r3, [pc, #132]	; (3218 <udd_enable+0xdc>)
    3194:	4798      	blx	r3
	eint_chan_conf.gpio_pin           = USB_VBUS_PIN;
    3196:	230e      	movs	r3, #14
    3198:	9302      	str	r3, [sp, #8]
	eint_chan_conf.gpio_pin_mux       = USB_VBUS_EIC_MUX;
    319a:	2300      	movs	r3, #0
    319c:	6063      	str	r3, [r4, #4]
	eint_chan_conf.gpio_pin_pull      = EXTINT_PULL_NONE;
    319e:	7223      	strb	r3, [r4, #8]
	eint_chan_conf.detection_criteria = EXTINT_DETECT_BOTH;
    31a0:	3303      	adds	r3, #3
    31a2:	72e3      	strb	r3, [r4, #11]
	eint_chan_conf.filter_input_signal = true;
    31a4:	3b02      	subs	r3, #2
    31a6:	72a3      	strb	r3, [r4, #10]
	extint_chan_disable_callback(USB_VBUS_EIC_LINE,
    31a8:	2100      	movs	r1, #0
    31aa:	200e      	movs	r0, #14
    31ac:	4b1b      	ldr	r3, [pc, #108]	; (321c <udd_enable+0xe0>)
    31ae:	4798      	blx	r3
	extint_chan_set_config(USB_VBUS_EIC_LINE, &eint_chan_conf);
    31b0:	0021      	movs	r1, r4
    31b2:	200e      	movs	r0, #14
    31b4:	4b1a      	ldr	r3, [pc, #104]	; (3220 <udd_enable+0xe4>)
    31b6:	4798      	blx	r3
	extint_register_callback(_uhd_vbus_handler,
    31b8:	2200      	movs	r2, #0
    31ba:	210e      	movs	r1, #14
    31bc:	4819      	ldr	r0, [pc, #100]	; (3224 <udd_enable+0xe8>)
    31be:	4b1a      	ldr	r3, [pc, #104]	; (3228 <udd_enable+0xec>)
    31c0:	4798      	blx	r3
	extint_chan_enable_callback(USB_VBUS_EIC_LINE,
    31c2:	2100      	movs	r1, #0
    31c4:	200e      	movs	r0, #14
    31c6:	4b19      	ldr	r3, [pc, #100]	; (322c <udd_enable+0xf0>)
    31c8:	4798      	blx	r3
    31ca:	4b19      	ldr	r3, [pc, #100]	; (3230 <udd_enable+0xf4>)
    31cc:	6a1b      	ldr	r3, [r3, #32]

#if USB_VBUS_EIC
	_usb_vbus_config();
	if (is_usb_vbus_high()) {
    31ce:	045b      	lsls	r3, r3, #17
    31d0:	d40f      	bmi.n	31f2 <udd_enable+0xb6>
	if (cpu_irq_is_enabled_flags(flags))
    31d2:	2d00      	cmp	r5, #0
    31d4:	d005      	beq.n	31e2 <udd_enable+0xa6>
		cpu_irq_enable();
    31d6:	2201      	movs	r2, #1
    31d8:	4b07      	ldr	r3, [pc, #28]	; (31f8 <udd_enable+0xbc>)
    31da:	701a      	strb	r2, [r3, #0]
    31dc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    31e0:	b662      	cpsie	i
	udd_attach();
# endif
#endif

	cpu_irq_restore(flags);
}
    31e2:	b006      	add	sp, #24
    31e4:	bd70      	pop	{r4, r5, r6, pc}
			while((SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY);
    31e6:	490a      	ldr	r1, [pc, #40]	; (3210 <udd_enable+0xd4>)
    31e8:	2210      	movs	r2, #16
    31ea:	68cb      	ldr	r3, [r1, #12]
    31ec:	421a      	tst	r2, r3
    31ee:	d0fc      	beq.n	31ea <udd_enable+0xae>
    31f0:	e7ca      	b.n	3188 <udd_enable+0x4c>
		_uhd_vbus_handler();
    31f2:	4b0c      	ldr	r3, [pc, #48]	; (3224 <udd_enable+0xe8>)
    31f4:	4798      	blx	r3
    31f6:	e7ec      	b.n	31d2 <udd_enable+0x96>
    31f8:	200000e8 	.word	0x200000e8
    31fc:	00003e95 	.word	0x00003e95
    3200:	20000464 	.word	0x20000464
    3204:	41005000 	.word	0x41005000
    3208:	00003ea5 	.word	0x00003ea5
    320c:	000038b9 	.word	0x000038b9
    3210:	40000800 	.word	0x40000800
    3214:	00002415 	.word	0x00002415
    3218:	000012c9 	.word	0x000012c9
    321c:	000011d1 	.word	0x000011d1
    3220:	000012dd 	.word	0x000012dd
    3224:	00003101 	.word	0x00003101
    3228:	00001185 	.word	0x00001185
    322c:	000011b1 	.word	0x000011b1
    3230:	41004400 	.word	0x41004400

00003234 <usb_device_register_callback>:
    3234:	b510      	push	{r4, lr}
    3236:	000b      	movs	r3, r1
    3238:	332e      	adds	r3, #46	; 0x2e
    323a:	009b      	lsls	r3, r3, #2
    323c:	501a      	str	r2, [r3, r0]
    323e:	22aa      	movs	r2, #170	; 0xaa
    3240:	0052      	lsls	r2, r2, #1
    3242:	0049      	lsls	r1, r1, #1
    3244:	5a83      	ldrh	r3, [r0, r2]
    3246:	4c03      	ldr	r4, [pc, #12]	; (3254 <usb_device_register_callback+0x20>)
    3248:	5b09      	ldrh	r1, [r1, r4]
    324a:	430b      	orrs	r3, r1
    324c:	5283      	strh	r3, [r0, r2]
    324e:	2000      	movs	r0, #0
    3250:	bd10      	pop	{r4, pc}
    3252:	46c0      	nop			; (mov r8, r8)
    3254:	00004a10 	.word	0x00004a10

00003258 <usb_device_enable_callback>:
    3258:	0049      	lsls	r1, r1, #1
    325a:	4b06      	ldr	r3, [pc, #24]	; (3274 <usb_device_enable_callback+0x1c>)
    325c:	5acb      	ldrh	r3, [r1, r3]
    325e:	6802      	ldr	r2, [r0, #0]
    3260:	8393      	strh	r3, [r2, #28]
    3262:	21ab      	movs	r1, #171	; 0xab
    3264:	0049      	lsls	r1, r1, #1
    3266:	5a42      	ldrh	r2, [r0, r1]
    3268:	431a      	orrs	r2, r3
    326a:	5242      	strh	r2, [r0, r1]
    326c:	6802      	ldr	r2, [r0, #0]
    326e:	8313      	strh	r3, [r2, #24]
    3270:	2000      	movs	r0, #0
    3272:	4770      	bx	lr
    3274:	00004a10 	.word	0x00004a10

00003278 <usb_device_disable_callback>:
    3278:	0049      	lsls	r1, r1, #1
    327a:	4b05      	ldr	r3, [pc, #20]	; (3290 <usb_device_disable_callback+0x18>)
    327c:	5aca      	ldrh	r2, [r1, r3]
    327e:	21ab      	movs	r1, #171	; 0xab
    3280:	0049      	lsls	r1, r1, #1
    3282:	5a43      	ldrh	r3, [r0, r1]
    3284:	4393      	bics	r3, r2
    3286:	5243      	strh	r3, [r0, r1]
    3288:	6803      	ldr	r3, [r0, #0]
    328a:	829a      	strh	r2, [r3, #20]
    328c:	2000      	movs	r0, #0
    328e:	4770      	bx	lr
    3290:	00004a10 	.word	0x00004a10

00003294 <usb_device_endpoint_register_callback>:
    3294:	b510      	push	{r4, lr}
    3296:	008c      	lsls	r4, r1, #2
    3298:	18a4      	adds	r4, r4, r2
    329a:	3434      	adds	r4, #52	; 0x34
    329c:	00a4      	lsls	r4, r4, #2
    329e:	1904      	adds	r4, r0, r4
    32a0:	6063      	str	r3, [r4, #4]
    32a2:	1840      	adds	r0, r0, r1
    32a4:	3059      	adds	r0, #89	; 0x59
    32a6:	30ff      	adds	r0, #255	; 0xff
    32a8:	7803      	ldrb	r3, [r0, #0]
    32aa:	4903      	ldr	r1, [pc, #12]	; (32b8 <usb_device_endpoint_register_callback+0x24>)
    32ac:	5c8a      	ldrb	r2, [r1, r2]
    32ae:	4313      	orrs	r3, r2
    32b0:	7003      	strb	r3, [r0, #0]
    32b2:	2000      	movs	r0, #0
    32b4:	bd10      	pop	{r4, pc}
    32b6:	46c0      	nop			; (mov r8, r8)
    32b8:	00004a20 	.word	0x00004a20

000032bc <usb_device_endpoint_unregister_callback>:
    32bc:	b510      	push	{r4, lr}
    32be:	008b      	lsls	r3, r1, #2
    32c0:	189b      	adds	r3, r3, r2
    32c2:	3334      	adds	r3, #52	; 0x34
    32c4:	009b      	lsls	r3, r3, #2
    32c6:	18c3      	adds	r3, r0, r3
    32c8:	2400      	movs	r4, #0
    32ca:	605c      	str	r4, [r3, #4]
    32cc:	1840      	adds	r0, r0, r1
    32ce:	3059      	adds	r0, #89	; 0x59
    32d0:	30ff      	adds	r0, #255	; 0xff
    32d2:	4b03      	ldr	r3, [pc, #12]	; (32e0 <usb_device_endpoint_unregister_callback+0x24>)
    32d4:	5c9a      	ldrb	r2, [r3, r2]
    32d6:	7803      	ldrb	r3, [r0, #0]
    32d8:	4393      	bics	r3, r2
    32da:	7003      	strb	r3, [r0, #0]
    32dc:	2000      	movs	r0, #0
    32de:	bd10      	pop	{r4, pc}
    32e0:	00004a20 	.word	0x00004a20

000032e4 <usb_device_endpoint_enable_callback>:
    32e4:	b570      	push	{r4, r5, r6, lr}
    32e6:	230f      	movs	r3, #15
    32e8:	400b      	ands	r3, r1
    32ea:	18c4      	adds	r4, r0, r3
    32ec:	3461      	adds	r4, #97	; 0x61
    32ee:	34ff      	adds	r4, #255	; 0xff
    32f0:	7825      	ldrb	r5, [r4, #0]
    32f2:	4e2f      	ldr	r6, [pc, #188]	; (33b0 <usb_device_endpoint_enable_callback+0xcc>)
    32f4:	5cb6      	ldrb	r6, [r6, r2]
    32f6:	4335      	orrs	r5, r6
    32f8:	7025      	strb	r5, [r4, #0]
    32fa:	2a00      	cmp	r2, #0
    32fc:	d129      	bne.n	3352 <usb_device_endpoint_enable_callback+0x6e>
    32fe:	2b00      	cmp	r3, #0
    3300:	d112      	bne.n	3328 <usb_device_endpoint_enable_callback+0x44>
    3302:	2503      	movs	r5, #3
    3304:	240a      	movs	r4, #10
    3306:	34ff      	adds	r4, #255	; 0xff
    3308:	6806      	ldr	r6, [r0, #0]
    330a:	5535      	strb	r5, [r6, r4]
    330c:	2a03      	cmp	r2, #3
    330e:	d109      	bne.n	3324 <usb_device_endpoint_enable_callback+0x40>
    3310:	b249      	sxtb	r1, r1
    3312:	2900      	cmp	r1, #0
    3314:	db44      	blt.n	33a0 <usb_device_endpoint_enable_callback+0xbc>
    3316:	6802      	ldr	r2, [r0, #0]
    3318:	015b      	lsls	r3, r3, #5
    331a:	18d3      	adds	r3, r2, r3
    331c:	330a      	adds	r3, #10
    331e:	33ff      	adds	r3, #255	; 0xff
    3320:	2220      	movs	r2, #32
    3322:	701a      	strb	r2, [r3, #0]
    3324:	2000      	movs	r0, #0
    3326:	bd70      	pop	{r4, r5, r6, pc}
    3328:	b24c      	sxtb	r4, r1
    332a:	2c00      	cmp	r4, #0
    332c:	db08      	blt.n	3340 <usb_device_endpoint_enable_callback+0x5c>
    332e:	015c      	lsls	r4, r3, #5
    3330:	6805      	ldr	r5, [r0, #0]
    3332:	46ac      	mov	ip, r5
    3334:	4464      	add	r4, ip
    3336:	340a      	adds	r4, #10
    3338:	34ff      	adds	r4, #255	; 0xff
    333a:	2501      	movs	r5, #1
    333c:	7025      	strb	r5, [r4, #0]
    333e:	e7e5      	b.n	330c <usb_device_endpoint_enable_callback+0x28>
    3340:	015c      	lsls	r4, r3, #5
    3342:	6805      	ldr	r5, [r0, #0]
    3344:	46ac      	mov	ip, r5
    3346:	4464      	add	r4, ip
    3348:	340a      	adds	r4, #10
    334a:	34ff      	adds	r4, #255	; 0xff
    334c:	2502      	movs	r5, #2
    334e:	7025      	strb	r5, [r4, #0]
    3350:	e7dc      	b.n	330c <usb_device_endpoint_enable_callback+0x28>
    3352:	2a01      	cmp	r2, #1
    3354:	d11a      	bne.n	338c <usb_device_endpoint_enable_callback+0xa8>
    3356:	2b00      	cmp	r3, #0
    3358:	d105      	bne.n	3366 <usb_device_endpoint_enable_callback+0x82>
    335a:	6802      	ldr	r2, [r0, #0]
    335c:	210c      	movs	r1, #12
    335e:	230a      	movs	r3, #10
    3360:	33ff      	adds	r3, #255	; 0xff
    3362:	54d1      	strb	r1, [r2, r3]
    3364:	e7de      	b.n	3324 <usb_device_endpoint_enable_callback+0x40>
    3366:	b249      	sxtb	r1, r1
    3368:	2900      	cmp	r1, #0
    336a:	db07      	blt.n	337c <usb_device_endpoint_enable_callback+0x98>
    336c:	6802      	ldr	r2, [r0, #0]
    336e:	015b      	lsls	r3, r3, #5
    3370:	18d3      	adds	r3, r2, r3
    3372:	330a      	adds	r3, #10
    3374:	33ff      	adds	r3, #255	; 0xff
    3376:	2204      	movs	r2, #4
    3378:	701a      	strb	r2, [r3, #0]
    337a:	e7d3      	b.n	3324 <usb_device_endpoint_enable_callback+0x40>
    337c:	6802      	ldr	r2, [r0, #0]
    337e:	015b      	lsls	r3, r3, #5
    3380:	18d3      	adds	r3, r2, r3
    3382:	330a      	adds	r3, #10
    3384:	33ff      	adds	r3, #255	; 0xff
    3386:	2208      	movs	r2, #8
    3388:	701a      	strb	r2, [r3, #0]
    338a:	e7cb      	b.n	3324 <usb_device_endpoint_enable_callback+0x40>
    338c:	2a02      	cmp	r2, #2
    338e:	d1bd      	bne.n	330c <usb_device_endpoint_enable_callback+0x28>
    3390:	6802      	ldr	r2, [r0, #0]
    3392:	015b      	lsls	r3, r3, #5
    3394:	18d3      	adds	r3, r2, r3
    3396:	330a      	adds	r3, #10
    3398:	33ff      	adds	r3, #255	; 0xff
    339a:	2210      	movs	r2, #16
    339c:	701a      	strb	r2, [r3, #0]
    339e:	e7c1      	b.n	3324 <usb_device_endpoint_enable_callback+0x40>
    33a0:	6802      	ldr	r2, [r0, #0]
    33a2:	015b      	lsls	r3, r3, #5
    33a4:	18d3      	adds	r3, r2, r3
    33a6:	330a      	adds	r3, #10
    33a8:	33ff      	adds	r3, #255	; 0xff
    33aa:	2240      	movs	r2, #64	; 0x40
    33ac:	701a      	strb	r2, [r3, #0]
    33ae:	e7b9      	b.n	3324 <usb_device_endpoint_enable_callback+0x40>
    33b0:	00004a20 	.word	0x00004a20

000033b4 <usb_device_endpoint_disable_callback>:
    33b4:	b570      	push	{r4, r5, r6, lr}
    33b6:	230f      	movs	r3, #15
    33b8:	400b      	ands	r3, r1
    33ba:	18c4      	adds	r4, r0, r3
    33bc:	3461      	adds	r4, #97	; 0x61
    33be:	34ff      	adds	r4, #255	; 0xff
    33c0:	4d2f      	ldr	r5, [pc, #188]	; (3480 <usb_device_endpoint_disable_callback+0xcc>)
    33c2:	5cae      	ldrb	r6, [r5, r2]
    33c4:	7825      	ldrb	r5, [r4, #0]
    33c6:	43b5      	bics	r5, r6
    33c8:	7025      	strb	r5, [r4, #0]
    33ca:	2a00      	cmp	r2, #0
    33cc:	d129      	bne.n	3422 <usb_device_endpoint_disable_callback+0x6e>
    33ce:	2b00      	cmp	r3, #0
    33d0:	d112      	bne.n	33f8 <usb_device_endpoint_disable_callback+0x44>
    33d2:	2503      	movs	r5, #3
    33d4:	2484      	movs	r4, #132	; 0x84
    33d6:	0064      	lsls	r4, r4, #1
    33d8:	6806      	ldr	r6, [r0, #0]
    33da:	5535      	strb	r5, [r6, r4]
    33dc:	2a03      	cmp	r2, #3
    33de:	d109      	bne.n	33f4 <usb_device_endpoint_disable_callback+0x40>
    33e0:	b249      	sxtb	r1, r1
    33e2:	2900      	cmp	r1, #0
    33e4:	db44      	blt.n	3470 <usb_device_endpoint_disable_callback+0xbc>
    33e6:	6802      	ldr	r2, [r0, #0]
    33e8:	015b      	lsls	r3, r3, #5
    33ea:	18d3      	adds	r3, r2, r3
    33ec:	3309      	adds	r3, #9
    33ee:	33ff      	adds	r3, #255	; 0xff
    33f0:	2220      	movs	r2, #32
    33f2:	701a      	strb	r2, [r3, #0]
    33f4:	2000      	movs	r0, #0
    33f6:	bd70      	pop	{r4, r5, r6, pc}
    33f8:	b24c      	sxtb	r4, r1
    33fa:	2c00      	cmp	r4, #0
    33fc:	db08      	blt.n	3410 <usb_device_endpoint_disable_callback+0x5c>
    33fe:	015c      	lsls	r4, r3, #5
    3400:	6805      	ldr	r5, [r0, #0]
    3402:	46ac      	mov	ip, r5
    3404:	4464      	add	r4, ip
    3406:	3409      	adds	r4, #9
    3408:	34ff      	adds	r4, #255	; 0xff
    340a:	2501      	movs	r5, #1
    340c:	7025      	strb	r5, [r4, #0]
    340e:	e7e5      	b.n	33dc <usb_device_endpoint_disable_callback+0x28>
    3410:	015c      	lsls	r4, r3, #5
    3412:	6805      	ldr	r5, [r0, #0]
    3414:	46ac      	mov	ip, r5
    3416:	4464      	add	r4, ip
    3418:	3409      	adds	r4, #9
    341a:	34ff      	adds	r4, #255	; 0xff
    341c:	2502      	movs	r5, #2
    341e:	7025      	strb	r5, [r4, #0]
    3420:	e7dc      	b.n	33dc <usb_device_endpoint_disable_callback+0x28>
    3422:	2a01      	cmp	r2, #1
    3424:	d11a      	bne.n	345c <usb_device_endpoint_disable_callback+0xa8>
    3426:	2b00      	cmp	r3, #0
    3428:	d105      	bne.n	3436 <usb_device_endpoint_disable_callback+0x82>
    342a:	6802      	ldr	r2, [r0, #0]
    342c:	210c      	movs	r1, #12
    342e:	3309      	adds	r3, #9
    3430:	33ff      	adds	r3, #255	; 0xff
    3432:	54d1      	strb	r1, [r2, r3]
    3434:	e7de      	b.n	33f4 <usb_device_endpoint_disable_callback+0x40>
    3436:	b249      	sxtb	r1, r1
    3438:	2900      	cmp	r1, #0
    343a:	db07      	blt.n	344c <usb_device_endpoint_disable_callback+0x98>
    343c:	6802      	ldr	r2, [r0, #0]
    343e:	015b      	lsls	r3, r3, #5
    3440:	18d3      	adds	r3, r2, r3
    3442:	3309      	adds	r3, #9
    3444:	33ff      	adds	r3, #255	; 0xff
    3446:	2204      	movs	r2, #4
    3448:	701a      	strb	r2, [r3, #0]
    344a:	e7d3      	b.n	33f4 <usb_device_endpoint_disable_callback+0x40>
    344c:	6802      	ldr	r2, [r0, #0]
    344e:	015b      	lsls	r3, r3, #5
    3450:	18d3      	adds	r3, r2, r3
    3452:	3309      	adds	r3, #9
    3454:	33ff      	adds	r3, #255	; 0xff
    3456:	2208      	movs	r2, #8
    3458:	701a      	strb	r2, [r3, #0]
    345a:	e7cb      	b.n	33f4 <usb_device_endpoint_disable_callback+0x40>
    345c:	2a02      	cmp	r2, #2
    345e:	d1bd      	bne.n	33dc <usb_device_endpoint_disable_callback+0x28>
    3460:	6802      	ldr	r2, [r0, #0]
    3462:	015b      	lsls	r3, r3, #5
    3464:	18d3      	adds	r3, r2, r3
    3466:	3309      	adds	r3, #9
    3468:	33ff      	adds	r3, #255	; 0xff
    346a:	2210      	movs	r2, #16
    346c:	701a      	strb	r2, [r3, #0]
    346e:	e7c1      	b.n	33f4 <usb_device_endpoint_disable_callback+0x40>
    3470:	6802      	ldr	r2, [r0, #0]
    3472:	015b      	lsls	r3, r3, #5
    3474:	18d3      	adds	r3, r2, r3
    3476:	3309      	adds	r3, #9
    3478:	33ff      	adds	r3, #255	; 0xff
    347a:	2240      	movs	r2, #64	; 0x40
    347c:	701a      	strb	r2, [r3, #0]
    347e:	e7b9      	b.n	33f4 <usb_device_endpoint_disable_callback+0x40>
    3480:	00004a20 	.word	0x00004a20

00003484 <usb_device_endpoint_get_config_defaults>:
    3484:	2300      	movs	r3, #0
    3486:	7003      	strb	r3, [r0, #0]
    3488:	7043      	strb	r3, [r0, #1]
    348a:	7083      	strb	r3, [r0, #2]
    348c:	3301      	adds	r3, #1
    348e:	70c3      	strb	r3, [r0, #3]
    3490:	4770      	bx	lr
	...

00003494 <usb_device_endpoint_set_config>:
    3494:	b5f0      	push	{r4, r5, r6, r7, lr}
    3496:	780c      	ldrb	r4, [r1, #0]
    3498:	230f      	movs	r3, #15
    349a:	4023      	ands	r3, r4
    349c:	b264      	sxtb	r4, r4
    349e:	78ca      	ldrb	r2, [r1, #3]
    34a0:	2a04      	cmp	r2, #4
    34a2:	d870      	bhi.n	3586 <usb_device_endpoint_set_config+0xf2>
    34a4:	0092      	lsls	r2, r2, #2
    34a6:	4d89      	ldr	r5, [pc, #548]	; (36cc <usb_device_endpoint_set_config+0x238>)
    34a8:	58aa      	ldr	r2, [r5, r2]
    34aa:	4697      	mov	pc, r2
    34ac:	6802      	ldr	r2, [r0, #0]
    34ae:	3308      	adds	r3, #8
    34b0:	015b      	lsls	r3, r3, #5
    34b2:	2100      	movs	r1, #0
    34b4:	5499      	strb	r1, [r3, r2]
    34b6:	2200      	movs	r2, #0
    34b8:	e082      	b.n	35c0 <usb_device_endpoint_set_config+0x12c>
    34ba:	015c      	lsls	r4, r3, #5
    34bc:	6802      	ldr	r2, [r0, #0]
    34be:	4694      	mov	ip, r2
    34c0:	4464      	add	r4, ip
    34c2:	2280      	movs	r2, #128	; 0x80
    34c4:	0052      	lsls	r2, r2, #1
    34c6:	5ca5      	ldrb	r5, [r4, r2]
    34c8:	3ae4      	subs	r2, #228	; 0xe4
    34ca:	076d      	lsls	r5, r5, #29
    34cc:	d178      	bne.n	35c0 <usb_device_endpoint_set_config+0x12c>
    34ce:	32e4      	adds	r2, #228	; 0xe4
    34d0:	5ca6      	ldrb	r6, [r4, r2]
    34d2:	2570      	movs	r5, #112	; 0x70
    34d4:	3ae4      	subs	r2, #228	; 0xe4
    34d6:	422e      	tst	r6, r5
    34d8:	d172      	bne.n	35c0 <usb_device_endpoint_set_config+0x12c>
    34da:	3d5f      	subs	r5, #95	; 0x5f
    34dc:	32e4      	adds	r2, #228	; 0xe4
    34de:	54a5      	strb	r5, [r4, r2]
    34e0:	001a      	movs	r2, r3
    34e2:	3208      	adds	r2, #8
    34e4:	0152      	lsls	r2, r2, #5
    34e6:	6804      	ldr	r4, [r0, #0]
    34e8:	18a4      	adds	r4, r4, r2
    34ea:	352f      	adds	r5, #47	; 0x2f
    34ec:	7165      	strb	r5, [r4, #5]
    34ee:	6800      	ldr	r0, [r0, #0]
    34f0:	1882      	adds	r2, r0, r2
    34f2:	2080      	movs	r0, #128	; 0x80
    34f4:	7110      	strb	r0, [r2, #4]
    34f6:	788a      	ldrb	r2, [r1, #2]
    34f8:	2a00      	cmp	r2, #0
    34fa:	d01f      	beq.n	353c <usb_device_endpoint_set_config+0xa8>
    34fc:	0158      	lsls	r0, r3, #5
    34fe:	4a74      	ldr	r2, [pc, #464]	; (36d0 <usb_device_endpoint_set_config+0x23c>)
    3500:	1812      	adds	r2, r2, r0
    3502:	6854      	ldr	r4, [r2, #4]
    3504:	2080      	movs	r0, #128	; 0x80
    3506:	0600      	lsls	r0, r0, #24
    3508:	4304      	orrs	r4, r0
    350a:	6054      	str	r4, [r2, #4]
    350c:	6954      	ldr	r4, [r2, #20]
    350e:	4320      	orrs	r0, r4
    3510:	6150      	str	r0, [r2, #20]
    3512:	2507      	movs	r5, #7
    3514:	784c      	ldrb	r4, [r1, #1]
    3516:	015a      	lsls	r2, r3, #5
    3518:	4b6d      	ldr	r3, [pc, #436]	; (36d0 <usb_device_endpoint_set_config+0x23c>)
    351a:	189b      	adds	r3, r3, r2
    351c:	6858      	ldr	r0, [r3, #4]
    351e:	402c      	ands	r4, r5
    3520:	0724      	lsls	r4, r4, #28
    3522:	4e6c      	ldr	r6, [pc, #432]	; (36d4 <usb_device_endpoint_set_config+0x240>)
    3524:	4030      	ands	r0, r6
    3526:	4320      	orrs	r0, r4
    3528:	6058      	str	r0, [r3, #4]
    352a:	7849      	ldrb	r1, [r1, #1]
    352c:	695a      	ldr	r2, [r3, #20]
    352e:	4029      	ands	r1, r5
    3530:	0709      	lsls	r1, r1, #28
    3532:	4032      	ands	r2, r6
    3534:	430a      	orrs	r2, r1
    3536:	615a      	str	r2, [r3, #20]
    3538:	2200      	movs	r2, #0
    353a:	e041      	b.n	35c0 <usb_device_endpoint_set_config+0x12c>
    353c:	0158      	lsls	r0, r3, #5
    353e:	4a64      	ldr	r2, [pc, #400]	; (36d0 <usb_device_endpoint_set_config+0x23c>)
    3540:	1812      	adds	r2, r2, r0
    3542:	6850      	ldr	r0, [r2, #4]
    3544:	0040      	lsls	r0, r0, #1
    3546:	0840      	lsrs	r0, r0, #1
    3548:	6050      	str	r0, [r2, #4]
    354a:	6950      	ldr	r0, [r2, #20]
    354c:	0040      	lsls	r0, r0, #1
    354e:	0840      	lsrs	r0, r0, #1
    3550:	6150      	str	r0, [r2, #20]
    3552:	e7de      	b.n	3512 <usb_device_endpoint_set_config+0x7e>
    3554:	2c00      	cmp	r4, #0
    3556:	db35      	blt.n	35c4 <usb_device_endpoint_set_config+0x130>
    3558:	015d      	lsls	r5, r3, #5
    355a:	6802      	ldr	r2, [r0, #0]
    355c:	4694      	mov	ip, r2
    355e:	4465      	add	r5, ip
    3560:	2280      	movs	r2, #128	; 0x80
    3562:	0052      	lsls	r2, r2, #1
    3564:	5cae      	ldrb	r6, [r5, r2]
    3566:	3ae4      	subs	r2, #228	; 0xe4
    3568:	0776      	lsls	r6, r6, #29
    356a:	d129      	bne.n	35c0 <usb_device_endpoint_set_config+0x12c>
    356c:	2680      	movs	r6, #128	; 0x80
    356e:	0076      	lsls	r6, r6, #1
    3570:	5daa      	ldrb	r2, [r5, r6]
    3572:	2702      	movs	r7, #2
    3574:	433a      	orrs	r2, r7
    3576:	55aa      	strb	r2, [r5, r6]
    3578:	6802      	ldr	r2, [r0, #0]
    357a:	0018      	movs	r0, r3
    357c:	3008      	adds	r0, #8
    357e:	0140      	lsls	r0, r0, #5
    3580:	1812      	adds	r2, r2, r0
    3582:	2040      	movs	r0, #64	; 0x40
    3584:	7150      	strb	r0, [r2, #5]
    3586:	0fe2      	lsrs	r2, r4, #31
    3588:	784f      	ldrb	r7, [r1, #1]
    358a:	005d      	lsls	r5, r3, #1
    358c:	18ad      	adds	r5, r5, r2
    358e:	012d      	lsls	r5, r5, #4
    3590:	4e4f      	ldr	r6, [pc, #316]	; (36d0 <usb_device_endpoint_set_config+0x23c>)
    3592:	1975      	adds	r5, r6, r5
    3594:	6868      	ldr	r0, [r5, #4]
    3596:	2407      	movs	r4, #7
    3598:	403c      	ands	r4, r7
    359a:	0724      	lsls	r4, r4, #28
    359c:	4e4d      	ldr	r6, [pc, #308]	; (36d4 <usb_device_endpoint_set_config+0x240>)
    359e:	4030      	ands	r0, r6
    35a0:	4320      	orrs	r0, r4
    35a2:	6068      	str	r0, [r5, #4]
    35a4:	7889      	ldrb	r1, [r1, #2]
    35a6:	2900      	cmp	r1, #0
    35a8:	d000      	beq.n	35ac <usb_device_endpoint_set_config+0x118>
    35aa:	e088      	b.n	36be <usb_device_endpoint_set_config+0x22a>
    35ac:	005b      	lsls	r3, r3, #1
    35ae:	189b      	adds	r3, r3, r2
    35b0:	011b      	lsls	r3, r3, #4
    35b2:	4a47      	ldr	r2, [pc, #284]	; (36d0 <usb_device_endpoint_set_config+0x23c>)
    35b4:	18d3      	adds	r3, r2, r3
    35b6:	685a      	ldr	r2, [r3, #4]
    35b8:	0052      	lsls	r2, r2, #1
    35ba:	0852      	lsrs	r2, r2, #1
    35bc:	605a      	str	r2, [r3, #4]
    35be:	2200      	movs	r2, #0
    35c0:	0010      	movs	r0, r2
    35c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    35c4:	015d      	lsls	r5, r3, #5
    35c6:	6802      	ldr	r2, [r0, #0]
    35c8:	4694      	mov	ip, r2
    35ca:	4465      	add	r5, ip
    35cc:	2280      	movs	r2, #128	; 0x80
    35ce:	0052      	lsls	r2, r2, #1
    35d0:	5caf      	ldrb	r7, [r5, r2]
    35d2:	2670      	movs	r6, #112	; 0x70
    35d4:	3ae4      	subs	r2, #228	; 0xe4
    35d6:	4237      	tst	r7, r6
    35d8:	d1f2      	bne.n	35c0 <usb_device_endpoint_set_config+0x12c>
    35da:	3690      	adds	r6, #144	; 0x90
    35dc:	5daa      	ldrb	r2, [r5, r6]
    35de:	2720      	movs	r7, #32
    35e0:	433a      	orrs	r2, r7
    35e2:	55aa      	strb	r2, [r5, r6]
    35e4:	6802      	ldr	r2, [r0, #0]
    35e6:	0018      	movs	r0, r3
    35e8:	3008      	adds	r0, #8
    35ea:	0140      	lsls	r0, r0, #5
    35ec:	1812      	adds	r2, r2, r0
    35ee:	2080      	movs	r0, #128	; 0x80
    35f0:	7110      	strb	r0, [r2, #4]
    35f2:	e7c8      	b.n	3586 <usb_device_endpoint_set_config+0xf2>
    35f4:	2c00      	cmp	r4, #0
    35f6:	db17      	blt.n	3628 <usb_device_endpoint_set_config+0x194>
    35f8:	015d      	lsls	r5, r3, #5
    35fa:	6802      	ldr	r2, [r0, #0]
    35fc:	4694      	mov	ip, r2
    35fe:	4465      	add	r5, ip
    3600:	2280      	movs	r2, #128	; 0x80
    3602:	0052      	lsls	r2, r2, #1
    3604:	5cae      	ldrb	r6, [r5, r2]
    3606:	3ae4      	subs	r2, #228	; 0xe4
    3608:	0776      	lsls	r6, r6, #29
    360a:	d1d9      	bne.n	35c0 <usb_device_endpoint_set_config+0x12c>
    360c:	2680      	movs	r6, #128	; 0x80
    360e:	0076      	lsls	r6, r6, #1
    3610:	5daa      	ldrb	r2, [r5, r6]
    3612:	2703      	movs	r7, #3
    3614:	433a      	orrs	r2, r7
    3616:	55aa      	strb	r2, [r5, r6]
    3618:	6802      	ldr	r2, [r0, #0]
    361a:	0018      	movs	r0, r3
    361c:	3008      	adds	r0, #8
    361e:	0140      	lsls	r0, r0, #5
    3620:	1812      	adds	r2, r2, r0
    3622:	2040      	movs	r0, #64	; 0x40
    3624:	7150      	strb	r0, [r2, #5]
    3626:	e7ae      	b.n	3586 <usb_device_endpoint_set_config+0xf2>
    3628:	015d      	lsls	r5, r3, #5
    362a:	6802      	ldr	r2, [r0, #0]
    362c:	4694      	mov	ip, r2
    362e:	4465      	add	r5, ip
    3630:	2280      	movs	r2, #128	; 0x80
    3632:	0052      	lsls	r2, r2, #1
    3634:	5caf      	ldrb	r7, [r5, r2]
    3636:	2670      	movs	r6, #112	; 0x70
    3638:	3ae4      	subs	r2, #228	; 0xe4
    363a:	4237      	tst	r7, r6
    363c:	d1c0      	bne.n	35c0 <usb_device_endpoint_set_config+0x12c>
    363e:	3690      	adds	r6, #144	; 0x90
    3640:	5daa      	ldrb	r2, [r5, r6]
    3642:	2730      	movs	r7, #48	; 0x30
    3644:	433a      	orrs	r2, r7
    3646:	55aa      	strb	r2, [r5, r6]
    3648:	6802      	ldr	r2, [r0, #0]
    364a:	0018      	movs	r0, r3
    364c:	3008      	adds	r0, #8
    364e:	0140      	lsls	r0, r0, #5
    3650:	1812      	adds	r2, r2, r0
    3652:	2080      	movs	r0, #128	; 0x80
    3654:	7110      	strb	r0, [r2, #4]
    3656:	e796      	b.n	3586 <usb_device_endpoint_set_config+0xf2>
    3658:	2c00      	cmp	r4, #0
    365a:	db17      	blt.n	368c <usb_device_endpoint_set_config+0x1f8>
    365c:	015d      	lsls	r5, r3, #5
    365e:	6802      	ldr	r2, [r0, #0]
    3660:	4694      	mov	ip, r2
    3662:	4465      	add	r5, ip
    3664:	2280      	movs	r2, #128	; 0x80
    3666:	0052      	lsls	r2, r2, #1
    3668:	5cae      	ldrb	r6, [r5, r2]
    366a:	3ae4      	subs	r2, #228	; 0xe4
    366c:	0776      	lsls	r6, r6, #29
    366e:	d1a7      	bne.n	35c0 <usb_device_endpoint_set_config+0x12c>
    3670:	2680      	movs	r6, #128	; 0x80
    3672:	0076      	lsls	r6, r6, #1
    3674:	5daa      	ldrb	r2, [r5, r6]
    3676:	2704      	movs	r7, #4
    3678:	433a      	orrs	r2, r7
    367a:	55aa      	strb	r2, [r5, r6]
    367c:	6802      	ldr	r2, [r0, #0]
    367e:	0018      	movs	r0, r3
    3680:	3008      	adds	r0, #8
    3682:	0140      	lsls	r0, r0, #5
    3684:	1812      	adds	r2, r2, r0
    3686:	2040      	movs	r0, #64	; 0x40
    3688:	7150      	strb	r0, [r2, #5]
    368a:	e77c      	b.n	3586 <usb_device_endpoint_set_config+0xf2>
    368c:	015d      	lsls	r5, r3, #5
    368e:	6802      	ldr	r2, [r0, #0]
    3690:	4694      	mov	ip, r2
    3692:	4465      	add	r5, ip
    3694:	2280      	movs	r2, #128	; 0x80
    3696:	0052      	lsls	r2, r2, #1
    3698:	5caf      	ldrb	r7, [r5, r2]
    369a:	2670      	movs	r6, #112	; 0x70
    369c:	3ae4      	subs	r2, #228	; 0xe4
    369e:	4237      	tst	r7, r6
    36a0:	d000      	beq.n	36a4 <usb_device_endpoint_set_config+0x210>
    36a2:	e78d      	b.n	35c0 <usb_device_endpoint_set_config+0x12c>
    36a4:	3690      	adds	r6, #144	; 0x90
    36a6:	5daa      	ldrb	r2, [r5, r6]
    36a8:	2740      	movs	r7, #64	; 0x40
    36aa:	433a      	orrs	r2, r7
    36ac:	55aa      	strb	r2, [r5, r6]
    36ae:	6802      	ldr	r2, [r0, #0]
    36b0:	0018      	movs	r0, r3
    36b2:	3008      	adds	r0, #8
    36b4:	0140      	lsls	r0, r0, #5
    36b6:	1812      	adds	r2, r2, r0
    36b8:	2080      	movs	r0, #128	; 0x80
    36ba:	7110      	strb	r0, [r2, #4]
    36bc:	e763      	b.n	3586 <usb_device_endpoint_set_config+0xf2>
    36be:	6869      	ldr	r1, [r5, #4]
    36c0:	2380      	movs	r3, #128	; 0x80
    36c2:	061b      	lsls	r3, r3, #24
    36c4:	430b      	orrs	r3, r1
    36c6:	606b      	str	r3, [r5, #4]
    36c8:	2200      	movs	r2, #0
    36ca:	e779      	b.n	35c0 <usb_device_endpoint_set_config+0x12c>
    36cc:	000049fc 	.word	0x000049fc
    36d0:	20000624 	.word	0x20000624
    36d4:	8fffffff 	.word	0x8fffffff

000036d8 <usb_device_endpoint_abort_job>:
    36d8:	230f      	movs	r3, #15
    36da:	400b      	ands	r3, r1
    36dc:	b249      	sxtb	r1, r1
    36de:	2900      	cmp	r1, #0
    36e0:	db0a      	blt.n	36f8 <usb_device_endpoint_abort_job+0x20>
    36e2:	3308      	adds	r3, #8
    36e4:	015b      	lsls	r3, r3, #5
    36e6:	6802      	ldr	r2, [r0, #0]
    36e8:	18d2      	adds	r2, r2, r3
    36ea:	2140      	movs	r1, #64	; 0x40
    36ec:	7151      	strb	r1, [r2, #5]
    36ee:	6802      	ldr	r2, [r0, #0]
    36f0:	18d3      	adds	r3, r2, r3
    36f2:	2201      	movs	r2, #1
    36f4:	71da      	strb	r2, [r3, #7]
    36f6:	4770      	bx	lr
    36f8:	3308      	adds	r3, #8
    36fa:	015b      	lsls	r3, r3, #5
    36fc:	6802      	ldr	r2, [r0, #0]
    36fe:	18d2      	adds	r2, r2, r3
    3700:	2180      	movs	r1, #128	; 0x80
    3702:	7111      	strb	r1, [r2, #4]
    3704:	6802      	ldr	r2, [r0, #0]
    3706:	18d3      	adds	r3, r2, r3
    3708:	2202      	movs	r2, #2
    370a:	71da      	strb	r2, [r3, #7]
    370c:	e7f3      	b.n	36f6 <usb_device_endpoint_abort_job+0x1e>

0000370e <usb_device_endpoint_is_halted>:
    370e:	230f      	movs	r3, #15
    3710:	400b      	ands	r3, r1
    3712:	b249      	sxtb	r1, r1
    3714:	2900      	cmp	r1, #0
    3716:	db07      	blt.n	3728 <usb_device_endpoint_is_halted+0x1a>
    3718:	6802      	ldr	r2, [r0, #0]
    371a:	3308      	adds	r3, #8
    371c:	015b      	lsls	r3, r3, #5
    371e:	18d3      	adds	r3, r2, r3
    3720:	7998      	ldrb	r0, [r3, #6]
    3722:	06c0      	lsls	r0, r0, #27
    3724:	0fc0      	lsrs	r0, r0, #31
    3726:	4770      	bx	lr
    3728:	6802      	ldr	r2, [r0, #0]
    372a:	3308      	adds	r3, #8
    372c:	015b      	lsls	r3, r3, #5
    372e:	18d3      	adds	r3, r2, r3
    3730:	7998      	ldrb	r0, [r3, #6]
    3732:	0680      	lsls	r0, r0, #26
    3734:	0fc0      	lsrs	r0, r0, #31
    3736:	e7f6      	b.n	3726 <usb_device_endpoint_is_halted+0x18>

00003738 <usb_device_endpoint_set_halt>:
    3738:	230f      	movs	r3, #15
    373a:	400b      	ands	r3, r1
    373c:	b249      	sxtb	r1, r1
    373e:	2900      	cmp	r1, #0
    3740:	db06      	blt.n	3750 <usb_device_endpoint_set_halt+0x18>
    3742:	6802      	ldr	r2, [r0, #0]
    3744:	3308      	adds	r3, #8
    3746:	015b      	lsls	r3, r3, #5
    3748:	18d3      	adds	r3, r2, r3
    374a:	2210      	movs	r2, #16
    374c:	715a      	strb	r2, [r3, #5]
    374e:	4770      	bx	lr
    3750:	6802      	ldr	r2, [r0, #0]
    3752:	3308      	adds	r3, #8
    3754:	015b      	lsls	r3, r3, #5
    3756:	18d3      	adds	r3, r2, r3
    3758:	2220      	movs	r2, #32
    375a:	715a      	strb	r2, [r3, #5]
    375c:	e7f7      	b.n	374e <usb_device_endpoint_set_halt+0x16>

0000375e <usb_device_endpoint_clear_halt>:
    375e:	b530      	push	{r4, r5, lr}
    3760:	230f      	movs	r3, #15
    3762:	400b      	ands	r3, r1
    3764:	b249      	sxtb	r1, r1
    3766:	2900      	cmp	r1, #0
    3768:	db1d      	blt.n	37a6 <usb_device_endpoint_clear_halt+0x48>
    376a:	0159      	lsls	r1, r3, #5
    376c:	6802      	ldr	r2, [r0, #0]
    376e:	1852      	adds	r2, r2, r1
    3770:	2483      	movs	r4, #131	; 0x83
    3772:	0064      	lsls	r4, r4, #1
    3774:	5d14      	ldrb	r4, [r2, r4]
    3776:	06e4      	lsls	r4, r4, #27
    3778:	d514      	bpl.n	37a4 <usb_device_endpoint_clear_halt+0x46>
    377a:	2510      	movs	r5, #16
    377c:	2482      	movs	r4, #130	; 0x82
    377e:	0064      	lsls	r4, r4, #1
    3780:	5515      	strb	r5, [r2, r4]
    3782:	6802      	ldr	r2, [r0, #0]
    3784:	1852      	adds	r2, r2, r1
    3786:	2108      	movs	r1, #8
    3788:	31ff      	adds	r1, #255	; 0xff
    378a:	5c51      	ldrb	r1, [r2, r1]
    378c:	0689      	lsls	r1, r1, #26
    378e:	d509      	bpl.n	37a4 <usb_device_endpoint_clear_halt+0x46>
    3790:	3ce4      	subs	r4, #228	; 0xe4
    3792:	2108      	movs	r1, #8
    3794:	31ff      	adds	r1, #255	; 0xff
    3796:	5454      	strb	r4, [r2, r1]
    3798:	6802      	ldr	r2, [r0, #0]
    379a:	3308      	adds	r3, #8
    379c:	015b      	lsls	r3, r3, #5
    379e:	18d3      	adds	r3, r2, r3
    37a0:	2201      	movs	r2, #1
    37a2:	711a      	strb	r2, [r3, #4]
    37a4:	bd30      	pop	{r4, r5, pc}
    37a6:	0159      	lsls	r1, r3, #5
    37a8:	6802      	ldr	r2, [r0, #0]
    37aa:	1852      	adds	r2, r2, r1
    37ac:	2483      	movs	r4, #131	; 0x83
    37ae:	0064      	lsls	r4, r4, #1
    37b0:	5d14      	ldrb	r4, [r2, r4]
    37b2:	06a4      	lsls	r4, r4, #26
    37b4:	d5f6      	bpl.n	37a4 <usb_device_endpoint_clear_halt+0x46>
    37b6:	2520      	movs	r5, #32
    37b8:	2482      	movs	r4, #130	; 0x82
    37ba:	0064      	lsls	r4, r4, #1
    37bc:	5515      	strb	r5, [r2, r4]
    37be:	6802      	ldr	r2, [r0, #0]
    37c0:	1852      	adds	r2, r2, r1
    37c2:	2108      	movs	r1, #8
    37c4:	31ff      	adds	r1, #255	; 0xff
    37c6:	5c51      	ldrb	r1, [r2, r1]
    37c8:	0649      	lsls	r1, r1, #25
    37ca:	d5eb      	bpl.n	37a4 <usb_device_endpoint_clear_halt+0x46>
    37cc:	3cc4      	subs	r4, #196	; 0xc4
    37ce:	2108      	movs	r1, #8
    37d0:	31ff      	adds	r1, #255	; 0xff
    37d2:	5454      	strb	r4, [r2, r1]
    37d4:	6802      	ldr	r2, [r0, #0]
    37d6:	3308      	adds	r3, #8
    37d8:	015b      	lsls	r3, r3, #5
    37da:	18d3      	adds	r3, r2, r3
    37dc:	2202      	movs	r2, #2
    37de:	711a      	strb	r2, [r3, #4]
    37e0:	e7e0      	b.n	37a4 <usb_device_endpoint_clear_halt+0x46>
	...

000037e4 <usb_device_endpoint_write_buffer_job>:
    37e4:	b530      	push	{r4, r5, lr}
    37e6:	000c      	movs	r4, r1
    37e8:	3408      	adds	r4, #8
    37ea:	0164      	lsls	r4, r4, #5
    37ec:	6805      	ldr	r5, [r0, #0]
    37ee:	5d64      	ldrb	r4, [r4, r5]
    37f0:	0664      	lsls	r4, r4, #25
    37f2:	0f64      	lsrs	r4, r4, #29
    37f4:	251c      	movs	r5, #28
    37f6:	2c00      	cmp	r4, #0
    37f8:	d101      	bne.n	37fe <usb_device_endpoint_write_buffer_job+0x1a>
    37fa:	0028      	movs	r0, r5
    37fc:	bd30      	pop	{r4, r5, pc}
    37fe:	014c      	lsls	r4, r1, #5
    3800:	4d0b      	ldr	r5, [pc, #44]	; (3830 <usb_device_endpoint_write_buffer_job+0x4c>)
    3802:	192d      	adds	r5, r5, r4
    3804:	002c      	movs	r4, r5
    3806:	612a      	str	r2, [r5, #16]
    3808:	696a      	ldr	r2, [r5, #20]
    380a:	4d0a      	ldr	r5, [pc, #40]	; (3834 <usb_device_endpoint_write_buffer_job+0x50>)
    380c:	402a      	ands	r2, r5
    380e:	6162      	str	r2, [r4, #20]
    3810:	6962      	ldr	r2, [r4, #20]
    3812:	049b      	lsls	r3, r3, #18
    3814:	0c9b      	lsrs	r3, r3, #18
    3816:	0b92      	lsrs	r2, r2, #14
    3818:	0392      	lsls	r2, r2, #14
    381a:	4313      	orrs	r3, r2
    381c:	6163      	str	r3, [r4, #20]
    381e:	6803      	ldr	r3, [r0, #0]
    3820:	3108      	adds	r1, #8
    3822:	0149      	lsls	r1, r1, #5
    3824:	1859      	adds	r1, r3, r1
    3826:	2380      	movs	r3, #128	; 0x80
    3828:	714b      	strb	r3, [r1, #5]
    382a:	2500      	movs	r5, #0
    382c:	e7e5      	b.n	37fa <usb_device_endpoint_write_buffer_job+0x16>
    382e:	46c0      	nop			; (mov r8, r8)
    3830:	20000624 	.word	0x20000624
    3834:	f0003fff 	.word	0xf0003fff

00003838 <usb_device_endpoint_read_buffer_job>:
    3838:	b530      	push	{r4, r5, lr}
    383a:	000c      	movs	r4, r1
    383c:	3408      	adds	r4, #8
    383e:	0164      	lsls	r4, r4, #5
    3840:	6805      	ldr	r5, [r0, #0]
    3842:	5d64      	ldrb	r4, [r4, r5]
    3844:	0764      	lsls	r4, r4, #29
    3846:	251c      	movs	r5, #28
    3848:	2c00      	cmp	r4, #0
    384a:	d101      	bne.n	3850 <usb_device_endpoint_read_buffer_job+0x18>
    384c:	0028      	movs	r0, r5
    384e:	bd30      	pop	{r4, r5, pc}
    3850:	4c0b      	ldr	r4, [pc, #44]	; (3880 <usb_device_endpoint_read_buffer_job+0x48>)
    3852:	014d      	lsls	r5, r1, #5
    3854:	512a      	str	r2, [r5, r4]
    3856:	1962      	adds	r2, r4, r5
    3858:	6854      	ldr	r4, [r2, #4]
    385a:	049b      	lsls	r3, r3, #18
    385c:	091b      	lsrs	r3, r3, #4
    385e:	4d09      	ldr	r5, [pc, #36]	; (3884 <usb_device_endpoint_read_buffer_job+0x4c>)
    3860:	402c      	ands	r4, r5
    3862:	4323      	orrs	r3, r4
    3864:	6053      	str	r3, [r2, #4]
    3866:	6853      	ldr	r3, [r2, #4]
    3868:	0b9b      	lsrs	r3, r3, #14
    386a:	039b      	lsls	r3, r3, #14
    386c:	6053      	str	r3, [r2, #4]
    386e:	6803      	ldr	r3, [r0, #0]
    3870:	3108      	adds	r1, #8
    3872:	0149      	lsls	r1, r1, #5
    3874:	1859      	adds	r1, r3, r1
    3876:	2340      	movs	r3, #64	; 0x40
    3878:	710b      	strb	r3, [r1, #4]
    387a:	2500      	movs	r5, #0
    387c:	e7e6      	b.n	384c <usb_device_endpoint_read_buffer_job+0x14>
    387e:	46c0      	nop			; (mov r8, r8)
    3880:	20000624 	.word	0x20000624
    3884:	f0003fff 	.word	0xf0003fff

00003888 <usb_device_endpoint_setup_buffer_job>:
    3888:	4b09      	ldr	r3, [pc, #36]	; (38b0 <usb_device_endpoint_setup_buffer_job+0x28>)
    388a:	6019      	str	r1, [r3, #0]
    388c:	685a      	ldr	r2, [r3, #4]
    388e:	4909      	ldr	r1, [pc, #36]	; (38b4 <usb_device_endpoint_setup_buffer_job+0x2c>)
    3890:	4011      	ands	r1, r2
    3892:	2280      	movs	r2, #128	; 0x80
    3894:	0292      	lsls	r2, r2, #10
    3896:	430a      	orrs	r2, r1
    3898:	605a      	str	r2, [r3, #4]
    389a:	685a      	ldr	r2, [r3, #4]
    389c:	0b92      	lsrs	r2, r2, #14
    389e:	0392      	lsls	r2, r2, #14
    38a0:	605a      	str	r2, [r3, #4]
    38a2:	6802      	ldr	r2, [r0, #0]
    38a4:	2140      	movs	r1, #64	; 0x40
    38a6:	2382      	movs	r3, #130	; 0x82
    38a8:	005b      	lsls	r3, r3, #1
    38aa:	54d1      	strb	r1, [r2, r3]
    38ac:	2000      	movs	r0, #0
    38ae:	4770      	bx	lr
    38b0:	20000624 	.word	0x20000624
    38b4:	f0003fff 	.word	0xf0003fff

000038b8 <usb_enable>:
    38b8:	6802      	ldr	r2, [r0, #0]
    38ba:	7813      	ldrb	r3, [r2, #0]
    38bc:	2102      	movs	r1, #2
    38be:	430b      	orrs	r3, r1
    38c0:	7013      	strb	r3, [r2, #0]
    38c2:	6802      	ldr	r2, [r0, #0]
    38c4:	7893      	ldrb	r3, [r2, #2]
    38c6:	2b02      	cmp	r3, #2
    38c8:	d0fc      	beq.n	38c4 <usb_enable+0xc>
    38ca:	4770      	bx	lr

000038cc <USB_Handler>:
    38cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    38ce:	46de      	mov	lr, fp
    38d0:	4657      	mov	r7, sl
    38d2:	464e      	mov	r6, r9
    38d4:	4645      	mov	r5, r8
    38d6:	b5e0      	push	{r5, r6, r7, lr}
    38d8:	b083      	sub	sp, #12
    38da:	4bc2      	ldr	r3, [pc, #776]	; (3be4 <USB_Handler+0x318>)
    38dc:	681f      	ldr	r7, [r3, #0]
    38de:	683d      	ldr	r5, [r7, #0]
    38e0:	782b      	ldrb	r3, [r5, #0]
    38e2:	09db      	lsrs	r3, r3, #7
    38e4:	d114      	bne.n	3910 <USB_Handler+0x44>
    38e6:	8c2e      	ldrh	r6, [r5, #32]
    38e8:	b2b6      	uxth	r6, r6
    38ea:	2e00      	cmp	r6, #0
    38ec:	d000      	beq.n	38f0 <USB_Handler+0x24>
    38ee:	e1a9      	b.n	3c44 <USB_Handler+0x378>
    38f0:	8bae      	ldrh	r6, [r5, #28]
    38f2:	b2b6      	uxth	r6, r6
    38f4:	23ab      	movs	r3, #171	; 0xab
    38f6:	005b      	lsls	r3, r3, #1
    38f8:	5afb      	ldrh	r3, [r7, r3]
    38fa:	22aa      	movs	r2, #170	; 0xaa
    38fc:	0052      	lsls	r2, r2, #1
    38fe:	5abd      	ldrh	r5, [r7, r2]
    3900:	401d      	ands	r5, r3
    3902:	4035      	ands	r5, r6
    3904:	2400      	movs	r4, #0
    3906:	4fb8      	ldr	r7, [pc, #736]	; (3be8 <USB_Handler+0x31c>)
    3908:	4bb6      	ldr	r3, [pc, #728]	; (3be4 <USB_Handler+0x318>)
    390a:	4699      	mov	r9, r3
    390c:	4698      	mov	r8, r3
    390e:	e184      	b.n	3c1a <USB_Handler+0x34e>
    3910:	8c2b      	ldrh	r3, [r5, #32]
    3912:	b29b      	uxth	r3, r3
    3914:	2b00      	cmp	r3, #0
    3916:	d100      	bne.n	391a <USB_Handler+0x4e>
    3918:	e0de      	b.n	3ad8 <USB_Handler+0x20c>
    391a:	8c28      	ldrh	r0, [r5, #32]
    391c:	b280      	uxth	r0, r0
    391e:	4bb3      	ldr	r3, [pc, #716]	; (3bec <USB_Handler+0x320>)
    3920:	4798      	blx	r3
    3922:	0004      	movs	r4, r0
    3924:	281f      	cmp	r0, #31
    3926:	d900      	bls.n	392a <USB_Handler+0x5e>
    3928:	e0d6      	b.n	3ad8 <USB_Handler+0x20c>
    392a:	0003      	movs	r3, r0
    392c:	3308      	adds	r3, #8
    392e:	015b      	lsls	r3, r3, #5
    3930:	18ed      	adds	r5, r5, r3
    3932:	79ed      	ldrb	r5, [r5, #7]
    3934:	b2ed      	uxtb	r5, r5
    3936:	07ab      	lsls	r3, r5, #30
    3938:	d041      	beq.n	39be <USB_Handler+0xf2>
    393a:	4aad      	ldr	r2, [pc, #692]	; (3bf0 <USB_Handler+0x324>)
    393c:	2301      	movs	r3, #1
    393e:	4083      	lsls	r3, r0
    3940:	6811      	ldr	r1, [r2, #0]
    3942:	4399      	bics	r1, r3
    3944:	6011      	str	r1, [r2, #0]
    3946:	0003      	movs	r3, r0
    3948:	3308      	adds	r3, #8
    394a:	015b      	lsls	r3, r3, #5
    394c:	683a      	ldr	r2, [r7, #0]
    394e:	4694      	mov	ip, r2
    3950:	4463      	add	r3, ip
    3952:	2203      	movs	r2, #3
    3954:	71da      	strb	r2, [r3, #7]
    3956:	183b      	adds	r3, r7, r0
    3958:	33ae      	adds	r3, #174	; 0xae
    395a:	781b      	ldrb	r3, [r3, #0]
    395c:	07db      	lsls	r3, r3, #31
    395e:	d52e      	bpl.n	39be <USB_Handler+0xf2>
    3960:	4ba4      	ldr	r3, [pc, #656]	; (3bf4 <USB_Handler+0x328>)
    3962:	7018      	strb	r0, [r3, #0]
    3964:	683a      	ldr	r2, [r7, #0]
    3966:	0003      	movs	r3, r0
    3968:	3308      	adds	r3, #8
    396a:	015b      	lsls	r3, r3, #5
    396c:	5c9b      	ldrb	r3, [r3, r2]
    396e:	079b      	lsls	r3, r3, #30
    3970:	0f9b      	lsrs	r3, r3, #30
    3972:	2b01      	cmp	r3, #1
    3974:	d100      	bne.n	3978 <USB_Handler+0xac>
    3976:	e081      	b.n	3a7c <USB_Handler+0x1b0>
    3978:	0142      	lsls	r2, r0, #5
    397a:	4b9f      	ldr	r3, [pc, #636]	; (3bf8 <USB_Handler+0x32c>)
    397c:	189b      	adds	r3, r3, r2
    397e:	685a      	ldr	r2, [r3, #4]
    3980:	0112      	lsls	r2, r2, #4
    3982:	0c92      	lsrs	r2, r2, #18
    3984:	b290      	uxth	r0, r2
    3986:	499b      	ldr	r1, [pc, #620]	; (3bf4 <USB_Handler+0x328>)
    3988:	804a      	strh	r2, [r1, #2]
    398a:	685a      	ldr	r2, [r3, #4]
    398c:	0492      	lsls	r2, r2, #18
    398e:	0c92      	lsrs	r2, r2, #18
    3990:	808a      	strh	r2, [r1, #4]
    3992:	685a      	ldr	r2, [r3, #4]
    3994:	4999      	ldr	r1, [pc, #612]	; (3bfc <USB_Handler+0x330>)
    3996:	400a      	ands	r2, r1
    3998:	605a      	str	r2, [r3, #4]
    399a:	2800      	cmp	r0, #0
    399c:	d107      	bne.n	39ae <USB_Handler+0xe2>
    399e:	0162      	lsls	r2, r4, #5
    39a0:	4b95      	ldr	r3, [pc, #596]	; (3bf8 <USB_Handler+0x32c>)
    39a2:	189b      	adds	r3, r3, r2
    39a4:	685b      	ldr	r3, [r3, #4]
    39a6:	049b      	lsls	r3, r3, #18
    39a8:	0c9b      	lsrs	r3, r3, #18
    39aa:	4a92      	ldr	r2, [pc, #584]	; (3bf4 <USB_Handler+0x328>)
    39ac:	8053      	strh	r3, [r2, #2]
    39ae:	4b8d      	ldr	r3, [pc, #564]	; (3be4 <USB_Handler+0x318>)
    39b0:	6818      	ldr	r0, [r3, #0]
    39b2:	1ca3      	adds	r3, r4, #2
    39b4:	011b      	lsls	r3, r3, #4
    39b6:	18c3      	adds	r3, r0, r3
    39b8:	685b      	ldr	r3, [r3, #4]
    39ba:	498e      	ldr	r1, [pc, #568]	; (3bf4 <USB_Handler+0x328>)
    39bc:	4798      	blx	r3
    39be:	076b      	lsls	r3, r5, #29
    39c0:	d50e      	bpl.n	39e0 <USB_Handler+0x114>
    39c2:	4a8b      	ldr	r2, [pc, #556]	; (3bf0 <USB_Handler+0x324>)
    39c4:	2301      	movs	r3, #1
    39c6:	40a3      	lsls	r3, r4
    39c8:	6811      	ldr	r1, [r2, #0]
    39ca:	4399      	bics	r1, r3
    39cc:	6011      	str	r1, [r2, #0]
    39ce:	4b85      	ldr	r3, [pc, #532]	; (3be4 <USB_Handler+0x318>)
    39d0:	681b      	ldr	r3, [r3, #0]
    39d2:	681b      	ldr	r3, [r3, #0]
    39d4:	0022      	movs	r2, r4
    39d6:	3208      	adds	r2, #8
    39d8:	0152      	lsls	r2, r2, #5
    39da:	189b      	adds	r3, r3, r2
    39dc:	2204      	movs	r2, #4
    39de:	71da      	strb	r2, [r3, #7]
    39e0:	072b      	lsls	r3, r5, #28
    39e2:	d514      	bpl.n	3a0e <USB_Handler+0x142>
    39e4:	4a82      	ldr	r2, [pc, #520]	; (3bf0 <USB_Handler+0x324>)
    39e6:	2301      	movs	r3, #1
    39e8:	40a3      	lsls	r3, r4
    39ea:	6811      	ldr	r1, [r2, #0]
    39ec:	4399      	bics	r1, r3
    39ee:	6011      	str	r1, [r2, #0]
    39f0:	4b7c      	ldr	r3, [pc, #496]	; (3be4 <USB_Handler+0x318>)
    39f2:	6818      	ldr	r0, [r3, #0]
    39f4:	0023      	movs	r3, r4
    39f6:	3308      	adds	r3, #8
    39f8:	015b      	lsls	r3, r3, #5
    39fa:	6802      	ldr	r2, [r0, #0]
    39fc:	4694      	mov	ip, r2
    39fe:	4463      	add	r3, ip
    3a00:	2208      	movs	r2, #8
    3a02:	71da      	strb	r2, [r3, #7]
    3a04:	1903      	adds	r3, r0, r4
    3a06:	33ae      	adds	r3, #174	; 0xae
    3a08:	781b      	ldrb	r3, [r3, #0]
    3a0a:	079b      	lsls	r3, r3, #30
    3a0c:	d447      	bmi.n	3a9e <USB_Handler+0x1d2>
    3a0e:	06eb      	lsls	r3, r5, #27
    3a10:	d514      	bpl.n	3a3c <USB_Handler+0x170>
    3a12:	4a77      	ldr	r2, [pc, #476]	; (3bf0 <USB_Handler+0x324>)
    3a14:	2301      	movs	r3, #1
    3a16:	40a3      	lsls	r3, r4
    3a18:	6811      	ldr	r1, [r2, #0]
    3a1a:	4399      	bics	r1, r3
    3a1c:	6011      	str	r1, [r2, #0]
    3a1e:	4b71      	ldr	r3, [pc, #452]	; (3be4 <USB_Handler+0x318>)
    3a20:	6818      	ldr	r0, [r3, #0]
    3a22:	0023      	movs	r3, r4
    3a24:	3308      	adds	r3, #8
    3a26:	015b      	lsls	r3, r3, #5
    3a28:	6802      	ldr	r2, [r0, #0]
    3a2a:	4694      	mov	ip, r2
    3a2c:	4463      	add	r3, ip
    3a2e:	2210      	movs	r2, #16
    3a30:	71da      	strb	r2, [r3, #7]
    3a32:	1903      	adds	r3, r0, r4
    3a34:	33ae      	adds	r3, #174	; 0xae
    3a36:	781b      	ldrb	r3, [r3, #0]
    3a38:	075b      	lsls	r3, r3, #29
    3a3a:	d43e      	bmi.n	3aba <USB_Handler+0x1ee>
    3a3c:	06ab      	lsls	r3, r5, #26
    3a3e:	d400      	bmi.n	3a42 <USB_Handler+0x176>
    3a40:	e0b0      	b.n	3ba4 <USB_Handler+0x2d8>
    3a42:	4a6b      	ldr	r2, [pc, #428]	; (3bf0 <USB_Handler+0x324>)
    3a44:	2301      	movs	r3, #1
    3a46:	40a3      	lsls	r3, r4
    3a48:	6811      	ldr	r1, [r2, #0]
    3a4a:	4399      	bics	r1, r3
    3a4c:	6011      	str	r1, [r2, #0]
    3a4e:	4b65      	ldr	r3, [pc, #404]	; (3be4 <USB_Handler+0x318>)
    3a50:	6818      	ldr	r0, [r3, #0]
    3a52:	0023      	movs	r3, r4
    3a54:	3308      	adds	r3, #8
    3a56:	015b      	lsls	r3, r3, #5
    3a58:	6802      	ldr	r2, [r0, #0]
    3a5a:	4694      	mov	ip, r2
    3a5c:	4463      	add	r3, ip
    3a5e:	2220      	movs	r2, #32
    3a60:	71da      	strb	r2, [r3, #7]
    3a62:	1903      	adds	r3, r0, r4
    3a64:	33ae      	adds	r3, #174	; 0xae
    3a66:	781b      	ldrb	r3, [r3, #0]
    3a68:	071b      	lsls	r3, r3, #28
    3a6a:	d400      	bmi.n	3a6e <USB_Handler+0x1a2>
    3a6c:	e09a      	b.n	3ba4 <USB_Handler+0x2d8>
    3a6e:	4961      	ldr	r1, [pc, #388]	; (3bf4 <USB_Handler+0x328>)
    3a70:	700c      	strb	r4, [r1, #0]
    3a72:	0124      	lsls	r4, r4, #4
    3a74:	1904      	adds	r4, r0, r4
    3a76:	6b23      	ldr	r3, [r4, #48]	; 0x30
    3a78:	4798      	blx	r3
    3a7a:	e093      	b.n	3ba4 <USB_Handler+0x2d8>
    3a7c:	0142      	lsls	r2, r0, #5
    3a7e:	4b5e      	ldr	r3, [pc, #376]	; (3bf8 <USB_Handler+0x32c>)
    3a80:	189b      	adds	r3, r3, r2
    3a82:	685a      	ldr	r2, [r3, #4]
    3a84:	0492      	lsls	r2, r2, #18
    3a86:	0c92      	lsrs	r2, r2, #18
    3a88:	495a      	ldr	r1, [pc, #360]	; (3bf4 <USB_Handler+0x328>)
    3a8a:	804a      	strh	r2, [r1, #2]
    3a8c:	685a      	ldr	r2, [r3, #4]
    3a8e:	0112      	lsls	r2, r2, #4
    3a90:	0c92      	lsrs	r2, r2, #18
    3a92:	808a      	strh	r2, [r1, #4]
    3a94:	685a      	ldr	r2, [r3, #4]
    3a96:	0b92      	lsrs	r2, r2, #14
    3a98:	0392      	lsls	r2, r2, #14
    3a9a:	605a      	str	r2, [r3, #4]
    3a9c:	e787      	b.n	39ae <USB_Handler+0xe2>
    3a9e:	4955      	ldr	r1, [pc, #340]	; (3bf4 <USB_Handler+0x328>)
    3aa0:	700c      	strb	r4, [r1, #0]
    3aa2:	0162      	lsls	r2, r4, #5
    3aa4:	4b54      	ldr	r3, [pc, #336]	; (3bf8 <USB_Handler+0x32c>)
    3aa6:	189b      	adds	r3, r3, r2
    3aa8:	89db      	ldrh	r3, [r3, #14]
    3aaa:	221f      	movs	r2, #31
    3aac:	4013      	ands	r3, r2
    3aae:	704b      	strb	r3, [r1, #1]
    3ab0:	0123      	lsls	r3, r4, #4
    3ab2:	18c3      	adds	r3, r0, r3
    3ab4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    3ab6:	4798      	blx	r3
    3ab8:	e7a9      	b.n	3a0e <USB_Handler+0x142>
    3aba:	494e      	ldr	r1, [pc, #312]	; (3bf4 <USB_Handler+0x328>)
    3abc:	700c      	strb	r4, [r1, #0]
    3abe:	0162      	lsls	r2, r4, #5
    3ac0:	4b4d      	ldr	r3, [pc, #308]	; (3bf8 <USB_Handler+0x32c>)
    3ac2:	189b      	adds	r3, r3, r2
    3ac4:	685b      	ldr	r3, [r3, #4]
    3ac6:	011b      	lsls	r3, r3, #4
    3ac8:	0c9b      	lsrs	r3, r3, #18
    3aca:	804b      	strh	r3, [r1, #2]
    3acc:	0123      	lsls	r3, r4, #4
    3ace:	18c3      	adds	r3, r0, r3
    3ad0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    3ad2:	2100      	movs	r1, #0
    3ad4:	4798      	blx	r3
    3ad6:	e7b1      	b.n	3a3c <USB_Handler+0x170>
    3ad8:	8bac      	ldrh	r4, [r5, #28]
    3ada:	b2a4      	uxth	r4, r4
    3adc:	0763      	lsls	r3, r4, #29
    3ade:	d505      	bpl.n	3aec <USB_Handler+0x220>
    3ae0:	2304      	movs	r3, #4
    3ae2:	83ab      	strh	r3, [r5, #28]
    3ae4:	33a1      	adds	r3, #161	; 0xa1
    3ae6:	5cfb      	ldrb	r3, [r7, r3]
    3ae8:	07db      	lsls	r3, r3, #31
    3aea:	d462      	bmi.n	3bb2 <USB_Handler+0x2e6>
    3aec:	0723      	lsls	r3, r4, #28
    3aee:	d50b      	bpl.n	3b08 <USB_Handler+0x23c>
    3af0:	2200      	movs	r2, #0
    3af2:	4b3f      	ldr	r3, [pc, #252]	; (3bf0 <USB_Handler+0x324>)
    3af4:	601a      	str	r2, [r3, #0]
    3af6:	4b3b      	ldr	r3, [pc, #236]	; (3be4 <USB_Handler+0x318>)
    3af8:	6818      	ldr	r0, [r3, #0]
    3afa:	2308      	movs	r3, #8
    3afc:	6802      	ldr	r2, [r0, #0]
    3afe:	8393      	strh	r3, [r2, #28]
    3b00:	339d      	adds	r3, #157	; 0x9d
    3b02:	5cc3      	ldrb	r3, [r0, r3]
    3b04:	079b      	lsls	r3, r3, #30
    3b06:	d458      	bmi.n	3bba <USB_Handler+0x2ee>
    3b08:	0663      	lsls	r3, r4, #25
    3b0a:	d508      	bpl.n	3b1e <USB_Handler+0x252>
    3b0c:	4b35      	ldr	r3, [pc, #212]	; (3be4 <USB_Handler+0x318>)
    3b0e:	6818      	ldr	r0, [r3, #0]
    3b10:	2340      	movs	r3, #64	; 0x40
    3b12:	6802      	ldr	r2, [r0, #0]
    3b14:	8393      	strh	r3, [r2, #28]
    3b16:	3365      	adds	r3, #101	; 0x65
    3b18:	5cc3      	ldrb	r3, [r0, r3]
    3b1a:	06db      	lsls	r3, r3, #27
    3b1c:	d450      	bmi.n	3bc0 <USB_Handler+0x2f4>
    3b1e:	06a3      	lsls	r3, r4, #26
    3b20:	d508      	bpl.n	3b34 <USB_Handler+0x268>
    3b22:	4b30      	ldr	r3, [pc, #192]	; (3be4 <USB_Handler+0x318>)
    3b24:	6818      	ldr	r0, [r3, #0]
    3b26:	2320      	movs	r3, #32
    3b28:	6802      	ldr	r2, [r0, #0]
    3b2a:	8393      	strh	r3, [r2, #28]
    3b2c:	3385      	adds	r3, #133	; 0x85
    3b2e:	5cc3      	ldrb	r3, [r0, r3]
    3b30:	071b      	lsls	r3, r3, #28
    3b32:	d448      	bmi.n	3bc6 <USB_Handler+0x2fa>
    3b34:	06e3      	lsls	r3, r4, #27
    3b36:	d508      	bpl.n	3b4a <USB_Handler+0x27e>
    3b38:	4b2a      	ldr	r3, [pc, #168]	; (3be4 <USB_Handler+0x318>)
    3b3a:	6818      	ldr	r0, [r3, #0]
    3b3c:	2310      	movs	r3, #16
    3b3e:	6802      	ldr	r2, [r0, #0]
    3b40:	8393      	strh	r3, [r2, #28]
    3b42:	3395      	adds	r3, #149	; 0x95
    3b44:	5cc3      	ldrb	r3, [r0, r3]
    3b46:	075b      	lsls	r3, r3, #29
    3b48:	d440      	bmi.n	3bcc <USB_Handler+0x300>
    3b4a:	0623      	lsls	r3, r4, #24
    3b4c:	d50b      	bpl.n	3b66 <USB_Handler+0x29a>
    3b4e:	2200      	movs	r2, #0
    3b50:	4b27      	ldr	r3, [pc, #156]	; (3bf0 <USB_Handler+0x324>)
    3b52:	601a      	str	r2, [r3, #0]
    3b54:	4b23      	ldr	r3, [pc, #140]	; (3be4 <USB_Handler+0x318>)
    3b56:	6818      	ldr	r0, [r3, #0]
    3b58:	2380      	movs	r3, #128	; 0x80
    3b5a:	6802      	ldr	r2, [r0, #0]
    3b5c:	8393      	strh	r3, [r2, #28]
    3b5e:	3325      	adds	r3, #37	; 0x25
    3b60:	5cc3      	ldrb	r3, [r0, r3]
    3b62:	069b      	lsls	r3, r3, #26
    3b64:	d435      	bmi.n	3bd2 <USB_Handler+0x306>
    3b66:	05e3      	lsls	r3, r4, #23
    3b68:	d50c      	bpl.n	3b84 <USB_Handler+0x2b8>
    3b6a:	2200      	movs	r2, #0
    3b6c:	4b20      	ldr	r3, [pc, #128]	; (3bf0 <USB_Handler+0x324>)
    3b6e:	601a      	str	r2, [r3, #0]
    3b70:	4b1c      	ldr	r3, [pc, #112]	; (3be4 <USB_Handler+0x318>)
    3b72:	6818      	ldr	r0, [r3, #0]
    3b74:	2380      	movs	r3, #128	; 0x80
    3b76:	005b      	lsls	r3, r3, #1
    3b78:	6802      	ldr	r2, [r0, #0]
    3b7a:	8393      	strh	r3, [r2, #28]
    3b7c:	3b5b      	subs	r3, #91	; 0x5b
    3b7e:	5cc3      	ldrb	r3, [r0, r3]
    3b80:	065b      	lsls	r3, r3, #25
    3b82:	d429      	bmi.n	3bd8 <USB_Handler+0x30c>
    3b84:	05a3      	lsls	r3, r4, #22
    3b86:	d50d      	bpl.n	3ba4 <USB_Handler+0x2d8>
    3b88:	2200      	movs	r2, #0
    3b8a:	4b19      	ldr	r3, [pc, #100]	; (3bf0 <USB_Handler+0x324>)
    3b8c:	601a      	str	r2, [r3, #0]
    3b8e:	4b15      	ldr	r3, [pc, #84]	; (3be4 <USB_Handler+0x318>)
    3b90:	6818      	ldr	r0, [r3, #0]
    3b92:	2380      	movs	r3, #128	; 0x80
    3b94:	009b      	lsls	r3, r3, #2
    3b96:	6802      	ldr	r2, [r0, #0]
    3b98:	8393      	strh	r3, [r2, #28]
    3b9a:	3b5c      	subs	r3, #92	; 0x5c
    3b9c:	3bff      	subs	r3, #255	; 0xff
    3b9e:	5cc3      	ldrb	r3, [r0, r3]
    3ba0:	2b7f      	cmp	r3, #127	; 0x7f
    3ba2:	d81c      	bhi.n	3bde <USB_Handler+0x312>
    3ba4:	b003      	add	sp, #12
    3ba6:	bc3c      	pop	{r2, r3, r4, r5}
    3ba8:	4690      	mov	r8, r2
    3baa:	4699      	mov	r9, r3
    3bac:	46a2      	mov	sl, r4
    3bae:	46ab      	mov	fp, r5
    3bb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3bb2:	687b      	ldr	r3, [r7, #4]
    3bb4:	0038      	movs	r0, r7
    3bb6:	4798      	blx	r3
    3bb8:	e798      	b.n	3aec <USB_Handler+0x220>
    3bba:	6883      	ldr	r3, [r0, #8]
    3bbc:	4798      	blx	r3
    3bbe:	e7a3      	b.n	3b08 <USB_Handler+0x23c>
    3bc0:	6943      	ldr	r3, [r0, #20]
    3bc2:	4798      	blx	r3
    3bc4:	e7ab      	b.n	3b1e <USB_Handler+0x252>
    3bc6:	6903      	ldr	r3, [r0, #16]
    3bc8:	4798      	blx	r3
    3bca:	e7b3      	b.n	3b34 <USB_Handler+0x268>
    3bcc:	68c3      	ldr	r3, [r0, #12]
    3bce:	4798      	blx	r3
    3bd0:	e7bb      	b.n	3b4a <USB_Handler+0x27e>
    3bd2:	6983      	ldr	r3, [r0, #24]
    3bd4:	4798      	blx	r3
    3bd6:	e7c6      	b.n	3b66 <USB_Handler+0x29a>
    3bd8:	69c3      	ldr	r3, [r0, #28]
    3bda:	4798      	blx	r3
    3bdc:	e7d2      	b.n	3b84 <USB_Handler+0x2b8>
    3bde:	6a03      	ldr	r3, [r0, #32]
    3be0:	4798      	blx	r3
    3be2:	e7df      	b.n	3ba4 <USB_Handler+0x2d8>
    3be4:	20000324 	.word	0x20000324
    3be8:	00004a10 	.word	0x00004a10
    3bec:	0000489d 	.word	0x0000489d
    3bf0:	20000334 	.word	0x20000334
    3bf4:	20000338 	.word	0x20000338
    3bf8:	20000624 	.word	0x20000624
    3bfc:	f0003fff 	.word	0xf0003fff
    3c00:	0023      	movs	r3, r4
    3c02:	332e      	adds	r3, #46	; 0x2e
    3c04:	009b      	lsls	r3, r3, #2
    3c06:	4642      	mov	r2, r8
    3c08:	6812      	ldr	r2, [r2, #0]
    3c0a:	589b      	ldr	r3, [r3, r2]
    3c0c:	499e      	ldr	r1, [pc, #632]	; (3e88 <USB_Handler+0x5bc>)
    3c0e:	4642      	mov	r2, r8
    3c10:	6810      	ldr	r0, [r2, #0]
    3c12:	4798      	blx	r3
    3c14:	3401      	adds	r4, #1
    3c16:	2c07      	cmp	r4, #7
    3c18:	d0c4      	beq.n	3ba4 <USB_Handler+0x2d8>
    3c1a:	0063      	lsls	r3, r4, #1
    3c1c:	5bdb      	ldrh	r3, [r3, r7]
    3c1e:	4233      	tst	r3, r6
    3c20:	d003      	beq.n	3c2a <USB_Handler+0x35e>
    3c22:	464a      	mov	r2, r9
    3c24:	6812      	ldr	r2, [r2, #0]
    3c26:	6812      	ldr	r2, [r2, #0]
    3c28:	8393      	strh	r3, [r2, #28]
    3c2a:	422b      	tst	r3, r5
    3c2c:	d0f2      	beq.n	3c14 <USB_Handler+0x348>
    3c2e:	2c06      	cmp	r4, #6
    3c30:	d1e6      	bne.n	3c00 <USB_Handler+0x334>
    3c32:	4b96      	ldr	r3, [pc, #600]	; (3e8c <USB_Handler+0x5c0>)
    3c34:	891b      	ldrh	r3, [r3, #8]
    3c36:	091b      	lsrs	r3, r3, #4
    3c38:	2280      	movs	r2, #128	; 0x80
    3c3a:	0052      	lsls	r2, r2, #1
    3c3c:	4013      	ands	r3, r2
    3c3e:	4a92      	ldr	r2, [pc, #584]	; (3e88 <USB_Handler+0x5bc>)
    3c40:	6013      	str	r3, [r2, #0]
    3c42:	e7dd      	b.n	3c00 <USB_Handler+0x334>
    3c44:	003c      	movs	r4, r7
    3c46:	3459      	adds	r4, #89	; 0x59
    3c48:	34ff      	adds	r4, #255	; 0xff
    3c4a:	2300      	movs	r3, #0
    3c4c:	2201      	movs	r2, #1
    3c4e:	4694      	mov	ip, r2
    3c50:	325f      	adds	r2, #95	; 0x5f
    3c52:	4691      	mov	r9, r2
    3c54:	3a50      	subs	r2, #80	; 0x50
    3c56:	4692      	mov	sl, r2
    3c58:	3a0d      	subs	r2, #13
    3c5a:	4693      	mov	fp, r2
    3c5c:	46b8      	mov	r8, r7
    3c5e:	002f      	movs	r7, r5
    3c60:	e0b9      	b.n	3dd6 <USB_Handler+0x50a>
    3c62:	002a      	movs	r2, r5
    3c64:	003d      	movs	r5, r7
    3c66:	4647      	mov	r7, r8
    3c68:	4690      	mov	r8, r2
    3c6a:	015b      	lsls	r3, r3, #5
    3c6c:	18ed      	adds	r5, r5, r3
    3c6e:	2308      	movs	r3, #8
    3c70:	33ff      	adds	r3, #255	; 0xff
    3c72:	5ceb      	ldrb	r3, [r5, r3]
    3c74:	065b      	lsls	r3, r3, #25
    3c76:	d516      	bpl.n	3ca6 <USB_Handler+0x3da>
    3c78:	2240      	movs	r2, #64	; 0x40
    3c7a:	2308      	movs	r3, #8
    3c7c:	33ff      	adds	r3, #255	; 0xff
    3c7e:	54ea      	strb	r2, [r5, r3]
    3c80:	3b88      	subs	r3, #136	; 0x88
    3c82:	3bff      	subs	r3, #255	; 0xff
    3c84:	4642      	mov	r2, r8
    3c86:	4313      	orrs	r3, r2
    3c88:	4a81      	ldr	r2, [pc, #516]	; (3e90 <USB_Handler+0x5c4>)
    3c8a:	7193      	strb	r3, [r2, #6]
    3c8c:	2360      	movs	r3, #96	; 0x60
    3c8e:	420b      	tst	r3, r1
    3c90:	d100      	bne.n	3c94 <USB_Handler+0x3c8>
    3c92:	e787      	b.n	3ba4 <USB_Handler+0x2d8>
    3c94:	9b01      	ldr	r3, [sp, #4]
    3c96:	011b      	lsls	r3, r3, #4
    3c98:	18fb      	adds	r3, r7, r3
    3c9a:	33e0      	adds	r3, #224	; 0xe0
    3c9c:	681b      	ldr	r3, [r3, #0]
    3c9e:	497c      	ldr	r1, [pc, #496]	; (3e90 <USB_Handler+0x5c4>)
    3ca0:	0038      	movs	r0, r7
    3ca2:	4798      	blx	r3
    3ca4:	e77e      	b.n	3ba4 <USB_Handler+0x2d8>
    3ca6:	2308      	movs	r3, #8
    3ca8:	33ff      	adds	r3, #255	; 0xff
    3caa:	5ceb      	ldrb	r3, [r5, r3]
    3cac:	069b      	lsls	r3, r3, #26
    3cae:	d5ed      	bpl.n	3c8c <USB_Handler+0x3c0>
    3cb0:	2220      	movs	r2, #32
    3cb2:	2308      	movs	r3, #8
    3cb4:	33ff      	adds	r3, #255	; 0xff
    3cb6:	54ea      	strb	r2, [r5, r3]
    3cb8:	4b75      	ldr	r3, [pc, #468]	; (3e90 <USB_Handler+0x5c4>)
    3cba:	4642      	mov	r2, r8
    3cbc:	719a      	strb	r2, [r3, #6]
    3cbe:	e7e5      	b.n	3c8c <USB_Handler+0x3c0>
    3cc0:	003d      	movs	r5, r7
    3cc2:	4647      	mov	r7, r8
    3cc4:	9a01      	ldr	r2, [sp, #4]
    3cc6:	0013      	movs	r3, r2
    3cc8:	3308      	adds	r3, #8
    3cca:	015b      	lsls	r3, r3, #5
    3ccc:	18ed      	adds	r5, r5, r3
    3cce:	2310      	movs	r3, #16
    3cd0:	71eb      	strb	r3, [r5, #7]
    3cd2:	18bb      	adds	r3, r7, r2
    3cd4:	3361      	adds	r3, #97	; 0x61
    3cd6:	33ff      	adds	r3, #255	; 0xff
    3cd8:	781b      	ldrb	r3, [r3, #0]
    3cda:	06db      	lsls	r3, r3, #27
    3cdc:	d400      	bmi.n	3ce0 <USB_Handler+0x414>
    3cde:	e761      	b.n	3ba4 <USB_Handler+0x2d8>
    3ce0:	0010      	movs	r0, r2
    3ce2:	0152      	lsls	r2, r2, #5
    3ce4:	4b69      	ldr	r3, [pc, #420]	; (3e8c <USB_Handler+0x5c0>)
    3ce6:	189b      	adds	r3, r3, r2
    3ce8:	685b      	ldr	r3, [r3, #4]
    3cea:	049b      	lsls	r3, r3, #18
    3cec:	0c9b      	lsrs	r3, r3, #18
    3cee:	4968      	ldr	r1, [pc, #416]	; (3e90 <USB_Handler+0x5c4>)
    3cf0:	800b      	strh	r3, [r1, #0]
    3cf2:	0103      	lsls	r3, r0, #4
    3cf4:	18fb      	adds	r3, r7, r3
    3cf6:	33dc      	adds	r3, #220	; 0xdc
    3cf8:	681b      	ldr	r3, [r3, #0]
    3cfa:	4640      	mov	r0, r8
    3cfc:	4798      	blx	r3
    3cfe:	e751      	b.n	3ba4 <USB_Handler+0x2d8>
    3d00:	002a      	movs	r2, r5
    3d02:	003d      	movs	r5, r7
    3d04:	4647      	mov	r7, r8
    3d06:	4690      	mov	r8, r2
    3d08:	015b      	lsls	r3, r3, #5
    3d0a:	18ed      	adds	r5, r5, r3
    3d0c:	2308      	movs	r3, #8
    3d0e:	33ff      	adds	r3, #255	; 0xff
    3d10:	5ceb      	ldrb	r3, [r5, r3]
    3d12:	079b      	lsls	r3, r3, #30
    3d14:	d51e      	bpl.n	3d54 <USB_Handler+0x488>
    3d16:	2202      	movs	r2, #2
    3d18:	2308      	movs	r3, #8
    3d1a:	33ff      	adds	r3, #255	; 0xff
    3d1c:	54ea      	strb	r2, [r5, r3]
    3d1e:	485c      	ldr	r0, [pc, #368]	; (3e90 <USB_Handler+0x5c4>)
    3d20:	3b88      	subs	r3, #136	; 0x88
    3d22:	3bff      	subs	r3, #255	; 0xff
    3d24:	4642      	mov	r2, r8
    3d26:	4313      	orrs	r3, r2
    3d28:	7183      	strb	r3, [r0, #6]
    3d2a:	9b01      	ldr	r3, [sp, #4]
    3d2c:	015a      	lsls	r2, r3, #5
    3d2e:	4b57      	ldr	r3, [pc, #348]	; (3e8c <USB_Handler+0x5c0>)
    3d30:	189b      	adds	r3, r3, r2
    3d32:	3310      	adds	r3, #16
    3d34:	685b      	ldr	r3, [r3, #4]
    3d36:	049b      	lsls	r3, r3, #18
    3d38:	0c9b      	lsrs	r3, r3, #18
    3d3a:	8043      	strh	r3, [r0, #2]
    3d3c:	078b      	lsls	r3, r1, #30
    3d3e:	d100      	bne.n	3d42 <USB_Handler+0x476>
    3d40:	e730      	b.n	3ba4 <USB_Handler+0x2d8>
    3d42:	9b01      	ldr	r3, [sp, #4]
    3d44:	330d      	adds	r3, #13
    3d46:	011b      	lsls	r3, r3, #4
    3d48:	18fb      	adds	r3, r7, r3
    3d4a:	685b      	ldr	r3, [r3, #4]
    3d4c:	4950      	ldr	r1, [pc, #320]	; (3e90 <USB_Handler+0x5c4>)
    3d4e:	0038      	movs	r0, r7
    3d50:	4798      	blx	r3
    3d52:	e727      	b.n	3ba4 <USB_Handler+0x2d8>
    3d54:	2308      	movs	r3, #8
    3d56:	33ff      	adds	r3, #255	; 0xff
    3d58:	5ceb      	ldrb	r3, [r5, r3]
    3d5a:	07db      	lsls	r3, r3, #31
    3d5c:	d5ee      	bpl.n	3d3c <USB_Handler+0x470>
    3d5e:	2201      	movs	r2, #1
    3d60:	2308      	movs	r3, #8
    3d62:	33ff      	adds	r3, #255	; 0xff
    3d64:	54ea      	strb	r2, [r5, r3]
    3d66:	484a      	ldr	r0, [pc, #296]	; (3e90 <USB_Handler+0x5c4>)
    3d68:	4643      	mov	r3, r8
    3d6a:	7183      	strb	r3, [r0, #6]
    3d6c:	9b01      	ldr	r3, [sp, #4]
    3d6e:	015b      	lsls	r3, r3, #5
    3d70:	4a46      	ldr	r2, [pc, #280]	; (3e8c <USB_Handler+0x5c0>)
    3d72:	18d2      	adds	r2, r2, r3
    3d74:	6853      	ldr	r3, [r2, #4]
    3d76:	049b      	lsls	r3, r3, #18
    3d78:	0c9b      	lsrs	r3, r3, #18
    3d7a:	8003      	strh	r3, [r0, #0]
    3d7c:	6853      	ldr	r3, [r2, #4]
    3d7e:	011b      	lsls	r3, r3, #4
    3d80:	0c9b      	lsrs	r3, r3, #18
    3d82:	8083      	strh	r3, [r0, #4]
    3d84:	e7da      	b.n	3d3c <USB_Handler+0x470>
    3d86:	2208      	movs	r2, #8
    3d88:	32ff      	adds	r2, #255	; 0xff
    3d8a:	5c9a      	ldrb	r2, [r3, r2]
    3d8c:	0752      	lsls	r2, r2, #29
    3d8e:	d56e      	bpl.n	3e6e <USB_Handler+0x5a2>
    3d90:	2004      	movs	r0, #4
    3d92:	2208      	movs	r2, #8
    3d94:	32ff      	adds	r2, #255	; 0xff
    3d96:	5498      	strb	r0, [r3, r2]
    3d98:	9801      	ldr	r0, [sp, #4]
    3d9a:	0142      	lsls	r2, r0, #5
    3d9c:	4b3b      	ldr	r3, [pc, #236]	; (3e8c <USB_Handler+0x5c0>)
    3d9e:	189b      	adds	r3, r3, r2
    3da0:	7a9b      	ldrb	r3, [r3, #10]
    3da2:	079b      	lsls	r3, r3, #30
    3da4:	d505      	bpl.n	3db2 <USB_Handler+0x4e6>
    3da6:	4b39      	ldr	r3, [pc, #228]	; (3e8c <USB_Handler+0x5c0>)
    3da8:	189b      	adds	r3, r3, r2
    3daa:	7a9a      	ldrb	r2, [r3, #10]
    3dac:	2002      	movs	r0, #2
    3dae:	4382      	bics	r2, r0
    3db0:	729a      	strb	r2, [r3, #10]
    3db2:	4b37      	ldr	r3, [pc, #220]	; (3e90 <USB_Handler+0x5c4>)
    3db4:	4642      	mov	r2, r8
    3db6:	719a      	strb	r2, [r3, #6]
    3db8:	9b01      	ldr	r3, [sp, #4]
    3dba:	3308      	adds	r3, #8
    3dbc:	015b      	lsls	r3, r3, #5
    3dbe:	683a      	ldr	r2, [r7, #0]
    3dc0:	4694      	mov	ip, r2
    3dc2:	4463      	add	r3, ip
    3dc4:	79db      	ldrb	r3, [r3, #7]
    3dc6:	07db      	lsls	r3, r3, #31
    3dc8:	d551      	bpl.n	3e6e <USB_Handler+0x5a2>
    3dca:	e6eb      	b.n	3ba4 <USB_Handler+0x2d8>
    3dcc:	3301      	adds	r3, #1
    3dce:	3401      	adds	r4, #1
    3dd0:	2b08      	cmp	r3, #8
    3dd2:	d100      	bne.n	3dd6 <USB_Handler+0x50a>
    3dd4:	e6e6      	b.n	3ba4 <USB_Handler+0x2d8>
    3dd6:	b2dd      	uxtb	r5, r3
    3dd8:	9301      	str	r3, [sp, #4]
    3dda:	0032      	movs	r2, r6
    3ddc:	411a      	asrs	r2, r3
    3dde:	4661      	mov	r1, ip
    3de0:	4211      	tst	r1, r2
    3de2:	d0f3      	beq.n	3dcc <USB_Handler+0x500>
    3de4:	001a      	movs	r2, r3
    3de6:	3208      	adds	r2, #8
    3de8:	0152      	lsls	r2, r2, #5
    3dea:	18ba      	adds	r2, r7, r2
    3dec:	79d2      	ldrb	r2, [r2, #7]
    3dee:	b2d2      	uxtb	r2, r2
    3df0:	7a21      	ldrb	r1, [r4, #8]
    3df2:	4011      	ands	r1, r2
    3df4:	7820      	ldrb	r0, [r4, #0]
    3df6:	4001      	ands	r1, r0
    3df8:	4648      	mov	r0, r9
    3dfa:	4210      	tst	r0, r2
    3dfc:	d000      	beq.n	3e00 <USB_Handler+0x534>
    3dfe:	e730      	b.n	3c62 <USB_Handler+0x396>
    3e00:	4650      	mov	r0, sl
    3e02:	4210      	tst	r0, r2
    3e04:	d000      	beq.n	3e08 <USB_Handler+0x53c>
    3e06:	e75b      	b.n	3cc0 <USB_Handler+0x3f4>
    3e08:	4658      	mov	r0, fp
    3e0a:	4210      	tst	r0, r2
    3e0c:	d000      	beq.n	3e10 <USB_Handler+0x544>
    3e0e:	e777      	b.n	3d00 <USB_Handler+0x434>
    3e10:	200c      	movs	r0, #12
    3e12:	4210      	tst	r0, r2
    3e14:	d0da      	beq.n	3dcc <USB_Handler+0x500>
    3e16:	002a      	movs	r2, r5
    3e18:	003d      	movs	r5, r7
    3e1a:	4647      	mov	r7, r8
    3e1c:	4690      	mov	r8, r2
    3e1e:	015b      	lsls	r3, r3, #5
    3e20:	18eb      	adds	r3, r5, r3
    3e22:	2208      	movs	r2, #8
    3e24:	32ff      	adds	r2, #255	; 0xff
    3e26:	5c9a      	ldrb	r2, [r3, r2]
    3e28:	0712      	lsls	r2, r2, #28
    3e2a:	d5ac      	bpl.n	3d86 <USB_Handler+0x4ba>
    3e2c:	3804      	subs	r0, #4
    3e2e:	2208      	movs	r2, #8
    3e30:	32ff      	adds	r2, #255	; 0xff
    3e32:	5498      	strb	r0, [r3, r2]
    3e34:	9801      	ldr	r0, [sp, #4]
    3e36:	0142      	lsls	r2, r0, #5
    3e38:	4b14      	ldr	r3, [pc, #80]	; (3e8c <USB_Handler+0x5c0>)
    3e3a:	189b      	adds	r3, r3, r2
    3e3c:	7e9b      	ldrb	r3, [r3, #26]
    3e3e:	079b      	lsls	r3, r3, #30
    3e40:	d505      	bpl.n	3e4e <USB_Handler+0x582>
    3e42:	4b12      	ldr	r3, [pc, #72]	; (3e8c <USB_Handler+0x5c0>)
    3e44:	189b      	adds	r3, r3, r2
    3e46:	7e9a      	ldrb	r2, [r3, #26]
    3e48:	2002      	movs	r0, #2
    3e4a:	4382      	bics	r2, r0
    3e4c:	769a      	strb	r2, [r3, #26]
    3e4e:	2380      	movs	r3, #128	; 0x80
    3e50:	425b      	negs	r3, r3
    3e52:	4642      	mov	r2, r8
    3e54:	4313      	orrs	r3, r2
    3e56:	4a0e      	ldr	r2, [pc, #56]	; (3e90 <USB_Handler+0x5c4>)
    3e58:	7193      	strb	r3, [r2, #6]
    3e5a:	9b01      	ldr	r3, [sp, #4]
    3e5c:	3308      	adds	r3, #8
    3e5e:	015b      	lsls	r3, r3, #5
    3e60:	683a      	ldr	r2, [r7, #0]
    3e62:	4694      	mov	ip, r2
    3e64:	4463      	add	r3, ip
    3e66:	79db      	ldrb	r3, [r3, #7]
    3e68:	079b      	lsls	r3, r3, #30
    3e6a:	d500      	bpl.n	3e6e <USB_Handler+0x5a2>
    3e6c:	e69a      	b.n	3ba4 <USB_Handler+0x2d8>
    3e6e:	230c      	movs	r3, #12
    3e70:	420b      	tst	r3, r1
    3e72:	d100      	bne.n	3e76 <USB_Handler+0x5aa>
    3e74:	e696      	b.n	3ba4 <USB_Handler+0x2d8>
    3e76:	9b01      	ldr	r3, [sp, #4]
    3e78:	011b      	lsls	r3, r3, #4
    3e7a:	18fb      	adds	r3, r7, r3
    3e7c:	33d8      	adds	r3, #216	; 0xd8
    3e7e:	681b      	ldr	r3, [r3, #0]
    3e80:	4903      	ldr	r1, [pc, #12]	; (3e90 <USB_Handler+0x5c4>)
    3e82:	0038      	movs	r0, r7
    3e84:	4798      	blx	r3
    3e86:	e68d      	b.n	3ba4 <USB_Handler+0x2d8>
    3e88:	20000328 	.word	0x20000328
    3e8c:	20000624 	.word	0x20000624
    3e90:	2000032c 	.word	0x2000032c

00003e94 <usb_get_config_defaults>:
    3e94:	2200      	movs	r2, #0
    3e96:	7002      	strb	r2, [r0, #0]
    3e98:	2301      	movs	r3, #1
    3e9a:	7043      	strb	r3, [r0, #1]
    3e9c:	7082      	strb	r2, [r0, #2]
    3e9e:	70c3      	strb	r3, [r0, #3]
    3ea0:	4770      	bx	lr
	...

00003ea4 <usb_init>:
    3ea4:	b5f0      	push	{r4, r5, r6, r7, lr}
    3ea6:	46ce      	mov	lr, r9
    3ea8:	4647      	mov	r7, r8
    3eaa:	b580      	push	{r7, lr}
    3eac:	b083      	sub	sp, #12
    3eae:	0004      	movs	r4, r0
    3eb0:	000d      	movs	r5, r1
    3eb2:	0016      	movs	r6, r2
    3eb4:	2300      	movs	r3, #0
    3eb6:	4a6e      	ldr	r2, [pc, #440]	; (4070 <usb_init+0x1cc>)
    3eb8:	6013      	str	r3, [r2, #0]
    3eba:	4a6e      	ldr	r2, [pc, #440]	; (4074 <usb_init+0x1d0>)
    3ebc:	6010      	str	r0, [r2, #0]
    3ebe:	6021      	str	r1, [r4, #0]
    3ec0:	496d      	ldr	r1, [pc, #436]	; (4078 <usb_init+0x1d4>)
    3ec2:	69ca      	ldr	r2, [r1, #28]
    3ec4:	2020      	movs	r0, #32
    3ec6:	4302      	orrs	r2, r0
    3ec8:	61ca      	str	r2, [r1, #28]
    3eca:	af01      	add	r7, sp, #4
    3ecc:	707b      	strb	r3, [r7, #1]
    3ece:	2201      	movs	r2, #1
    3ed0:	70ba      	strb	r2, [r7, #2]
    3ed2:	70fb      	strb	r3, [r7, #3]
    3ed4:	3306      	adds	r3, #6
    3ed6:	4699      	mov	r9, r3
    3ed8:	703b      	strb	r3, [r7, #0]
    3eda:	0039      	movs	r1, r7
    3edc:	3808      	subs	r0, #8
    3ede:	4b67      	ldr	r3, [pc, #412]	; (407c <usb_init+0x1d8>)
    3ee0:	4698      	mov	r8, r3
    3ee2:	4798      	blx	r3
    3ee4:	464b      	mov	r3, r9
    3ee6:	703b      	strb	r3, [r7, #0]
    3ee8:	0039      	movs	r1, r7
    3eea:	2019      	movs	r0, #25
    3eec:	47c0      	blx	r8
    3eee:	78b3      	ldrb	r3, [r6, #2]
    3ef0:	466a      	mov	r2, sp
    3ef2:	7013      	strb	r3, [r2, #0]
    3ef4:	4669      	mov	r1, sp
    3ef6:	2006      	movs	r0, #6
    3ef8:	4b61      	ldr	r3, [pc, #388]	; (4080 <usb_init+0x1dc>)
    3efa:	4798      	blx	r3
    3efc:	2006      	movs	r0, #6
    3efe:	4b61      	ldr	r3, [pc, #388]	; (4084 <usb_init+0x1e0>)
    3f00:	4798      	blx	r3
    3f02:	782b      	ldrb	r3, [r5, #0]
    3f04:	2201      	movs	r2, #1
    3f06:	4313      	orrs	r3, r2
    3f08:	702b      	strb	r3, [r5, #0]
    3f0a:	78ab      	ldrb	r3, [r5, #2]
    3f0c:	07db      	lsls	r3, r3, #31
    3f0e:	d4fc      	bmi.n	3f0a <usb_init+0x66>
    3f10:	4a5d      	ldr	r2, [pc, #372]	; (4088 <usb_init+0x1e4>)
    3f12:	78d3      	ldrb	r3, [r2, #3]
    3f14:	2103      	movs	r1, #3
    3f16:	438b      	bics	r3, r1
    3f18:	2102      	movs	r1, #2
    3f1a:	430b      	orrs	r3, r1
    3f1c:	70d3      	strb	r3, [r2, #3]
    3f1e:	78d3      	ldrb	r3, [r2, #3]
    3f20:	210c      	movs	r1, #12
    3f22:	438b      	bics	r3, r1
    3f24:	2108      	movs	r1, #8
    3f26:	430b      	orrs	r3, r1
    3f28:	70d3      	strb	r3, [r2, #3]
    3f2a:	4b58      	ldr	r3, [pc, #352]	; (408c <usb_init+0x1e8>)
    3f2c:	681b      	ldr	r3, [r3, #0]
    3f2e:	039b      	lsls	r3, r3, #14
    3f30:	0edb      	lsrs	r3, r3, #27
    3f32:	2b1f      	cmp	r3, #31
    3f34:	d100      	bne.n	3f38 <usb_init+0x94>
    3f36:	e08f      	b.n	4058 <usb_init+0x1b4>
    3f38:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
    3f3a:	019b      	lsls	r3, r3, #6
    3f3c:	4954      	ldr	r1, [pc, #336]	; (4090 <usb_init+0x1ec>)
    3f3e:	400a      	ands	r2, r1
    3f40:	4313      	orrs	r3, r2
    3f42:	852b      	strh	r3, [r5, #40]	; 0x28
    3f44:	4b51      	ldr	r3, [pc, #324]	; (408c <usb_init+0x1e8>)
    3f46:	681b      	ldr	r3, [r3, #0]
    3f48:	025b      	lsls	r3, r3, #9
    3f4a:	0edb      	lsrs	r3, r3, #27
    3f4c:	2b1f      	cmp	r3, #31
    3f4e:	d100      	bne.n	3f52 <usb_init+0xae>
    3f50:	e084      	b.n	405c <usb_init+0x1b8>
    3f52:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
    3f54:	211f      	movs	r1, #31
    3f56:	438a      	bics	r2, r1
    3f58:	4313      	orrs	r3, r2
    3f5a:	852b      	strh	r3, [r5, #40]	; 0x28
    3f5c:	4b4b      	ldr	r3, [pc, #300]	; (408c <usb_init+0x1e8>)
    3f5e:	681b      	ldr	r3, [r3, #0]
    3f60:	019b      	lsls	r3, r3, #6
    3f62:	0f5b      	lsrs	r3, r3, #29
    3f64:	2b07      	cmp	r3, #7
    3f66:	d100      	bne.n	3f6a <usb_init+0xc6>
    3f68:	e07a      	b.n	4060 <usb_init+0x1bc>
    3f6a:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
    3f6c:	031b      	lsls	r3, r3, #12
    3f6e:	4949      	ldr	r1, [pc, #292]	; (4094 <usb_init+0x1f0>)
    3f70:	400a      	ands	r2, r1
    3f72:	4313      	orrs	r3, r2
    3f74:	852b      	strh	r3, [r5, #40]	; 0x28
    3f76:	7832      	ldrb	r2, [r6, #0]
    3f78:	7829      	ldrb	r1, [r5, #0]
    3f7a:	01d2      	lsls	r2, r2, #7
    3f7c:	237f      	movs	r3, #127	; 0x7f
    3f7e:	400b      	ands	r3, r1
    3f80:	4313      	orrs	r3, r2
    3f82:	702b      	strb	r3, [r5, #0]
    3f84:	7871      	ldrb	r1, [r6, #1]
    3f86:	782b      	ldrb	r3, [r5, #0]
    3f88:	2201      	movs	r2, #1
    3f8a:	400a      	ands	r2, r1
    3f8c:	0092      	lsls	r2, r2, #2
    3f8e:	2104      	movs	r1, #4
    3f90:	438b      	bics	r3, r1
    3f92:	4313      	orrs	r3, r2
    3f94:	702b      	strb	r3, [r5, #0]
    3f96:	4b40      	ldr	r3, [pc, #256]	; (4098 <usb_init+0x1f4>)
    3f98:	626b      	str	r3, [r5, #36]	; 0x24
    3f9a:	78f3      	ldrb	r3, [r6, #3]
    3f9c:	2b01      	cmp	r3, #1
    3f9e:	d061      	beq.n	4064 <usb_init+0x1c0>
    3fa0:	2b00      	cmp	r3, #0
    3fa2:	d106      	bne.n	3fb2 <usb_init+0x10e>
    3fa4:	6822      	ldr	r2, [r4, #0]
    3fa6:	8913      	ldrh	r3, [r2, #8]
    3fa8:	210c      	movs	r1, #12
    3faa:	438b      	bics	r3, r1
    3fac:	2104      	movs	r1, #4
    3fae:	430b      	orrs	r3, r1
    3fb0:	8113      	strh	r3, [r2, #8]
    3fb2:	2280      	movs	r2, #128	; 0x80
    3fb4:	0052      	lsls	r2, r2, #1
    3fb6:	2100      	movs	r1, #0
    3fb8:	4837      	ldr	r0, [pc, #220]	; (4098 <usb_init+0x1f4>)
    3fba:	4b38      	ldr	r3, [pc, #224]	; (409c <usb_init+0x1f8>)
    3fbc:	4798      	blx	r3
    3fbe:	1d23      	adds	r3, r4, #4
    3fc0:	0021      	movs	r1, r4
    3fc2:	3124      	adds	r1, #36	; 0x24
    3fc4:	2200      	movs	r2, #0
    3fc6:	c304      	stmia	r3!, {r2}
    3fc8:	428b      	cmp	r3, r1
    3fca:	d1fc      	bne.n	3fc6 <usb_init+0x122>
    3fcc:	0021      	movs	r1, r4
    3fce:	31a4      	adds	r1, #164	; 0xa4
    3fd0:	2200      	movs	r2, #0
    3fd2:	601a      	str	r2, [r3, #0]
    3fd4:	605a      	str	r2, [r3, #4]
    3fd6:	609a      	str	r2, [r3, #8]
    3fd8:	60da      	str	r2, [r3, #12]
    3fda:	3310      	adds	r3, #16
    3fdc:	428b      	cmp	r3, r1
    3fde:	d1f8      	bne.n	3fd2 <usb_init+0x12e>
    3fe0:	2300      	movs	r3, #0
    3fe2:	22a4      	movs	r2, #164	; 0xa4
    3fe4:	54a3      	strb	r3, [r4, r2]
    3fe6:	3201      	adds	r2, #1
    3fe8:	54a3      	strb	r3, [r4, r2]
    3fea:	0023      	movs	r3, r4
    3fec:	33a6      	adds	r3, #166	; 0xa6
    3fee:	0021      	movs	r1, r4
    3ff0:	31ae      	adds	r1, #174	; 0xae
    3ff2:	2200      	movs	r2, #0
    3ff4:	701a      	strb	r2, [r3, #0]
    3ff6:	721a      	strb	r2, [r3, #8]
    3ff8:	3301      	adds	r3, #1
    3ffa:	4299      	cmp	r1, r3
    3ffc:	d1fa      	bne.n	3ff4 <usb_init+0x150>
    3ffe:	0023      	movs	r3, r4
    4000:	33b8      	adds	r3, #184	; 0xb8
    4002:	0021      	movs	r1, r4
    4004:	31d4      	adds	r1, #212	; 0xd4
    4006:	2200      	movs	r2, #0
    4008:	c304      	stmia	r3!, {r2}
    400a:	428b      	cmp	r3, r1
    400c:	d1fc      	bne.n	4008 <usb_init+0x164>
    400e:	0021      	movs	r1, r4
    4010:	3155      	adds	r1, #85	; 0x55
    4012:	31ff      	adds	r1, #255	; 0xff
    4014:	2200      	movs	r2, #0
    4016:	601a      	str	r2, [r3, #0]
    4018:	605a      	str	r2, [r3, #4]
    401a:	609a      	str	r2, [r3, #8]
    401c:	60da      	str	r2, [r3, #12]
    401e:	3310      	adds	r3, #16
    4020:	428b      	cmp	r3, r1
    4022:	d1f8      	bne.n	4016 <usb_init+0x172>
    4024:	2300      	movs	r3, #0
    4026:	22aa      	movs	r2, #170	; 0xaa
    4028:	0052      	lsls	r2, r2, #1
    402a:	52a3      	strh	r3, [r4, r2]
    402c:	3202      	adds	r2, #2
    402e:	52a3      	strh	r3, [r4, r2]
    4030:	0023      	movs	r3, r4
    4032:	3359      	adds	r3, #89	; 0x59
    4034:	33ff      	adds	r3, #255	; 0xff
    4036:	3461      	adds	r4, #97	; 0x61
    4038:	34ff      	adds	r4, #255	; 0xff
    403a:	2200      	movs	r2, #0
    403c:	701a      	strb	r2, [r3, #0]
    403e:	721a      	strb	r2, [r3, #8]
    4040:	3301      	adds	r3, #1
    4042:	42a3      	cmp	r3, r4
    4044:	d1fa      	bne.n	403c <usb_init+0x198>
    4046:	2280      	movs	r2, #128	; 0x80
    4048:	4b15      	ldr	r3, [pc, #84]	; (40a0 <usb_init+0x1fc>)
    404a:	601a      	str	r2, [r3, #0]
    404c:	2000      	movs	r0, #0
    404e:	b003      	add	sp, #12
    4050:	bc0c      	pop	{r2, r3}
    4052:	4690      	mov	r8, r2
    4054:	4699      	mov	r9, r3
    4056:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4058:	3b1a      	subs	r3, #26
    405a:	e76d      	b.n	3f38 <usb_init+0x94>
    405c:	3b02      	subs	r3, #2
    405e:	e778      	b.n	3f52 <usb_init+0xae>
    4060:	3b04      	subs	r3, #4
    4062:	e782      	b.n	3f6a <usb_init+0xc6>
    4064:	6822      	ldr	r2, [r4, #0]
    4066:	8913      	ldrh	r3, [r2, #8]
    4068:	3108      	adds	r1, #8
    406a:	438b      	bics	r3, r1
    406c:	8113      	strh	r3, [r2, #8]
    406e:	e7a0      	b.n	3fb2 <usb_init+0x10e>
    4070:	20000334 	.word	0x20000334
    4074:	20000324 	.word	0x20000324
    4078:	40000400 	.word	0x40000400
    407c:	000023b5 	.word	0x000023b5
    4080:	000022bd 	.word	0x000022bd
    4084:	00002231 	.word	0x00002231
    4088:	41005000 	.word	0x41005000
    408c:	00806024 	.word	0x00806024
    4090:	fffff83f 	.word	0xfffff83f
    4094:	ffff8fff 	.word	0xffff8fff
    4098:	20000624 	.word	0x20000624
    409c:	0000498b 	.word	0x0000498b
    40a0:	e000e100 	.word	0xe000e100

000040a4 <Dummy_Handler>:
    40a4:	e7fe      	b.n	40a4 <Dummy_Handler>
	...

000040a8 <Reset_Handler>:
    40a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    40aa:	4a2a      	ldr	r2, [pc, #168]	; (4154 <Reset_Handler+0xac>)
    40ac:	4b2a      	ldr	r3, [pc, #168]	; (4158 <Reset_Handler+0xb0>)
    40ae:	429a      	cmp	r2, r3
    40b0:	d011      	beq.n	40d6 <Reset_Handler+0x2e>
    40b2:	001a      	movs	r2, r3
    40b4:	4b29      	ldr	r3, [pc, #164]	; (415c <Reset_Handler+0xb4>)
    40b6:	429a      	cmp	r2, r3
    40b8:	d20d      	bcs.n	40d6 <Reset_Handler+0x2e>
    40ba:	4a29      	ldr	r2, [pc, #164]	; (4160 <Reset_Handler+0xb8>)
    40bc:	3303      	adds	r3, #3
    40be:	1a9b      	subs	r3, r3, r2
    40c0:	089b      	lsrs	r3, r3, #2
    40c2:	3301      	adds	r3, #1
    40c4:	009b      	lsls	r3, r3, #2
    40c6:	2200      	movs	r2, #0
    40c8:	4823      	ldr	r0, [pc, #140]	; (4158 <Reset_Handler+0xb0>)
    40ca:	4922      	ldr	r1, [pc, #136]	; (4154 <Reset_Handler+0xac>)
    40cc:	588c      	ldr	r4, [r1, r2]
    40ce:	5084      	str	r4, [r0, r2]
    40d0:	3204      	adds	r2, #4
    40d2:	429a      	cmp	r2, r3
    40d4:	d1fa      	bne.n	40cc <Reset_Handler+0x24>
    40d6:	4a23      	ldr	r2, [pc, #140]	; (4164 <Reset_Handler+0xbc>)
    40d8:	4b23      	ldr	r3, [pc, #140]	; (4168 <Reset_Handler+0xc0>)
    40da:	429a      	cmp	r2, r3
    40dc:	d20a      	bcs.n	40f4 <Reset_Handler+0x4c>
    40de:	43d3      	mvns	r3, r2
    40e0:	4921      	ldr	r1, [pc, #132]	; (4168 <Reset_Handler+0xc0>)
    40e2:	185b      	adds	r3, r3, r1
    40e4:	2103      	movs	r1, #3
    40e6:	438b      	bics	r3, r1
    40e8:	3304      	adds	r3, #4
    40ea:	189b      	adds	r3, r3, r2
    40ec:	2100      	movs	r1, #0
    40ee:	c202      	stmia	r2!, {r1}
    40f0:	4293      	cmp	r3, r2
    40f2:	d1fc      	bne.n	40ee <Reset_Handler+0x46>
    40f4:	4a1d      	ldr	r2, [pc, #116]	; (416c <Reset_Handler+0xc4>)
    40f6:	21ff      	movs	r1, #255	; 0xff
    40f8:	4b1d      	ldr	r3, [pc, #116]	; (4170 <Reset_Handler+0xc8>)
    40fa:	438b      	bics	r3, r1
    40fc:	6093      	str	r3, [r2, #8]
    40fe:	39fd      	subs	r1, #253	; 0xfd
    4100:	2390      	movs	r3, #144	; 0x90
    4102:	005b      	lsls	r3, r3, #1
    4104:	4a1b      	ldr	r2, [pc, #108]	; (4174 <Reset_Handler+0xcc>)
    4106:	50d1      	str	r1, [r2, r3]
    4108:	4a1b      	ldr	r2, [pc, #108]	; (4178 <Reset_Handler+0xd0>)
    410a:	78d3      	ldrb	r3, [r2, #3]
    410c:	2503      	movs	r5, #3
    410e:	43ab      	bics	r3, r5
    4110:	2402      	movs	r4, #2
    4112:	4323      	orrs	r3, r4
    4114:	70d3      	strb	r3, [r2, #3]
    4116:	78d3      	ldrb	r3, [r2, #3]
    4118:	270c      	movs	r7, #12
    411a:	43bb      	bics	r3, r7
    411c:	2608      	movs	r6, #8
    411e:	4333      	orrs	r3, r6
    4120:	70d3      	strb	r3, [r2, #3]
    4122:	4b16      	ldr	r3, [pc, #88]	; (417c <Reset_Handler+0xd4>)
    4124:	7b98      	ldrb	r0, [r3, #14]
    4126:	2230      	movs	r2, #48	; 0x30
    4128:	4390      	bics	r0, r2
    412a:	2220      	movs	r2, #32
    412c:	4310      	orrs	r0, r2
    412e:	7398      	strb	r0, [r3, #14]
    4130:	7b99      	ldrb	r1, [r3, #14]
    4132:	43b9      	bics	r1, r7
    4134:	4331      	orrs	r1, r6
    4136:	7399      	strb	r1, [r3, #14]
    4138:	7b9a      	ldrb	r2, [r3, #14]
    413a:	43aa      	bics	r2, r5
    413c:	4322      	orrs	r2, r4
    413e:	739a      	strb	r2, [r3, #14]
    4140:	4a0f      	ldr	r2, [pc, #60]	; (4180 <Reset_Handler+0xd8>)
    4142:	6853      	ldr	r3, [r2, #4]
    4144:	2180      	movs	r1, #128	; 0x80
    4146:	430b      	orrs	r3, r1
    4148:	6053      	str	r3, [r2, #4]
    414a:	4b0e      	ldr	r3, [pc, #56]	; (4184 <Reset_Handler+0xdc>)
    414c:	4798      	blx	r3
    414e:	4b0e      	ldr	r3, [pc, #56]	; (4188 <Reset_Handler+0xe0>)
    4150:	4798      	blx	r3
    4152:	e7fe      	b.n	4152 <Reset_Handler+0xaa>
    4154:	00004a44 	.word	0x00004a44
    4158:	20000000 	.word	0x20000000
    415c:	200000ec 	.word	0x200000ec
    4160:	20000004 	.word	0x20000004
    4164:	200000ec 	.word	0x200000ec
    4168:	20000798 	.word	0x20000798
    416c:	e000ed00 	.word	0xe000ed00
    4170:	00000000 	.word	0x00000000
    4174:	41007000 	.word	0x41007000
    4178:	41005000 	.word	0x41005000
    417c:	41004800 	.word	0x41004800
    4180:	41004000 	.word	0x41004000
    4184:	00004931 	.word	0x00004931
    4188:	000041b5 	.word	0x000041b5

0000418c <usbcdc_task>:
		//sleepmgr_enter_sleep();
	}
}

void usbcdc_task(void)
{
    418c:	b570      	push	{r4, r5, r6, lr}
		char rxChar;
		while(udi_cdc_is_rx_ready())
    418e:	4c06      	ldr	r4, [pc, #24]	; (41a8 <usbcdc_task+0x1c>)
		{
			rxChar = udi_cdc_getc();
    4190:	4e06      	ldr	r6, [pc, #24]	; (41ac <usbcdc_task+0x20>)
			udi_cdc_putc(rxChar);		
    4192:	4d07      	ldr	r5, [pc, #28]	; (41b0 <usbcdc_task+0x24>)
		while(udi_cdc_is_rx_ready())
    4194:	e003      	b.n	419e <usbcdc_task+0x12>
			rxChar = udi_cdc_getc();
    4196:	47b0      	blx	r6
			udi_cdc_putc(rxChar);		
    4198:	23ff      	movs	r3, #255	; 0xff
    419a:	4018      	ands	r0, r3
    419c:	47a8      	blx	r5
		while(udi_cdc_is_rx_ready())
    419e:	47a0      	blx	r4
    41a0:	2800      	cmp	r0, #0
    41a2:	d1f8      	bne.n	4196 <usbcdc_task+0xa>
		}
	
}
    41a4:	bd70      	pop	{r4, r5, r6, pc}
    41a6:	46c0      	nop			; (mov r8, r8)
    41a8:	00000811 	.word	0x00000811
    41ac:	000008ed 	.word	0x000008ed
    41b0:	00000a55 	.word	0x00000a55

000041b4 <main>:
{
    41b4:	b510      	push	{r4, lr}
	cpu_irq_enable();
    41b6:	2101      	movs	r1, #1
    41b8:	4b0b      	ldr	r3, [pc, #44]	; (41e8 <main+0x34>)
    41ba:	7019      	strb	r1, [r3, #0]
    41bc:	f3bf 8f5f 	dmb	sy
    41c0:	b662      	cpsie	i
		sleepmgr_locks[i] = 0;
    41c2:	4b0a      	ldr	r3, [pc, #40]	; (41ec <main+0x38>)
    41c4:	2200      	movs	r2, #0
    41c6:	701a      	strb	r2, [r3, #0]
    41c8:	705a      	strb	r2, [r3, #1]
    41ca:	709a      	strb	r2, [r3, #2]
    41cc:	70da      	strb	r2, [r3, #3]
	sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;
    41ce:	7119      	strb	r1, [r3, #4]
	system_init();
    41d0:	4b07      	ldr	r3, [pc, #28]	; (41f0 <main+0x3c>)
    41d2:	4798      	blx	r3
	ui_init();
    41d4:	4b07      	ldr	r3, [pc, #28]	; (41f4 <main+0x40>)
    41d6:	4798      	blx	r3
	ui_powerdown();
    41d8:	4b07      	ldr	r3, [pc, #28]	; (41f8 <main+0x44>)
    41da:	4798      	blx	r3
	udc_start();
    41dc:	4b07      	ldr	r3, [pc, #28]	; (41fc <main+0x48>)
    41de:	4798      	blx	r3
		usbcdc_task();
    41e0:	4c07      	ldr	r4, [pc, #28]	; (4200 <main+0x4c>)
    41e2:	47a0      	blx	r4
    41e4:	e7fd      	b.n	41e2 <main+0x2e>
    41e6:	46c0      	nop			; (mov r8, r8)
    41e8:	200000e8 	.word	0x200000e8
    41ec:	20000344 	.word	0x20000344
    41f0:	000023e9 	.word	0x000023e9
    41f4:	0000012d 	.word	0x0000012d
    41f8:	00000189 	.word	0x00000189
    41fc:	00000c01 	.word	0x00000c01
    4200:	0000418d 	.word	0x0000418d

00004204 <main_suspend_action>:


/**********************************************************
***********************************************************/
void main_suspend_action(void)
{
    4204:	b510      	push	{r4, lr}
	ui_powerdown();
    4206:	4b01      	ldr	r3, [pc, #4]	; (420c <main_suspend_action+0x8>)
    4208:	4798      	blx	r3
}
    420a:	bd10      	pop	{r4, pc}
    420c:	00000189 	.word	0x00000189

00004210 <main_resume_action>:

void main_resume_action(void)
{
    4210:	b510      	push	{r4, lr}
	ui_wakeup();
    4212:	4b01      	ldr	r3, [pc, #4]	; (4218 <main_resume_action+0x8>)
    4214:	4798      	blx	r3
}
    4216:	bd10      	pop	{r4, pc}
    4218:	000001b9 	.word	0x000001b9

0000421c <main_sof_action>:

void main_sof_action(void)
{
    421c:	b510      	push	{r4, lr}
	if (!main_b_cdc_enable)
    421e:	4b05      	ldr	r3, [pc, #20]	; (4234 <main_sof_action+0x18>)
    4220:	781b      	ldrb	r3, [r3, #0]
    4222:	2b00      	cmp	r3, #0
    4224:	d100      	bne.n	4228 <main_sof_action+0xc>
		return;
	ui_process(udd_get_frame_number());
}
    4226:	bd10      	pop	{r4, pc}
	ui_process(udd_get_frame_number());
    4228:	4b03      	ldr	r3, [pc, #12]	; (4238 <main_sof_action+0x1c>)
    422a:	4798      	blx	r3
    422c:	4b03      	ldr	r3, [pc, #12]	; (423c <main_sof_action+0x20>)
    422e:	4798      	blx	r3
    4230:	e7f9      	b.n	4226 <main_sof_action+0xa>
    4232:	46c0      	nop			; (mov r8, r8)
    4234:	2000033e 	.word	0x2000033e
    4238:	00002af9 	.word	0x00002af9
    423c:	000001d9 	.word	0x000001d9

00004240 <main_suspend_lpm_action>:

#ifdef USB_DEVICE_LPM_SUPPORT
void main_suspend_lpm_action(void)
{
    4240:	b510      	push	{r4, lr}
	ui_powerdown();
    4242:	4b01      	ldr	r3, [pc, #4]	; (4248 <main_suspend_lpm_action+0x8>)
    4244:	4798      	blx	r3
}
    4246:	bd10      	pop	{r4, pc}
    4248:	00000189 	.word	0x00000189

0000424c <main_remotewakeup_lpm_disable>:

void main_remotewakeup_lpm_disable(void)
{
    424c:	b510      	push	{r4, lr}
	ui_wakeup_disable();
    424e:	4b01      	ldr	r3, [pc, #4]	; (4254 <main_remotewakeup_lpm_disable+0x8>)
    4250:	4798      	blx	r3
}
    4252:	bd10      	pop	{r4, pc}
    4254:	000001a9 	.word	0x000001a9

00004258 <main_remotewakeup_lpm_enable>:

void main_remotewakeup_lpm_enable(void)
{
    4258:	b510      	push	{r4, lr}
	ui_wakeup_enable();
    425a:	4b01      	ldr	r3, [pc, #4]	; (4260 <main_remotewakeup_lpm_enable+0x8>)
    425c:	4798      	blx	r3
}
    425e:	bd10      	pop	{r4, pc}
    4260:	00000199 	.word	0x00000199

00004264 <main_cdc_enable>:
#endif

bool main_cdc_enable(uint8_t port)
{
    4264:	b510      	push	{r4, lr}
	main_b_cdc_enable = true;
    4266:	2201      	movs	r2, #1
    4268:	4b02      	ldr	r3, [pc, #8]	; (4274 <main_cdc_enable+0x10>)
    426a:	701a      	strb	r2, [r3, #0]
	// Open communication
	uart_open(port);
    426c:	4b02      	ldr	r3, [pc, #8]	; (4278 <main_cdc_enable+0x14>)
    426e:	4798      	blx	r3
	return true;
}
    4270:	2001      	movs	r0, #1
    4272:	bd10      	pop	{r4, pc}
    4274:	2000033e 	.word	0x2000033e
    4278:	00004541 	.word	0x00004541

0000427c <main_cdc_disable>:

void main_cdc_disable(uint8_t port)
{
    427c:	b510      	push	{r4, lr}
	main_b_cdc_enable = false;
    427e:	2200      	movs	r2, #0
    4280:	4b02      	ldr	r3, [pc, #8]	; (428c <main_cdc_disable+0x10>)
    4282:	701a      	strb	r2, [r3, #0]
	// Close communication
	uart_close(port);
    4284:	4b02      	ldr	r3, [pc, #8]	; (4290 <main_cdc_disable+0x14>)
    4286:	4798      	blx	r3
}
    4288:	bd10      	pop	{r4, pc}
    428a:	46c0      	nop			; (mov r8, r8)
    428c:	2000033e 	.word	0x2000033e
    4290:	00004579 	.word	0x00004579

00004294 <main_cdc_set_dtr>:

void main_cdc_set_dtr(uint8_t port, bool b_enable)
{
    4294:	b510      	push	{r4, lr}
	if (b_enable) {
    4296:	2900      	cmp	r1, #0
    4298:	d102      	bne.n	42a0 <main_cdc_set_dtr+0xc>
		// Host terminal has open COM
		ui_com_open(port);
	}else{
		// Host terminal has close COM
		ui_com_close(port);
    429a:	4b03      	ldr	r3, [pc, #12]	; (42a8 <main_cdc_set_dtr+0x14>)
    429c:	4798      	blx	r3
	}
}
    429e:	bd10      	pop	{r4, pc}
		ui_com_open(port);
    42a0:	4b02      	ldr	r3, [pc, #8]	; (42ac <main_cdc_set_dtr+0x18>)
    42a2:	4798      	blx	r3
    42a4:	e7fb      	b.n	429e <main_cdc_set_dtr+0xa>
    42a6:	46c0      	nop			; (mov r8, r8)
    42a8:	000001cb 	.word	0x000001cb
    42ac:	000001c9 	.word	0x000001c9

000042b0 <usart_rx_callback>:
 * Called by USART driver when receiving is complete.
 *
 * * \param module USART module causing the interrupt (not used)
 */
static void usart_rx_callback(struct usart_module *const module)
{
    42b0:	b510      	push	{r4, lr}
	/* Data received */
	ui_com_tx_start();
    42b2:	4b0b      	ldr	r3, [pc, #44]	; (42e0 <usart_rx_callback+0x30>)
    42b4:	4798      	blx	r3

	/* Transfer UART RX fifo to CDC TX */
	if (!udi_cdc_is_tx_ready()) {
    42b6:	4b0b      	ldr	r3, [pc, #44]	; (42e4 <usart_rx_callback+0x34>)
    42b8:	4798      	blx	r3
    42ba:	2800      	cmp	r0, #0
    42bc:	d00b      	beq.n	42d6 <usart_rx_callback+0x26>
		/* Fifo full */
		udi_cdc_signal_overrun();
		ui_com_overflow();
	} else {
		udi_cdc_putc(rx_data);
    42be:	4b0a      	ldr	r3, [pc, #40]	; (42e8 <usart_rx_callback+0x38>)
    42c0:	7818      	ldrb	r0, [r3, #0]
    42c2:	4b0a      	ldr	r3, [pc, #40]	; (42ec <usart_rx_callback+0x3c>)
    42c4:	4798      	blx	r3
	}

	ui_com_tx_stop();
    42c6:	4b0a      	ldr	r3, [pc, #40]	; (42f0 <usart_rx_callback+0x40>)
    42c8:	4798      	blx	r3

	usart_read_buffer_job(&usart_module_edbg, &rx_data, 1);
    42ca:	2201      	movs	r2, #1
    42cc:	4906      	ldr	r1, [pc, #24]	; (42e8 <usart_rx_callback+0x38>)
    42ce:	4809      	ldr	r0, [pc, #36]	; (42f4 <usart_rx_callback+0x44>)
    42d0:	4b09      	ldr	r3, [pc, #36]	; (42f8 <usart_rx_callback+0x48>)
    42d2:	4798      	blx	r3

	return;
}
    42d4:	bd10      	pop	{r4, pc}
		udi_cdc_signal_overrun();
    42d6:	4b09      	ldr	r3, [pc, #36]	; (42fc <usart_rx_callback+0x4c>)
    42d8:	4798      	blx	r3
		ui_com_overflow();
    42da:	4b09      	ldr	r3, [pc, #36]	; (4300 <usart_rx_callback+0x50>)
    42dc:	4798      	blx	r3
    42de:	e7f2      	b.n	42c6 <usart_rx_callback+0x16>
    42e0:	000001d1 	.word	0x000001d1
    42e4:	0000098d 	.word	0x0000098d
    42e8:	2000033f 	.word	0x2000033f
    42ec:	00000a55 	.word	0x00000a55
    42f0:	000001d3 	.word	0x000001d3
    42f4:	20000764 	.word	0x20000764
    42f8:	00001bc5 	.word	0x00001bc5
    42fc:	000005dd 	.word	0x000005dd
    4300:	000001d5 	.word	0x000001d5

00004304 <usart_tx_callback>:
{
    4304:	b510      	push	{r4, lr}
	tx_callback_flag = 1;
    4306:	2201      	movs	r2, #1
    4308:	4b0e      	ldr	r3, [pc, #56]	; (4344 <usart_tx_callback+0x40>)
    430a:	701a      	strb	r2, [r3, #0]
	if (udi_cdc_is_rx_ready()) {
    430c:	4b0e      	ldr	r3, [pc, #56]	; (4348 <usart_tx_callback+0x44>)
    430e:	4798      	blx	r3
    4310:	2800      	cmp	r0, #0
    4312:	d10b      	bne.n	432c <usart_tx_callback+0x28>
{
	/* Sanity check arguments */
	Assert(module);

	/* Disable callback */
	module->callback_enable_mask &= ~(1 << callback_type);
    4314:	490d      	ldr	r1, [pc, #52]	; (434c <usart_tx_callback+0x48>)
    4316:	2231      	movs	r2, #49	; 0x31
    4318:	5c8b      	ldrb	r3, [r1, r2]
    431a:	2001      	movs	r0, #1
    431c:	4383      	bics	r3, r0
    431e:	548b      	strb	r3, [r1, r2]
		ui_com_rx_stop();
    4320:	4b0b      	ldr	r3, [pc, #44]	; (4350 <usart_tx_callback+0x4c>)
    4322:	4798      	blx	r3
	tx_callback_flag = 0;
    4324:	2200      	movs	r2, #0
    4326:	4b07      	ldr	r3, [pc, #28]	; (4344 <usart_tx_callback+0x40>)
    4328:	701a      	strb	r2, [r3, #0]
}
    432a:	bd10      	pop	{r4, pc}
		ui_com_rx_start();
    432c:	4b09      	ldr	r3, [pc, #36]	; (4354 <usart_tx_callback+0x50>)
    432e:	4798      	blx	r3
		tx_data = udi_cdc_getc();
    4330:	4b09      	ldr	r3, [pc, #36]	; (4358 <usart_tx_callback+0x54>)
    4332:	4798      	blx	r3
    4334:	4909      	ldr	r1, [pc, #36]	; (435c <usart_tx_callback+0x58>)
    4336:	7008      	strb	r0, [r1, #0]
		usart_write_buffer_job(&usart_module_edbg, &tx_data, 1);
    4338:	2201      	movs	r2, #1
    433a:	4804      	ldr	r0, [pc, #16]	; (434c <usart_tx_callback+0x48>)
    433c:	4b08      	ldr	r3, [pc, #32]	; (4360 <usart_tx_callback+0x5c>)
    433e:	4798      	blx	r3
    4340:	e7f0      	b.n	4324 <usart_tx_callback+0x20>
    4342:	46c0      	nop			; (mov r8, r8)
    4344:	20000340 	.word	0x20000340
    4348:	00000811 	.word	0x00000811
    434c:	20000764 	.word	0x20000764
    4350:	000001cf 	.word	0x000001cf
    4354:	000001cd 	.word	0x000001cd
    4358:	000008ed 	.word	0x000008ed
    435c:	20000341 	.word	0x20000341
    4360:	00001ba5 	.word	0x00001ba5

00004364 <uart_rx_notify>:

void uart_rx_notify(uint8_t port)
{
    4364:	b510      	push	{r4, lr}
	UNUSED(port);
	if (!tx_callback_flag) {
    4366:	4b0b      	ldr	r3, [pc, #44]	; (4394 <uart_rx_notify+0x30>)
    4368:	781b      	ldrb	r3, [r3, #0]
    436a:	2b00      	cmp	r3, #0
    436c:	d000      	beq.n	4370 <uart_rx_notify+0xc>
		ui_com_rx_start();
		usart_enable_callback(&usart_module_edbg, USART_CALLBACK_BUFFER_TRANSMITTED);
		tx_data = udi_cdc_getc();
		usart_write_buffer_job(&usart_module_edbg, &tx_data, 1);
	}
}
    436e:	bd10      	pop	{r4, pc}
		ui_com_rx_start();
    4370:	4b09      	ldr	r3, [pc, #36]	; (4398 <uart_rx_notify+0x34>)
    4372:	4798      	blx	r3
	module->callback_enable_mask |= (1 << callback_type);
    4374:	4c09      	ldr	r4, [pc, #36]	; (439c <uart_rx_notify+0x38>)
    4376:	2231      	movs	r2, #49	; 0x31
    4378:	5ca3      	ldrb	r3, [r4, r2]
    437a:	2101      	movs	r1, #1
    437c:	430b      	orrs	r3, r1
    437e:	54a3      	strb	r3, [r4, r2]
		tx_data = udi_cdc_getc();
    4380:	4b07      	ldr	r3, [pc, #28]	; (43a0 <uart_rx_notify+0x3c>)
    4382:	4798      	blx	r3
    4384:	4907      	ldr	r1, [pc, #28]	; (43a4 <uart_rx_notify+0x40>)
    4386:	7008      	strb	r0, [r1, #0]
		usart_write_buffer_job(&usart_module_edbg, &tx_data, 1);
    4388:	2201      	movs	r2, #1
    438a:	0020      	movs	r0, r4
    438c:	4b06      	ldr	r3, [pc, #24]	; (43a8 <uart_rx_notify+0x44>)
    438e:	4798      	blx	r3
}
    4390:	e7ed      	b.n	436e <uart_rx_notify+0xa>
    4392:	46c0      	nop			; (mov r8, r8)
    4394:	20000340 	.word	0x20000340
    4398:	000001cd 	.word	0x000001cd
    439c:	20000764 	.word	0x20000764
    43a0:	000008ed 	.word	0x000008ed
    43a4:	20000341 	.word	0x20000341
    43a8:	00001ba5 	.word	0x00001ba5

000043ac <uart_config>:

void uart_config(uint8_t port,usb_cdc_line_coding_t *cfg)
{
    43ac:	b570      	push	{r4, r5, r6, lr}
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
    43ae:	4b57      	ldr	r3, [pc, #348]	; (450c <uart_config+0x160>)
    43b0:	2280      	movs	r2, #128	; 0x80
    43b2:	05d2      	lsls	r2, r2, #23
    43b4:	601a      	str	r2, [r3, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    43b6:	2200      	movs	r2, #0
    43b8:	605a      	str	r2, [r3, #4]
	config->parity           = USART_PARITY_NONE;
    43ba:	20ff      	movs	r0, #255	; 0xff
    43bc:	8118      	strh	r0, [r3, #8]
	config->stopbits         = USART_STOPBITS_1;
    43be:	2000      	movs	r0, #0
    43c0:	729a      	strb	r2, [r3, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    43c2:	72da      	strb	r2, [r3, #11]
	config->baudrate         = 9600;
    43c4:	2496      	movs	r4, #150	; 0x96
    43c6:	01a4      	lsls	r4, r4, #6
    43c8:	621c      	str	r4, [r3, #32]
	config->receiver_enable  = true;
    43ca:	2401      	movs	r4, #1
    43cc:	2524      	movs	r5, #36	; 0x24
    43ce:	555c      	strb	r4, [r3, r5]
	config->transmitter_enable = true;
    43d0:	3501      	adds	r5, #1
    43d2:	555c      	strb	r4, [r3, r5]
	config->clock_polarity_inverted = false;
    43d4:	3425      	adds	r4, #37	; 0x25
    43d6:	551a      	strb	r2, [r3, r4]
	config->use_external_clock = false;
    43d8:	3401      	adds	r4, #1
    43da:	551a      	strb	r2, [r3, r4]
	config->ext_clock_freq   = 0;
    43dc:	629a      	str	r2, [r3, #40]	; 0x28
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
    43de:	2488      	movs	r4, #136	; 0x88
    43e0:	0364      	lsls	r4, r4, #13
    43e2:	60dc      	str	r4, [r3, #12]
	config->run_in_standby   = false;
    43e4:	242c      	movs	r4, #44	; 0x2c
    43e6:	551a      	strb	r2, [r3, r4]
	config->generator_source = GCLK_GENERATOR_0;
	config->pinmux_pad0      = PINMUX_DEFAULT;
    43e8:	631a      	str	r2, [r3, #48]	; 0x30
	config->pinmux_pad1      = PINMUX_DEFAULT;
    43ea:	635a      	str	r2, [r3, #52]	; 0x34
	config->pinmux_pad2      = PINMUX_DEFAULT;
    43ec:	639a      	str	r2, [r3, #56]	; 0x38
	config->pinmux_pad3      = PINMUX_DEFAULT;
    43ee:	63da      	str	r2, [r3, #60]	; 0x3c
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    43f0:	615a      	str	r2, [r3, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    43f2:	821a      	strh	r2, [r3, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
    43f4:	76da      	strb	r2, [r3, #27]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
    43f6:	7618      	strb	r0, [r3, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
    43f8:	7718      	strb	r0, [r3, #28]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
    43fa:	7658      	strb	r0, [r3, #25]
	config->receive_pulse_length                    = 19;
    43fc:	2213      	movs	r2, #19
    43fe:	769a      	strb	r2, [r3, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
    4400:	7758      	strb	r0, [r3, #29]
	UNUSED(port);
	/* Configure USART for unit test output */
	usart_get_config_defaults(&usart_conf);
	usart_conf.generator_source = GCLK_GENERATOR_3;
    4402:	2003      	movs	r0, #3
    4404:	321a      	adds	r2, #26
    4406:	5498      	strb	r0, [r3, r2]

	switch (cfg->bCharFormat) {
    4408:	790b      	ldrb	r3, [r1, #4]
    440a:	2b02      	cmp	r3, #2
    440c:	d102      	bne.n	4414 <uart_config+0x68>
	case CDC_STOP_BITS_2:
		usart_conf.stopbits = USART_STOPBITS_2;
    440e:	3213      	adds	r2, #19
    4410:	4b3e      	ldr	r3, [pc, #248]	; (450c <uart_config+0x160>)
    4412:	729a      	strb	r2, [r3, #10]
		/* Default stop bit = 1 stop bit */
		usart_conf.stopbits = USART_STOPBITS_1;
		break;
	}

	switch (cfg->bParityType) {
    4414:	794b      	ldrb	r3, [r1, #5]
    4416:	2b01      	cmp	r3, #1
    4418:	d067      	beq.n	44ea <uart_config+0x13e>
    441a:	2b02      	cmp	r3, #2
    441c:	d102      	bne.n	4424 <uart_config+0x78>
	case CDC_PAR_EVEN:
		usart_conf.parity = USART_PARITY_EVEN;
    441e:	2200      	movs	r2, #0
    4420:	4b3a      	ldr	r3, [pc, #232]	; (450c <uart_config+0x160>)
    4422:	811a      	strh	r2, [r3, #8]
	default:
		usart_conf.parity = USART_PARITY_NONE;
		break;
	}

	switch(cfg->bDataBits) {
    4424:	798b      	ldrb	r3, [r1, #6]
    4426:	2b06      	cmp	r3, #6
    4428:	d068      	beq.n	44fc <uart_config+0x150>
    442a:	2b07      	cmp	r3, #7
    442c:	d06a      	beq.n	4504 <uart_config+0x158>
    442e:	2b05      	cmp	r3, #5
    4430:	d060      	beq.n	44f4 <uart_config+0x148>
		usart_conf.character_size = USART_CHARACTER_SIZE_8BIT;
		break;
	}

	/* Options for USART. */
	usart_conf.baudrate = LE32_TO_CPU(cfg->dwDTERate);
    4432:	780a      	ldrb	r2, [r1, #0]
    4434:	784b      	ldrb	r3, [r1, #1]
    4436:	021b      	lsls	r3, r3, #8
    4438:	4313      	orrs	r3, r2
    443a:	788a      	ldrb	r2, [r1, #2]
    443c:	0412      	lsls	r2, r2, #16
    443e:	4313      	orrs	r3, r2
    4440:	78ca      	ldrb	r2, [r1, #3]
    4442:	0612      	lsls	r2, r2, #24
    4444:	431a      	orrs	r2, r3
    4446:	4b31      	ldr	r3, [pc, #196]	; (450c <uart_config+0x160>)
    4448:	621a      	str	r2, [r3, #32]
	usart_conf.mux_setting = CONF_USART_MUX_SETTING;
    444a:	2280      	movs	r2, #128	; 0x80
    444c:	0352      	lsls	r2, r2, #13
    444e:	60da      	str	r2, [r3, #12]
	usart_conf.pinmux_pad0 = CONF_USART_PINMUX_PAD0;
    4450:	4a2f      	ldr	r2, [pc, #188]	; (4510 <uart_config+0x164>)
    4452:	631a      	str	r2, [r3, #48]	; 0x30
	usart_conf.pinmux_pad1 = CONF_USART_PINMUX_PAD1;
    4454:	4a2f      	ldr	r2, [pc, #188]	; (4514 <uart_config+0x168>)
    4456:	635a      	str	r2, [r3, #52]	; 0x34
	usart_conf.pinmux_pad2 = CONF_USART_PINMUX_PAD2;
    4458:	2201      	movs	r2, #1
    445a:	4252      	negs	r2, r2
    445c:	639a      	str	r2, [r3, #56]	; 0x38
	usart_conf.pinmux_pad3 = CONF_USART_PINMUX_PAD3;
    445e:	63da      	str	r2, [r3, #60]	; 0x3c
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    4460:	4d2d      	ldr	r5, [pc, #180]	; (4518 <uart_config+0x16c>)
    4462:	682c      	ldr	r4, [r5, #0]

#if USART_CALLBACK_MODE == true
	/* Disable Global interrupt for module */
	system_interrupt_disable(_sercom_get_interrupt_vector(module->hw));
    4464:	0020      	movs	r0, r4
    4466:	4b2d      	ldr	r3, [pc, #180]	; (451c <uart_config+0x170>)
    4468:	4798      	blx	r3
 * \param[in] vector  Interrupt vector to disable
 */
static inline void system_interrupt_disable(
		const enum system_interrupt_vector vector)
{
	NVIC->ICER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    446a:	231f      	movs	r3, #31
    446c:	4018      	ands	r0, r3
    446e:	3b1e      	subs	r3, #30
    4470:	4083      	lsls	r3, r0
    4472:	2280      	movs	r2, #128	; 0x80
    4474:	492a      	ldr	r1, [pc, #168]	; (4520 <uart_config+0x174>)
    4476:	508b      	str	r3, [r1, r2]
	SercomUsart *const usart_hw = &(module->hw->USART);
    4478:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    447a:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    447c:	2b00      	cmp	r3, #0
    447e:	d1fc      	bne.n	447a <uart_config+0xce>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Disable USART module */
	usart_hw->CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    4480:	6823      	ldr	r3, [r4, #0]
    4482:	2202      	movs	r2, #2
    4484:	4393      	bics	r3, r2
    4486:	6023      	str	r3, [r4, #0]
	usart_disable(&usart_module_edbg);
	usart_init(&usart_module_edbg, CONF_USART_BASE, &usart_conf);
    4488:	4d23      	ldr	r5, [pc, #140]	; (4518 <uart_config+0x16c>)
    448a:	4a20      	ldr	r2, [pc, #128]	; (450c <uart_config+0x160>)
    448c:	4925      	ldr	r1, [pc, #148]	; (4524 <uart_config+0x178>)
    448e:	0028      	movs	r0, r5
    4490:	4b25      	ldr	r3, [pc, #148]	; (4528 <uart_config+0x17c>)
    4492:	4798      	blx	r3
	SercomUsart *const usart_hw = &(module->hw->USART);
    4494:	682c      	ldr	r4, [r5, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    4496:	0020      	movs	r0, r4
    4498:	4b20      	ldr	r3, [pc, #128]	; (451c <uart_config+0x170>)
    449a:	4798      	blx	r3
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    449c:	231f      	movs	r3, #31
    449e:	4018      	ands	r0, r3
    44a0:	3b1e      	subs	r3, #30
    44a2:	4083      	lsls	r3, r0
    44a4:	4a1e      	ldr	r2, [pc, #120]	; (4520 <uart_config+0x174>)
    44a6:	6013      	str	r3, [r2, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    44a8:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    44aa:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    44ac:	2b00      	cmp	r3, #0
    44ae:	d1fc      	bne.n	44aa <uart_config+0xfe>
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    44b0:	6823      	ldr	r3, [r4, #0]
    44b2:	2202      	movs	r2, #2
    44b4:	4313      	orrs	r3, r2
    44b6:	6023      	str	r3, [r4, #0]
	usart_enable(&usart_module_edbg);

	/* Enable interrupts */
	usart_register_callback(&usart_module_edbg, usart_tx_callback,
    44b8:	4c17      	ldr	r4, [pc, #92]	; (4518 <uart_config+0x16c>)
    44ba:	2200      	movs	r2, #0
    44bc:	491b      	ldr	r1, [pc, #108]	; (452c <uart_config+0x180>)
    44be:	0020      	movs	r0, r4
    44c0:	4e1b      	ldr	r6, [pc, #108]	; (4530 <uart_config+0x184>)
    44c2:	47b0      	blx	r6
    44c4:	2531      	movs	r5, #49	; 0x31
    44c6:	5d63      	ldrb	r3, [r4, r5]
    44c8:	2201      	movs	r2, #1
    44ca:	4313      	orrs	r3, r2
    44cc:	5563      	strb	r3, [r4, r5]
			USART_CALLBACK_BUFFER_TRANSMITTED);
	usart_enable_callback(&usart_module_edbg, USART_CALLBACK_BUFFER_TRANSMITTED);
	usart_register_callback(&usart_module_edbg, usart_rx_callback,
    44ce:	2201      	movs	r2, #1
    44d0:	4918      	ldr	r1, [pc, #96]	; (4534 <uart_config+0x188>)
    44d2:	0020      	movs	r0, r4
    44d4:	47b0      	blx	r6
    44d6:	5d63      	ldrb	r3, [r4, r5]
    44d8:	2202      	movs	r2, #2
    44da:	4313      	orrs	r3, r2
    44dc:	5563      	strb	r3, [r4, r5]
			USART_CALLBACK_BUFFER_RECEIVED);
	usart_enable_callback(&usart_module_edbg, USART_CALLBACK_BUFFER_RECEIVED);
	usart_read_buffer_job(&usart_module_edbg, &rx_data, 1);
    44de:	2201      	movs	r2, #1
    44e0:	4915      	ldr	r1, [pc, #84]	; (4538 <uart_config+0x18c>)
    44e2:	0020      	movs	r0, r4
    44e4:	4b15      	ldr	r3, [pc, #84]	; (453c <uart_config+0x190>)
    44e6:	4798      	blx	r3
}
    44e8:	bd70      	pop	{r4, r5, r6, pc}
		usart_conf.parity = USART_PARITY_ODD;
    44ea:	2280      	movs	r2, #128	; 0x80
    44ec:	0192      	lsls	r2, r2, #6
    44ee:	4b07      	ldr	r3, [pc, #28]	; (450c <uart_config+0x160>)
    44f0:	811a      	strh	r2, [r3, #8]
		break;
    44f2:	e797      	b.n	4424 <uart_config+0x78>
		usart_conf.character_size = USART_CHARACTER_SIZE_5BIT;
    44f4:	2205      	movs	r2, #5
    44f6:	4b05      	ldr	r3, [pc, #20]	; (450c <uart_config+0x160>)
    44f8:	72da      	strb	r2, [r3, #11]
		break;
    44fa:	e79a      	b.n	4432 <uart_config+0x86>
		usart_conf.character_size = USART_CHARACTER_SIZE_6BIT;
    44fc:	2206      	movs	r2, #6
    44fe:	4b03      	ldr	r3, [pc, #12]	; (450c <uart_config+0x160>)
    4500:	72da      	strb	r2, [r3, #11]
		break;
    4502:	e796      	b.n	4432 <uart_config+0x86>
		usart_conf.character_size = USART_CHARACTER_SIZE_7BIT;
    4504:	2207      	movs	r2, #7
    4506:	4b01      	ldr	r3, [pc, #4]	; (450c <uart_config+0x160>)
    4508:	72da      	strb	r2, [r3, #11]
		break;
    450a:	e792      	b.n	4432 <uart_config+0x86>
    450c:	20000724 	.word	0x20000724
    4510:	00160002 	.word	0x00160002
    4514:	00170002 	.word	0x00170002
    4518:	20000764 	.word	0x20000764
    451c:	0000172d 	.word	0x0000172d
    4520:	e000e100 	.word	0xe000e100
    4524:	42001400 	.word	0x42001400
    4528:	000017bd 	.word	0x000017bd
    452c:	00004305 	.word	0x00004305
    4530:	00001b8d 	.word	0x00001b8d
    4534:	000042b1 	.word	0x000042b1
    4538:	2000033f 	.word	0x2000033f
    453c:	00001bc5 	.word	0x00001bc5

00004540 <uart_open>:

void uart_open(uint8_t port)
{
    4540:	b570      	push	{r4, r5, r6, lr}
	SercomUsart *const usart_hw = &(module->hw->USART);
    4542:	4d0a      	ldr	r5, [pc, #40]	; (456c <uart_open+0x2c>)
    4544:	682c      	ldr	r4, [r5, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    4546:	0020      	movs	r0, r4
    4548:	4b09      	ldr	r3, [pc, #36]	; (4570 <uart_open+0x30>)
    454a:	4798      	blx	r3
    454c:	231f      	movs	r3, #31
    454e:	4018      	ands	r0, r3
    4550:	3b1e      	subs	r3, #30
    4552:	4083      	lsls	r3, r0
    4554:	4a07      	ldr	r2, [pc, #28]	; (4574 <uart_open+0x34>)
    4556:	6013      	str	r3, [r2, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    4558:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    455a:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    455c:	2b00      	cmp	r3, #0
    455e:	d1fc      	bne.n	455a <uart_open+0x1a>
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    4560:	6823      	ldr	r3, [r4, #0]
    4562:	2202      	movs	r2, #2
    4564:	4313      	orrs	r3, r2
    4566:	6023      	str	r3, [r4, #0]
	UNUSED(port);

	usart_enable(&usart_module_edbg);
}
    4568:	bd70      	pop	{r4, r5, r6, pc}
    456a:	46c0      	nop			; (mov r8, r8)
    456c:	20000764 	.word	0x20000764
    4570:	0000172d 	.word	0x0000172d
    4574:	e000e100 	.word	0xe000e100

00004578 <uart_close>:

void uart_close(uint8_t port)
{
    4578:	b570      	push	{r4, r5, r6, lr}
	SercomUsart *const usart_hw = &(module->hw->USART);
    457a:	4d0a      	ldr	r5, [pc, #40]	; (45a4 <uart_close+0x2c>)
    457c:	682c      	ldr	r4, [r5, #0]
	system_interrupt_disable(_sercom_get_interrupt_vector(module->hw));
    457e:	0020      	movs	r0, r4
    4580:	4b09      	ldr	r3, [pc, #36]	; (45a8 <uart_close+0x30>)
    4582:	4798      	blx	r3
	NVIC->ICER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    4584:	231f      	movs	r3, #31
    4586:	4018      	ands	r0, r3
    4588:	3b1e      	subs	r3, #30
    458a:	4083      	lsls	r3, r0
    458c:	2280      	movs	r2, #128	; 0x80
    458e:	4907      	ldr	r1, [pc, #28]	; (45ac <uart_close+0x34>)
    4590:	508b      	str	r3, [r1, r2]
	SercomUsart *const usart_hw = &(module->hw->USART);
    4592:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    4594:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    4596:	2b00      	cmp	r3, #0
    4598:	d1fc      	bne.n	4594 <uart_close+0x1c>
	usart_hw->CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    459a:	6823      	ldr	r3, [r4, #0]
    459c:	2202      	movs	r2, #2
    459e:	4393      	bics	r3, r2
    45a0:	6023      	str	r3, [r4, #0]
	UNUSED(port);
	/* Close RS232 communication */
	usart_disable(&usart_module_edbg);
}
    45a2:	bd70      	pop	{r4, r5, r6, pc}
    45a4:	20000764 	.word	0x20000764
    45a8:	0000172d 	.word	0x0000172d
    45ac:	e000e100 	.word	0xe000e100

000045b0 <__udivsi3>:
    45b0:	2200      	movs	r2, #0
    45b2:	0843      	lsrs	r3, r0, #1
    45b4:	428b      	cmp	r3, r1
    45b6:	d374      	bcc.n	46a2 <__udivsi3+0xf2>
    45b8:	0903      	lsrs	r3, r0, #4
    45ba:	428b      	cmp	r3, r1
    45bc:	d35f      	bcc.n	467e <__udivsi3+0xce>
    45be:	0a03      	lsrs	r3, r0, #8
    45c0:	428b      	cmp	r3, r1
    45c2:	d344      	bcc.n	464e <__udivsi3+0x9e>
    45c4:	0b03      	lsrs	r3, r0, #12
    45c6:	428b      	cmp	r3, r1
    45c8:	d328      	bcc.n	461c <__udivsi3+0x6c>
    45ca:	0c03      	lsrs	r3, r0, #16
    45cc:	428b      	cmp	r3, r1
    45ce:	d30d      	bcc.n	45ec <__udivsi3+0x3c>
    45d0:	22ff      	movs	r2, #255	; 0xff
    45d2:	0209      	lsls	r1, r1, #8
    45d4:	ba12      	rev	r2, r2
    45d6:	0c03      	lsrs	r3, r0, #16
    45d8:	428b      	cmp	r3, r1
    45da:	d302      	bcc.n	45e2 <__udivsi3+0x32>
    45dc:	1212      	asrs	r2, r2, #8
    45de:	0209      	lsls	r1, r1, #8
    45e0:	d065      	beq.n	46ae <__udivsi3+0xfe>
    45e2:	0b03      	lsrs	r3, r0, #12
    45e4:	428b      	cmp	r3, r1
    45e6:	d319      	bcc.n	461c <__udivsi3+0x6c>
    45e8:	e000      	b.n	45ec <__udivsi3+0x3c>
    45ea:	0a09      	lsrs	r1, r1, #8
    45ec:	0bc3      	lsrs	r3, r0, #15
    45ee:	428b      	cmp	r3, r1
    45f0:	d301      	bcc.n	45f6 <__udivsi3+0x46>
    45f2:	03cb      	lsls	r3, r1, #15
    45f4:	1ac0      	subs	r0, r0, r3
    45f6:	4152      	adcs	r2, r2
    45f8:	0b83      	lsrs	r3, r0, #14
    45fa:	428b      	cmp	r3, r1
    45fc:	d301      	bcc.n	4602 <__udivsi3+0x52>
    45fe:	038b      	lsls	r3, r1, #14
    4600:	1ac0      	subs	r0, r0, r3
    4602:	4152      	adcs	r2, r2
    4604:	0b43      	lsrs	r3, r0, #13
    4606:	428b      	cmp	r3, r1
    4608:	d301      	bcc.n	460e <__udivsi3+0x5e>
    460a:	034b      	lsls	r3, r1, #13
    460c:	1ac0      	subs	r0, r0, r3
    460e:	4152      	adcs	r2, r2
    4610:	0b03      	lsrs	r3, r0, #12
    4612:	428b      	cmp	r3, r1
    4614:	d301      	bcc.n	461a <__udivsi3+0x6a>
    4616:	030b      	lsls	r3, r1, #12
    4618:	1ac0      	subs	r0, r0, r3
    461a:	4152      	adcs	r2, r2
    461c:	0ac3      	lsrs	r3, r0, #11
    461e:	428b      	cmp	r3, r1
    4620:	d301      	bcc.n	4626 <__udivsi3+0x76>
    4622:	02cb      	lsls	r3, r1, #11
    4624:	1ac0      	subs	r0, r0, r3
    4626:	4152      	adcs	r2, r2
    4628:	0a83      	lsrs	r3, r0, #10
    462a:	428b      	cmp	r3, r1
    462c:	d301      	bcc.n	4632 <__udivsi3+0x82>
    462e:	028b      	lsls	r3, r1, #10
    4630:	1ac0      	subs	r0, r0, r3
    4632:	4152      	adcs	r2, r2
    4634:	0a43      	lsrs	r3, r0, #9
    4636:	428b      	cmp	r3, r1
    4638:	d301      	bcc.n	463e <__udivsi3+0x8e>
    463a:	024b      	lsls	r3, r1, #9
    463c:	1ac0      	subs	r0, r0, r3
    463e:	4152      	adcs	r2, r2
    4640:	0a03      	lsrs	r3, r0, #8
    4642:	428b      	cmp	r3, r1
    4644:	d301      	bcc.n	464a <__udivsi3+0x9a>
    4646:	020b      	lsls	r3, r1, #8
    4648:	1ac0      	subs	r0, r0, r3
    464a:	4152      	adcs	r2, r2
    464c:	d2cd      	bcs.n	45ea <__udivsi3+0x3a>
    464e:	09c3      	lsrs	r3, r0, #7
    4650:	428b      	cmp	r3, r1
    4652:	d301      	bcc.n	4658 <__udivsi3+0xa8>
    4654:	01cb      	lsls	r3, r1, #7
    4656:	1ac0      	subs	r0, r0, r3
    4658:	4152      	adcs	r2, r2
    465a:	0983      	lsrs	r3, r0, #6
    465c:	428b      	cmp	r3, r1
    465e:	d301      	bcc.n	4664 <__udivsi3+0xb4>
    4660:	018b      	lsls	r3, r1, #6
    4662:	1ac0      	subs	r0, r0, r3
    4664:	4152      	adcs	r2, r2
    4666:	0943      	lsrs	r3, r0, #5
    4668:	428b      	cmp	r3, r1
    466a:	d301      	bcc.n	4670 <__udivsi3+0xc0>
    466c:	014b      	lsls	r3, r1, #5
    466e:	1ac0      	subs	r0, r0, r3
    4670:	4152      	adcs	r2, r2
    4672:	0903      	lsrs	r3, r0, #4
    4674:	428b      	cmp	r3, r1
    4676:	d301      	bcc.n	467c <__udivsi3+0xcc>
    4678:	010b      	lsls	r3, r1, #4
    467a:	1ac0      	subs	r0, r0, r3
    467c:	4152      	adcs	r2, r2
    467e:	08c3      	lsrs	r3, r0, #3
    4680:	428b      	cmp	r3, r1
    4682:	d301      	bcc.n	4688 <__udivsi3+0xd8>
    4684:	00cb      	lsls	r3, r1, #3
    4686:	1ac0      	subs	r0, r0, r3
    4688:	4152      	adcs	r2, r2
    468a:	0883      	lsrs	r3, r0, #2
    468c:	428b      	cmp	r3, r1
    468e:	d301      	bcc.n	4694 <__udivsi3+0xe4>
    4690:	008b      	lsls	r3, r1, #2
    4692:	1ac0      	subs	r0, r0, r3
    4694:	4152      	adcs	r2, r2
    4696:	0843      	lsrs	r3, r0, #1
    4698:	428b      	cmp	r3, r1
    469a:	d301      	bcc.n	46a0 <__udivsi3+0xf0>
    469c:	004b      	lsls	r3, r1, #1
    469e:	1ac0      	subs	r0, r0, r3
    46a0:	4152      	adcs	r2, r2
    46a2:	1a41      	subs	r1, r0, r1
    46a4:	d200      	bcs.n	46a8 <__udivsi3+0xf8>
    46a6:	4601      	mov	r1, r0
    46a8:	4152      	adcs	r2, r2
    46aa:	4610      	mov	r0, r2
    46ac:	4770      	bx	lr
    46ae:	e7ff      	b.n	46b0 <__udivsi3+0x100>
    46b0:	b501      	push	{r0, lr}
    46b2:	2000      	movs	r0, #0
    46b4:	f000 f8f0 	bl	4898 <__aeabi_idiv0>
    46b8:	bd02      	pop	{r1, pc}
    46ba:	46c0      	nop			; (mov r8, r8)

000046bc <__aeabi_uidivmod>:
    46bc:	2900      	cmp	r1, #0
    46be:	d0f7      	beq.n	46b0 <__udivsi3+0x100>
    46c0:	e776      	b.n	45b0 <__udivsi3>
    46c2:	4770      	bx	lr

000046c4 <__divsi3>:
    46c4:	4603      	mov	r3, r0
    46c6:	430b      	orrs	r3, r1
    46c8:	d47f      	bmi.n	47ca <__divsi3+0x106>
    46ca:	2200      	movs	r2, #0
    46cc:	0843      	lsrs	r3, r0, #1
    46ce:	428b      	cmp	r3, r1
    46d0:	d374      	bcc.n	47bc <__divsi3+0xf8>
    46d2:	0903      	lsrs	r3, r0, #4
    46d4:	428b      	cmp	r3, r1
    46d6:	d35f      	bcc.n	4798 <__divsi3+0xd4>
    46d8:	0a03      	lsrs	r3, r0, #8
    46da:	428b      	cmp	r3, r1
    46dc:	d344      	bcc.n	4768 <__divsi3+0xa4>
    46de:	0b03      	lsrs	r3, r0, #12
    46e0:	428b      	cmp	r3, r1
    46e2:	d328      	bcc.n	4736 <__divsi3+0x72>
    46e4:	0c03      	lsrs	r3, r0, #16
    46e6:	428b      	cmp	r3, r1
    46e8:	d30d      	bcc.n	4706 <__divsi3+0x42>
    46ea:	22ff      	movs	r2, #255	; 0xff
    46ec:	0209      	lsls	r1, r1, #8
    46ee:	ba12      	rev	r2, r2
    46f0:	0c03      	lsrs	r3, r0, #16
    46f2:	428b      	cmp	r3, r1
    46f4:	d302      	bcc.n	46fc <__divsi3+0x38>
    46f6:	1212      	asrs	r2, r2, #8
    46f8:	0209      	lsls	r1, r1, #8
    46fa:	d065      	beq.n	47c8 <__divsi3+0x104>
    46fc:	0b03      	lsrs	r3, r0, #12
    46fe:	428b      	cmp	r3, r1
    4700:	d319      	bcc.n	4736 <__divsi3+0x72>
    4702:	e000      	b.n	4706 <__divsi3+0x42>
    4704:	0a09      	lsrs	r1, r1, #8
    4706:	0bc3      	lsrs	r3, r0, #15
    4708:	428b      	cmp	r3, r1
    470a:	d301      	bcc.n	4710 <__divsi3+0x4c>
    470c:	03cb      	lsls	r3, r1, #15
    470e:	1ac0      	subs	r0, r0, r3
    4710:	4152      	adcs	r2, r2
    4712:	0b83      	lsrs	r3, r0, #14
    4714:	428b      	cmp	r3, r1
    4716:	d301      	bcc.n	471c <__divsi3+0x58>
    4718:	038b      	lsls	r3, r1, #14
    471a:	1ac0      	subs	r0, r0, r3
    471c:	4152      	adcs	r2, r2
    471e:	0b43      	lsrs	r3, r0, #13
    4720:	428b      	cmp	r3, r1
    4722:	d301      	bcc.n	4728 <__divsi3+0x64>
    4724:	034b      	lsls	r3, r1, #13
    4726:	1ac0      	subs	r0, r0, r3
    4728:	4152      	adcs	r2, r2
    472a:	0b03      	lsrs	r3, r0, #12
    472c:	428b      	cmp	r3, r1
    472e:	d301      	bcc.n	4734 <__divsi3+0x70>
    4730:	030b      	lsls	r3, r1, #12
    4732:	1ac0      	subs	r0, r0, r3
    4734:	4152      	adcs	r2, r2
    4736:	0ac3      	lsrs	r3, r0, #11
    4738:	428b      	cmp	r3, r1
    473a:	d301      	bcc.n	4740 <__divsi3+0x7c>
    473c:	02cb      	lsls	r3, r1, #11
    473e:	1ac0      	subs	r0, r0, r3
    4740:	4152      	adcs	r2, r2
    4742:	0a83      	lsrs	r3, r0, #10
    4744:	428b      	cmp	r3, r1
    4746:	d301      	bcc.n	474c <__divsi3+0x88>
    4748:	028b      	lsls	r3, r1, #10
    474a:	1ac0      	subs	r0, r0, r3
    474c:	4152      	adcs	r2, r2
    474e:	0a43      	lsrs	r3, r0, #9
    4750:	428b      	cmp	r3, r1
    4752:	d301      	bcc.n	4758 <__divsi3+0x94>
    4754:	024b      	lsls	r3, r1, #9
    4756:	1ac0      	subs	r0, r0, r3
    4758:	4152      	adcs	r2, r2
    475a:	0a03      	lsrs	r3, r0, #8
    475c:	428b      	cmp	r3, r1
    475e:	d301      	bcc.n	4764 <__divsi3+0xa0>
    4760:	020b      	lsls	r3, r1, #8
    4762:	1ac0      	subs	r0, r0, r3
    4764:	4152      	adcs	r2, r2
    4766:	d2cd      	bcs.n	4704 <__divsi3+0x40>
    4768:	09c3      	lsrs	r3, r0, #7
    476a:	428b      	cmp	r3, r1
    476c:	d301      	bcc.n	4772 <__divsi3+0xae>
    476e:	01cb      	lsls	r3, r1, #7
    4770:	1ac0      	subs	r0, r0, r3
    4772:	4152      	adcs	r2, r2
    4774:	0983      	lsrs	r3, r0, #6
    4776:	428b      	cmp	r3, r1
    4778:	d301      	bcc.n	477e <__divsi3+0xba>
    477a:	018b      	lsls	r3, r1, #6
    477c:	1ac0      	subs	r0, r0, r3
    477e:	4152      	adcs	r2, r2
    4780:	0943      	lsrs	r3, r0, #5
    4782:	428b      	cmp	r3, r1
    4784:	d301      	bcc.n	478a <__divsi3+0xc6>
    4786:	014b      	lsls	r3, r1, #5
    4788:	1ac0      	subs	r0, r0, r3
    478a:	4152      	adcs	r2, r2
    478c:	0903      	lsrs	r3, r0, #4
    478e:	428b      	cmp	r3, r1
    4790:	d301      	bcc.n	4796 <__divsi3+0xd2>
    4792:	010b      	lsls	r3, r1, #4
    4794:	1ac0      	subs	r0, r0, r3
    4796:	4152      	adcs	r2, r2
    4798:	08c3      	lsrs	r3, r0, #3
    479a:	428b      	cmp	r3, r1
    479c:	d301      	bcc.n	47a2 <__divsi3+0xde>
    479e:	00cb      	lsls	r3, r1, #3
    47a0:	1ac0      	subs	r0, r0, r3
    47a2:	4152      	adcs	r2, r2
    47a4:	0883      	lsrs	r3, r0, #2
    47a6:	428b      	cmp	r3, r1
    47a8:	d301      	bcc.n	47ae <__divsi3+0xea>
    47aa:	008b      	lsls	r3, r1, #2
    47ac:	1ac0      	subs	r0, r0, r3
    47ae:	4152      	adcs	r2, r2
    47b0:	0843      	lsrs	r3, r0, #1
    47b2:	428b      	cmp	r3, r1
    47b4:	d301      	bcc.n	47ba <__divsi3+0xf6>
    47b6:	004b      	lsls	r3, r1, #1
    47b8:	1ac0      	subs	r0, r0, r3
    47ba:	4152      	adcs	r2, r2
    47bc:	1a41      	subs	r1, r0, r1
    47be:	d200      	bcs.n	47c2 <__divsi3+0xfe>
    47c0:	4601      	mov	r1, r0
    47c2:	4152      	adcs	r2, r2
    47c4:	4610      	mov	r0, r2
    47c6:	4770      	bx	lr
    47c8:	e05d      	b.n	4886 <__divsi3+0x1c2>
    47ca:	0fca      	lsrs	r2, r1, #31
    47cc:	d000      	beq.n	47d0 <__divsi3+0x10c>
    47ce:	4249      	negs	r1, r1
    47d0:	1003      	asrs	r3, r0, #32
    47d2:	d300      	bcc.n	47d6 <__divsi3+0x112>
    47d4:	4240      	negs	r0, r0
    47d6:	4053      	eors	r3, r2
    47d8:	2200      	movs	r2, #0
    47da:	469c      	mov	ip, r3
    47dc:	0903      	lsrs	r3, r0, #4
    47de:	428b      	cmp	r3, r1
    47e0:	d32d      	bcc.n	483e <__divsi3+0x17a>
    47e2:	0a03      	lsrs	r3, r0, #8
    47e4:	428b      	cmp	r3, r1
    47e6:	d312      	bcc.n	480e <__divsi3+0x14a>
    47e8:	22fc      	movs	r2, #252	; 0xfc
    47ea:	0189      	lsls	r1, r1, #6
    47ec:	ba12      	rev	r2, r2
    47ee:	0a03      	lsrs	r3, r0, #8
    47f0:	428b      	cmp	r3, r1
    47f2:	d30c      	bcc.n	480e <__divsi3+0x14a>
    47f4:	0189      	lsls	r1, r1, #6
    47f6:	1192      	asrs	r2, r2, #6
    47f8:	428b      	cmp	r3, r1
    47fa:	d308      	bcc.n	480e <__divsi3+0x14a>
    47fc:	0189      	lsls	r1, r1, #6
    47fe:	1192      	asrs	r2, r2, #6
    4800:	428b      	cmp	r3, r1
    4802:	d304      	bcc.n	480e <__divsi3+0x14a>
    4804:	0189      	lsls	r1, r1, #6
    4806:	d03a      	beq.n	487e <__divsi3+0x1ba>
    4808:	1192      	asrs	r2, r2, #6
    480a:	e000      	b.n	480e <__divsi3+0x14a>
    480c:	0989      	lsrs	r1, r1, #6
    480e:	09c3      	lsrs	r3, r0, #7
    4810:	428b      	cmp	r3, r1
    4812:	d301      	bcc.n	4818 <__divsi3+0x154>
    4814:	01cb      	lsls	r3, r1, #7
    4816:	1ac0      	subs	r0, r0, r3
    4818:	4152      	adcs	r2, r2
    481a:	0983      	lsrs	r3, r0, #6
    481c:	428b      	cmp	r3, r1
    481e:	d301      	bcc.n	4824 <__divsi3+0x160>
    4820:	018b      	lsls	r3, r1, #6
    4822:	1ac0      	subs	r0, r0, r3
    4824:	4152      	adcs	r2, r2
    4826:	0943      	lsrs	r3, r0, #5
    4828:	428b      	cmp	r3, r1
    482a:	d301      	bcc.n	4830 <__divsi3+0x16c>
    482c:	014b      	lsls	r3, r1, #5
    482e:	1ac0      	subs	r0, r0, r3
    4830:	4152      	adcs	r2, r2
    4832:	0903      	lsrs	r3, r0, #4
    4834:	428b      	cmp	r3, r1
    4836:	d301      	bcc.n	483c <__divsi3+0x178>
    4838:	010b      	lsls	r3, r1, #4
    483a:	1ac0      	subs	r0, r0, r3
    483c:	4152      	adcs	r2, r2
    483e:	08c3      	lsrs	r3, r0, #3
    4840:	428b      	cmp	r3, r1
    4842:	d301      	bcc.n	4848 <__divsi3+0x184>
    4844:	00cb      	lsls	r3, r1, #3
    4846:	1ac0      	subs	r0, r0, r3
    4848:	4152      	adcs	r2, r2
    484a:	0883      	lsrs	r3, r0, #2
    484c:	428b      	cmp	r3, r1
    484e:	d301      	bcc.n	4854 <__divsi3+0x190>
    4850:	008b      	lsls	r3, r1, #2
    4852:	1ac0      	subs	r0, r0, r3
    4854:	4152      	adcs	r2, r2
    4856:	d2d9      	bcs.n	480c <__divsi3+0x148>
    4858:	0843      	lsrs	r3, r0, #1
    485a:	428b      	cmp	r3, r1
    485c:	d301      	bcc.n	4862 <__divsi3+0x19e>
    485e:	004b      	lsls	r3, r1, #1
    4860:	1ac0      	subs	r0, r0, r3
    4862:	4152      	adcs	r2, r2
    4864:	1a41      	subs	r1, r0, r1
    4866:	d200      	bcs.n	486a <__divsi3+0x1a6>
    4868:	4601      	mov	r1, r0
    486a:	4663      	mov	r3, ip
    486c:	4152      	adcs	r2, r2
    486e:	105b      	asrs	r3, r3, #1
    4870:	4610      	mov	r0, r2
    4872:	d301      	bcc.n	4878 <__divsi3+0x1b4>
    4874:	4240      	negs	r0, r0
    4876:	2b00      	cmp	r3, #0
    4878:	d500      	bpl.n	487c <__divsi3+0x1b8>
    487a:	4249      	negs	r1, r1
    487c:	4770      	bx	lr
    487e:	4663      	mov	r3, ip
    4880:	105b      	asrs	r3, r3, #1
    4882:	d300      	bcc.n	4886 <__divsi3+0x1c2>
    4884:	4240      	negs	r0, r0
    4886:	b501      	push	{r0, lr}
    4888:	2000      	movs	r0, #0
    488a:	f000 f805 	bl	4898 <__aeabi_idiv0>
    488e:	bd02      	pop	{r1, pc}

00004890 <__aeabi_idivmod>:
    4890:	2900      	cmp	r1, #0
    4892:	d0f8      	beq.n	4886 <__divsi3+0x1c2>
    4894:	e716      	b.n	46c4 <__divsi3>
    4896:	4770      	bx	lr

00004898 <__aeabi_idiv0>:
    4898:	4770      	bx	lr
    489a:	46c0      	nop			; (mov r8, r8)

0000489c <__ctzsi2>:
    489c:	4241      	negs	r1, r0
    489e:	4008      	ands	r0, r1
    48a0:	211c      	movs	r1, #28
    48a2:	2301      	movs	r3, #1
    48a4:	041b      	lsls	r3, r3, #16
    48a6:	4298      	cmp	r0, r3
    48a8:	d301      	bcc.n	48ae <__ctzsi2+0x12>
    48aa:	0c00      	lsrs	r0, r0, #16
    48ac:	3910      	subs	r1, #16
    48ae:	0a1b      	lsrs	r3, r3, #8
    48b0:	4298      	cmp	r0, r3
    48b2:	d301      	bcc.n	48b8 <__ctzsi2+0x1c>
    48b4:	0a00      	lsrs	r0, r0, #8
    48b6:	3908      	subs	r1, #8
    48b8:	091b      	lsrs	r3, r3, #4
    48ba:	4298      	cmp	r0, r3
    48bc:	d301      	bcc.n	48c2 <__ctzsi2+0x26>
    48be:	0900      	lsrs	r0, r0, #4
    48c0:	3904      	subs	r1, #4
    48c2:	a202      	add	r2, pc, #8	; (adr r2, 48cc <__ctzsi2+0x30>)
    48c4:	5c10      	ldrb	r0, [r2, r0]
    48c6:	1a40      	subs	r0, r0, r1
    48c8:	4770      	bx	lr
    48ca:	46c0      	nop			; (mov r8, r8)
    48cc:	1d1d1c1b 	.word	0x1d1d1c1b
    48d0:	1e1e1e1e 	.word	0x1e1e1e1e
    48d4:	1f1f1f1f 	.word	0x1f1f1f1f
    48d8:	1f1f1f1f 	.word	0x1f1f1f1f

000048dc <__aeabi_lmul>:
    48dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    48de:	46ce      	mov	lr, r9
    48e0:	4647      	mov	r7, r8
    48e2:	0415      	lsls	r5, r2, #16
    48e4:	0c2d      	lsrs	r5, r5, #16
    48e6:	002e      	movs	r6, r5
    48e8:	b580      	push	{r7, lr}
    48ea:	0407      	lsls	r7, r0, #16
    48ec:	0c14      	lsrs	r4, r2, #16
    48ee:	0c3f      	lsrs	r7, r7, #16
    48f0:	4699      	mov	r9, r3
    48f2:	0c03      	lsrs	r3, r0, #16
    48f4:	437e      	muls	r6, r7
    48f6:	435d      	muls	r5, r3
    48f8:	4367      	muls	r7, r4
    48fa:	4363      	muls	r3, r4
    48fc:	197f      	adds	r7, r7, r5
    48fe:	0c34      	lsrs	r4, r6, #16
    4900:	19e4      	adds	r4, r4, r7
    4902:	469c      	mov	ip, r3
    4904:	42a5      	cmp	r5, r4
    4906:	d903      	bls.n	4910 <__aeabi_lmul+0x34>
    4908:	2380      	movs	r3, #128	; 0x80
    490a:	025b      	lsls	r3, r3, #9
    490c:	4698      	mov	r8, r3
    490e:	44c4      	add	ip, r8
    4910:	464b      	mov	r3, r9
    4912:	4351      	muls	r1, r2
    4914:	4343      	muls	r3, r0
    4916:	0436      	lsls	r6, r6, #16
    4918:	0c36      	lsrs	r6, r6, #16
    491a:	0c25      	lsrs	r5, r4, #16
    491c:	0424      	lsls	r4, r4, #16
    491e:	4465      	add	r5, ip
    4920:	19a4      	adds	r4, r4, r6
    4922:	1859      	adds	r1, r3, r1
    4924:	1949      	adds	r1, r1, r5
    4926:	0020      	movs	r0, r4
    4928:	bc0c      	pop	{r2, r3}
    492a:	4690      	mov	r8, r2
    492c:	4699      	mov	r9, r3
    492e:	bdf0      	pop	{r4, r5, r6, r7, pc}

00004930 <__libc_init_array>:
    4930:	b570      	push	{r4, r5, r6, lr}
    4932:	2600      	movs	r6, #0
    4934:	4d0c      	ldr	r5, [pc, #48]	; (4968 <__libc_init_array+0x38>)
    4936:	4c0d      	ldr	r4, [pc, #52]	; (496c <__libc_init_array+0x3c>)
    4938:	1b64      	subs	r4, r4, r5
    493a:	10a4      	asrs	r4, r4, #2
    493c:	42a6      	cmp	r6, r4
    493e:	d109      	bne.n	4954 <__libc_init_array+0x24>
    4940:	2600      	movs	r6, #0
    4942:	f000 f86f 	bl	4a24 <_init>
    4946:	4d0a      	ldr	r5, [pc, #40]	; (4970 <__libc_init_array+0x40>)
    4948:	4c0a      	ldr	r4, [pc, #40]	; (4974 <__libc_init_array+0x44>)
    494a:	1b64      	subs	r4, r4, r5
    494c:	10a4      	asrs	r4, r4, #2
    494e:	42a6      	cmp	r6, r4
    4950:	d105      	bne.n	495e <__libc_init_array+0x2e>
    4952:	bd70      	pop	{r4, r5, r6, pc}
    4954:	00b3      	lsls	r3, r6, #2
    4956:	58eb      	ldr	r3, [r5, r3]
    4958:	4798      	blx	r3
    495a:	3601      	adds	r6, #1
    495c:	e7ee      	b.n	493c <__libc_init_array+0xc>
    495e:	00b3      	lsls	r3, r6, #2
    4960:	58eb      	ldr	r3, [r5, r3]
    4962:	4798      	blx	r3
    4964:	3601      	adds	r6, #1
    4966:	e7f2      	b.n	494e <__libc_init_array+0x1e>
    4968:	00004a30 	.word	0x00004a30
    496c:	00004a30 	.word	0x00004a30
    4970:	00004a30 	.word	0x00004a30
    4974:	00004a34 	.word	0x00004a34

00004978 <memcpy>:
    4978:	2300      	movs	r3, #0
    497a:	b510      	push	{r4, lr}
    497c:	429a      	cmp	r2, r3
    497e:	d100      	bne.n	4982 <memcpy+0xa>
    4980:	bd10      	pop	{r4, pc}
    4982:	5ccc      	ldrb	r4, [r1, r3]
    4984:	54c4      	strb	r4, [r0, r3]
    4986:	3301      	adds	r3, #1
    4988:	e7f8      	b.n	497c <memcpy+0x4>

0000498a <memset>:
    498a:	0003      	movs	r3, r0
    498c:	1882      	adds	r2, r0, r2
    498e:	4293      	cmp	r3, r2
    4990:	d100      	bne.n	4994 <memset+0xa>
    4992:	4770      	bx	lr
    4994:	7019      	strb	r1, [r3, #0]
    4996:	3301      	adds	r3, #1
    4998:	e7f9      	b.n	498e <memset+0x4>
    499a:	0000      	movs	r0, r0
    499c:	42000800 	.word	0x42000800
    49a0:	42000c00 	.word	0x42000c00
    49a4:	42001000 	.word	0x42001000
    49a8:	42001400 	.word	0x42001400
    49ac:	42001800 	.word	0x42001800
    49b0:	42001c00 	.word	0x42001c00
    49b4:	00001d8a 	.word	0x00001d8a
    49b8:	00001d86 	.word	0x00001d86
    49bc:	00001d86 	.word	0x00001d86
    49c0:	00001de8 	.word	0x00001de8
    49c4:	00001de8 	.word	0x00001de8
    49c8:	00001d9e 	.word	0x00001d9e
    49cc:	00001d90 	.word	0x00001d90
    49d0:	00001da4 	.word	0x00001da4
    49d4:	00001dd6 	.word	0x00001dd6
    49d8:	00001ef0 	.word	0x00001ef0
    49dc:	00001ed0 	.word	0x00001ed0
    49e0:	00001ed0 	.word	0x00001ed0
    49e4:	00001f5c 	.word	0x00001f5c
    49e8:	00001ee2 	.word	0x00001ee2
    49ec:	00001efe 	.word	0x00001efe
    49f0:	00001ed4 	.word	0x00001ed4
    49f4:	00001f0c 	.word	0x00001f0c
    49f8:	00001f4c 	.word	0x00001f4c
    49fc:	000034ac 	.word	0x000034ac
    4a00:	000034ba 	.word	0x000034ba
    4a04:	00003554 	.word	0x00003554
    4a08:	000035f4 	.word	0x000035f4
    4a0c:	00003658 	.word	0x00003658

00004a10 <_usb_device_irq_bits>:
    4a10:	00080004 00800070 01000001 00000200     ....p...........

00004a20 <_usb_endpoint_irq_bits>:
    4a20:	60100c03                                ...`

00004a24 <_init>:
    4a24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a26:	46c0      	nop			; (mov r8, r8)
    4a28:	bcf8      	pop	{r3, r4, r5, r6, r7}
    4a2a:	bc08      	pop	{r3}
    4a2c:	469e      	mov	lr, r3
    4a2e:	4770      	bx	lr

00004a30 <__init_array_start>:
    4a30:	000000dd 	.word	0x000000dd

00004a34 <_fini>:
    4a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a36:	46c0      	nop			; (mov r8, r8)
    4a38:	bcf8      	pop	{r3, r4, r5, r6, r7}
    4a3a:	bc08      	pop	{r3}
    4a3c:	469e      	mov	lr, r3
    4a3e:	4770      	bx	lr

00004a40 <__fini_array_start>:
    4a40:	000000b5 	.word	0x000000b5
