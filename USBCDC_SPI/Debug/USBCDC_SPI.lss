
USBCDC_SPI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004aa8  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000000ec  20000000  00004aa8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000006b0  200000ec  00004b94  000200ec  2**2
                  ALLOC
  3 .stack        00002004  2000079c  00005244  000200ec  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  000200ec  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020114  2**0
                  CONTENTS, READONLY
  6 .debug_info   0003b29d  00000000  00000000  0002016d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000052fb  00000000  00000000  0005b40a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000090b8  00000000  00000000  00060705  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000009e8  00000000  00000000  000697bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000c00  00000000  00000000  0006a1a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001e4ea  00000000  00000000  0006ada5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000129bc  00000000  00000000  0008928f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00094075  00000000  00000000  0009bc4b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000019c4  00000000  00000000  0012fcc0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	a0 27 00 20 71 41 00 00 6d 41 00 00 6d 41 00 00     .'. qA..mA..mA..
	...
      2c:	6d 41 00 00 00 00 00 00 00 00 00 00 6d 41 00 00     mA..........mA..
      3c:	6d 41 00 00 6d 41 00 00 6d 41 00 00 6d 41 00 00     mA..mA..mA..mA..
      4c:	6d 41 00 00 b9 12 00 00 6d 41 00 00 6d 41 00 00     mA......mA..mA..
      5c:	95 39 00 00 6d 41 00 00 25 18 00 00 35 18 00 00     .9..mA..%...5...
      6c:	45 18 00 00 55 18 00 00 65 18 00 00 75 18 00 00     E...U...e...u...
      7c:	6d 41 00 00 6d 41 00 00 6d 41 00 00 6d 41 00 00     mA..mA..mA..mA..
      8c:	6d 41 00 00 6d 41 00 00 6d 41 00 00 6d 41 00 00     mA..mA..mA..mA..
      9c:	6d 41 00 00 6d 41 00 00 6d 41 00 00 6d 41 00 00     mA..mA..mA..mA..
      ac:	6d 41 00 00 00 00 00 00                             mA......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	200000ec 	.word	0x200000ec
      d4:	00000000 	.word	0x00000000
      d8:	00004aa8 	.word	0x00004aa8

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	200000f0 	.word	0x200000f0
     108:	00004aa8 	.word	0x00004aa8
     10c:	00004aa8 	.word	0x00004aa8
     110:	00000000 	.word	0x00000000

00000114 <usb_suspend_action>:
	}
	
}

void usb_suspend_action(void)
{
     114:	b510      	push	{r4, lr}
	ui_powerdown();
     116:	4b01      	ldr	r3, [pc, #4]	; (11c <usb_suspend_action+0x8>)
     118:	4798      	blx	r3
}
     11a:	bd10      	pop	{r4, pc}
     11c:	00000251 	.word	0x00000251

00000120 <usb_resume_action>:

void usb_resume_action(void)
{
     120:	b510      	push	{r4, lr}
	ui_wakeup();
     122:	4b01      	ldr	r3, [pc, #4]	; (128 <usb_resume_action+0x8>)
     124:	4798      	blx	r3
}
     126:	bd10      	pop	{r4, pc}
     128:	00000281 	.word	0x00000281

0000012c <usb_sof_action>:

void usb_sof_action(void)
{
     12c:	b510      	push	{r4, lr}
	if (! b_cdc_enable)
     12e:	4b05      	ldr	r3, [pc, #20]	; (144 <usb_sof_action+0x18>)
     130:	781b      	ldrb	r3, [r3, #0]
     132:	2b00      	cmp	r3, #0
     134:	d100      	bne.n	138 <usb_sof_action+0xc>
		return;
	ui_process(udd_get_frame_number());
}
     136:	bd10      	pop	{r4, pc}
	ui_process(udd_get_frame_number());
     138:	4b03      	ldr	r3, [pc, #12]	; (148 <usb_sof_action+0x1c>)
     13a:	4798      	blx	r3
     13c:	4b03      	ldr	r3, [pc, #12]	; (14c <usb_sof_action+0x20>)
     13e:	4798      	blx	r3
     140:	e7f9      	b.n	136 <usb_sof_action+0xa>
     142:	46c0      	nop			; (mov r8, r8)
     144:	20000108 	.word	0x20000108
     148:	00002bc1 	.word	0x00002bc1
     14c:	000002a1 	.word	0x000002a1

00000150 <usb_cdc_rx_notify>:

void usb_cdc_rx_notify(uint8_t port)
{
     150:	b510      	push	{r4, lr}
	char rxChar;
	rxChar = udi_cdc_getc();
     152:	4b04      	ldr	r3, [pc, #16]	; (164 <usb_cdc_rx_notify+0x14>)
     154:	4798      	blx	r3
	udi_cdc_putc(rxChar);
     156:	23ff      	movs	r3, #255	; 0xff
     158:	4018      	ands	r0, r3
     15a:	4c03      	ldr	r4, [pc, #12]	; (168 <usb_cdc_rx_notify+0x18>)
     15c:	47a0      	blx	r4
	udi_cdc_putc(',');
     15e:	202c      	movs	r0, #44	; 0x2c
     160:	47a0      	blx	r4
}
     162:	bd10      	pop	{r4, pc}
     164:	000009b5 	.word	0x000009b5
     168:	00000b1d 	.word	0x00000b1d

0000016c <usb_suspend_lpm_action>:

/********************************************************/

#ifdef USB_DEVICE_LPM_SUPPORT
void usb_suspend_lpm_action(void)
{
     16c:	b510      	push	{r4, lr}
	ui_powerdown();
     16e:	4b01      	ldr	r3, [pc, #4]	; (174 <usb_suspend_lpm_action+0x8>)
     170:	4798      	blx	r3
}
     172:	bd10      	pop	{r4, pc}
     174:	00000251 	.word	0x00000251

00000178 <usb_remotewakeup_lpm_disable>:


void usb_remotewakeup_lpm_disable(void)
{
     178:	b510      	push	{r4, lr}
	ui_wakeup_disable();
     17a:	4b01      	ldr	r3, [pc, #4]	; (180 <usb_remotewakeup_lpm_disable+0x8>)
     17c:	4798      	blx	r3
}
     17e:	bd10      	pop	{r4, pc}
     180:	00000271 	.word	0x00000271

00000184 <usb_remotewakeup_lpm_enable>:

void usb_remotewakeup_lpm_enable(void)
{
     184:	b510      	push	{r4, lr}
	ui_wakeup_enable();
     186:	4b01      	ldr	r3, [pc, #4]	; (18c <usb_remotewakeup_lpm_enable+0x8>)
     188:	4798      	blx	r3
}
     18a:	bd10      	pop	{r4, pc}
     18c:	00000261 	.word	0x00000261

00000190 <usb_cdc_enable>:
#endif

bool usb_cdc_enable(uint8_t port)
{
     190:	b510      	push	{r4, lr}
	b_cdc_enable = true;
     192:	2201      	movs	r2, #1
     194:	4b02      	ldr	r3, [pc, #8]	; (1a0 <usb_cdc_enable+0x10>)
     196:	701a      	strb	r2, [r3, #0]
	// Open communication
	uart_open(port);
     198:	4b02      	ldr	r3, [pc, #8]	; (1a4 <usb_cdc_enable+0x14>)
     19a:	4798      	blx	r3
	return true;
}
     19c:	2001      	movs	r0, #1
     19e:	bd10      	pop	{r4, pc}
     1a0:	20000108 	.word	0x20000108
     1a4:	000045a5 	.word	0x000045a5

000001a8 <usb_cdc_disable>:

void usb_cdc_disable(uint8_t port)
{
     1a8:	b510      	push	{r4, lr}
	b_cdc_enable = false;
     1aa:	2200      	movs	r2, #0
     1ac:	4b02      	ldr	r3, [pc, #8]	; (1b8 <usb_cdc_disable+0x10>)
     1ae:	701a      	strb	r2, [r3, #0]
	// Close communication
	uart_close(port);
     1b0:	4b02      	ldr	r3, [pc, #8]	; (1bc <usb_cdc_disable+0x14>)
     1b2:	4798      	blx	r3
}
     1b4:	bd10      	pop	{r4, pc}
     1b6:	46c0      	nop			; (mov r8, r8)
     1b8:	20000108 	.word	0x20000108
     1bc:	000045dd 	.word	0x000045dd

000001c0 <usb_cdc_set_dtr>:

void usb_cdc_set_dtr(uint8_t port, bool b_enable)
{
     1c0:	b510      	push	{r4, lr}
	if (b_enable) {
     1c2:	2900      	cmp	r1, #0
     1c4:	d102      	bne.n	1cc <usb_cdc_set_dtr+0xc>
		// Host terminal has open COM
		ui_com_open(port);
	}else{
		// Host terminal has close COM
		ui_com_close(port);
     1c6:	4b03      	ldr	r3, [pc, #12]	; (1d4 <usb_cdc_set_dtr+0x14>)
     1c8:	4798      	blx	r3
	}
}
     1ca:	bd10      	pop	{r4, pc}
		ui_com_open(port);
     1cc:	4b02      	ldr	r3, [pc, #8]	; (1d8 <usb_cdc_set_dtr+0x18>)
     1ce:	4798      	blx	r3
     1d0:	e7fb      	b.n	1ca <usb_cdc_set_dtr+0xa>
     1d2:	46c0      	nop			; (mov r8, r8)
     1d4:	00000293 	.word	0x00000293
     1d8:	00000291 	.word	0x00000291

000001dc <ui_wakeup_handler>:
 * Note:
 * This interrupt is enable when the USB host enable remote wakeup feature
 * This interrupt wakeup the CPU if this one is in idle mode
 */
static void ui_wakeup_handler(void)
{
     1dc:	b510      	push	{r4, lr}
/*! \brief The USB driver sends a resume signal called \e "Upstream Resume"
 * This is authorized only when the remote wakeup feature is enabled by host.
 */
static inline void udc_remotewakeup(void)
{
	udd_send_remotewakeup();
     1de:	4b03      	ldr	r3, [pc, #12]	; (1ec <ui_wakeup_handler+0x10>)
     1e0:	4798      	blx	r3

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
	} else {
		port_base->OUTCLR.reg = pin_mask;
     1e2:	2280      	movs	r2, #128	; 0x80
     1e4:	05d2      	lsls	r2, r2, #23
     1e6:	4b02      	ldr	r3, [pc, #8]	; (1f0 <ui_wakeup_handler+0x14>)
     1e8:	615a      	str	r2, [r3, #20]
	/* It is a wakeup then send wakeup USB */
	udc_remotewakeup();
	LED_On(LED_0_PIN);
}
     1ea:	bd10      	pop	{r4, pc}
     1ec:	000030c1 	.word	0x000030c1
     1f0:	41004480 	.word	0x41004480

000001f4 <ui_init>:
#endif

void ui_init(void)
{
     1f4:	b510      	push	{r4, lr}
     1f6:	b084      	sub	sp, #16
#ifdef USB_DEVICE_LPM_SUPPORT
	struct extint_chan_conf config_extint_chan;

	extint_chan_get_config_defaults(&config_extint_chan);
     1f8:	ac01      	add	r4, sp, #4
     1fa:	0020      	movs	r0, r4
     1fc:	4b0e      	ldr	r3, [pc, #56]	; (238 <ui_init+0x44>)
     1fe:	4798      	blx	r3

	config_extint_chan.gpio_pin            = BUTTON_0_EIC_PIN;
     200:	230f      	movs	r3, #15
     202:	9301      	str	r3, [sp, #4]
	config_extint_chan.gpio_pin_mux        = BUTTON_0_EIC_MUX;
     204:	2300      	movs	r3, #0
     206:	6063      	str	r3, [r4, #4]
	config_extint_chan.gpio_pin_pull       = EXTINT_PULL_UP;
     208:	3301      	adds	r3, #1
     20a:	7223      	strb	r3, [r4, #8]
	config_extint_chan.filter_input_signal = true;
     20c:	72a3      	strb	r3, [r4, #10]
	config_extint_chan.detection_criteria  = EXTINT_DETECT_FALLING;
     20e:	3301      	adds	r3, #1
     210:	72e3      	strb	r3, [r4, #11]
	extint_chan_set_config(BUTTON_0_EIC_LINE, &config_extint_chan);
     212:	0021      	movs	r1, r4
     214:	200f      	movs	r0, #15
     216:	4b09      	ldr	r3, [pc, #36]	; (23c <ui_init+0x48>)
     218:	4798      	blx	r3
	extint_register_callback(ui_wakeup_handler, BUTTON_0_EIC_LINE,
     21a:	2200      	movs	r2, #0
     21c:	210f      	movs	r1, #15
     21e:	4808      	ldr	r0, [pc, #32]	; (240 <ui_init+0x4c>)
     220:	4b08      	ldr	r3, [pc, #32]	; (244 <ui_init+0x50>)
     222:	4798      	blx	r3
			EXTINT_CALLBACK_TYPE_DETECT);
	extint_chan_enable_callback(BUTTON_0_EIC_LINE,EXTINT_CALLBACK_TYPE_DETECT);
     224:	2100      	movs	r1, #0
     226:	200f      	movs	r0, #15
     228:	4b07      	ldr	r3, [pc, #28]	; (248 <ui_init+0x54>)
     22a:	4798      	blx	r3
		port_base->OUTSET.reg = pin_mask;
     22c:	2280      	movs	r2, #128	; 0x80
     22e:	05d2      	lsls	r2, r2, #23
     230:	4b06      	ldr	r3, [pc, #24]	; (24c <ui_init+0x58>)
     232:	619a      	str	r2, [r3, #24]
#endif

	/* Initialize LEDs */
	LED_Off(LED_0_PIN);
}
     234:	b004      	add	sp, #16
     236:	bd10      	pop	{r4, pc}
     238:	00001391 	.word	0x00001391
     23c:	000013a5 	.word	0x000013a5
     240:	000001dd 	.word	0x000001dd
     244:	0000124d 	.word	0x0000124d
     248:	00001279 	.word	0x00001279
     24c:	41004480 	.word	0x41004480

00000250 <ui_powerdown>:
     250:	2280      	movs	r2, #128	; 0x80
     252:	05d2      	lsls	r2, r2, #23
     254:	4b01      	ldr	r3, [pc, #4]	; (25c <ui_powerdown+0xc>)
     256:	619a      	str	r2, [r3, #24]

void ui_powerdown(void)
{
	LED_Off(LED_0_PIN);
}
     258:	4770      	bx	lr
     25a:	46c0      	nop			; (mov r8, r8)
     25c:	41004480 	.word	0x41004480

00000260 <ui_wakeup_enable>:

#ifdef USB_DEVICE_LPM_SUPPORT
void ui_wakeup_enable(void)
{
     260:	b510      	push	{r4, lr}
	extint_chan_enable_callback(BUTTON_0_EIC_LINE,EXTINT_CALLBACK_TYPE_DETECT);
     262:	2100      	movs	r1, #0
     264:	200f      	movs	r0, #15
     266:	4b01      	ldr	r3, [pc, #4]	; (26c <ui_wakeup_enable+0xc>)
     268:	4798      	blx	r3
}
     26a:	bd10      	pop	{r4, pc}
     26c:	00001279 	.word	0x00001279

00000270 <ui_wakeup_disable>:

void ui_wakeup_disable(void)
{
     270:	b510      	push	{r4, lr}
	extint_chan_disable_callback(BUTTON_0_EIC_LINE,EXTINT_CALLBACK_TYPE_DETECT);
     272:	2100      	movs	r1, #0
     274:	200f      	movs	r0, #15
     276:	4b01      	ldr	r3, [pc, #4]	; (27c <ui_wakeup_disable+0xc>)
     278:	4798      	blx	r3
}
     27a:	bd10      	pop	{r4, pc}
     27c:	00001299 	.word	0x00001299

00000280 <ui_wakeup>:
		port_base->OUTCLR.reg = pin_mask;
     280:	2280      	movs	r2, #128	; 0x80
     282:	05d2      	lsls	r2, r2, #23
     284:	4b01      	ldr	r3, [pc, #4]	; (28c <ui_wakeup+0xc>)
     286:	615a      	str	r2, [r3, #20]
#endif // #ifdef USB_DEVICE_LPM_SUPPORT

void ui_wakeup(void)
{
	LED_On(LED_0_PIN);
}
     288:	4770      	bx	lr
     28a:	46c0      	nop			; (mov r8, r8)
     28c:	41004480 	.word	0x41004480

00000290 <ui_com_open>:


void ui_com_open(uint8_t port)
{
	UNUSED(port);
}
     290:	4770      	bx	lr

00000292 <ui_com_close>:


void ui_com_close(uint8_t port)
{
	UNUSED(port);
}
     292:	4770      	bx	lr

00000294 <ui_com_rx_start>:


void ui_com_rx_start(void)
{

}
     294:	4770      	bx	lr

00000296 <ui_com_rx_stop>:


void ui_com_rx_stop(void)
{

}
     296:	4770      	bx	lr

00000298 <ui_com_tx_start>:


void ui_com_tx_start(void)
{

}
     298:	4770      	bx	lr

0000029a <ui_com_tx_stop>:


void ui_com_tx_stop(void)
{

}
     29a:	4770      	bx	lr

0000029c <ui_com_overflow>:


void ui_com_overflow(void)
{

}
     29c:	4770      	bx	lr
	...

000002a0 <ui_process>:

void ui_process(uint16_t framenumber)
{
     2a0:	b510      	push	{r4, lr}
	if ((framenumber % 1000) == 0) {
     2a2:	21fa      	movs	r1, #250	; 0xfa
     2a4:	0089      	lsls	r1, r1, #2
     2a6:	4b09      	ldr	r3, [pc, #36]	; (2cc <ui_process+0x2c>)
     2a8:	4798      	blx	r3
     2aa:	b289      	uxth	r1, r1
     2ac:	2900      	cmp	r1, #0
     2ae:	d104      	bne.n	2ba <ui_process+0x1a>
     2b0:	2280      	movs	r2, #128	; 0x80
     2b2:	05d2      	lsls	r2, r2, #23
     2b4:	4b06      	ldr	r3, [pc, #24]	; (2d0 <ui_process+0x30>)
     2b6:	615a      	str	r2, [r3, #20]
		LED_On(LED_0_PIN);
	}
	if ((framenumber % 1000) == 500) {
		LED_Off(LED_0_PIN);
	}
}
     2b8:	bd10      	pop	{r4, pc}
	if ((framenumber % 1000) == 500) {
     2ba:	23fa      	movs	r3, #250	; 0xfa
     2bc:	005b      	lsls	r3, r3, #1
     2be:	4299      	cmp	r1, r3
     2c0:	d1fa      	bne.n	2b8 <ui_process+0x18>
		port_base->OUTSET.reg = pin_mask;
     2c2:	2280      	movs	r2, #128	; 0x80
     2c4:	05d2      	lsls	r2, r2, #23
     2c6:	4b02      	ldr	r3, [pc, #8]	; (2d0 <ui_process+0x30>)
     2c8:	619a      	str	r2, [r3, #24]
}
     2ca:	e7f5      	b.n	2b8 <ui_process+0x18>
     2cc:	00004721 	.word	0x00004721
     2d0:	41004480 	.word	0x41004480

000002d4 <udi_cdc_comm_disable>:
}

void udi_cdc_comm_disable(void)
{
	Assert(udi_cdc_nb_comm_enabled != 0);
	udi_cdc_nb_comm_enabled--;
     2d4:	4a02      	ldr	r2, [pc, #8]	; (2e0 <udi_cdc_comm_disable+0xc>)
     2d6:	7813      	ldrb	r3, [r2, #0]
     2d8:	3b01      	subs	r3, #1
     2da:	b2db      	uxtb	r3, r3
     2dc:	7013      	strb	r3, [r2, #0]
}
     2de:	4770      	bx	lr
     2e0:	20000117 	.word	0x20000117

000002e4 <udi_cdc_data_setup>:
}

bool udi_cdc_data_setup(void)
{
	return false;  // request Not supported
}
     2e4:	2000      	movs	r0, #0
     2e6:	4770      	bx	lr

000002e8 <udi_cdc_getsetting>:

uint8_t udi_cdc_getsetting(void)
{
	return 0;      // CDC don't have multiple alternate setting
}
     2e8:	2000      	movs	r0, #0
     2ea:	4770      	bx	lr

000002ec <udi_cdc_line_coding_received>:
	}
	return port;
}

static void udi_cdc_line_coding_received(void)
{
     2ec:	b510      	push	{r4, lr}
	uint8_t port = udi_cdc_setup_to_port();
	UNUSED(port);

	UDI_CDC_SET_CODING_EXT(port, (&udi_cdc_line_coding[port]));
     2ee:	4902      	ldr	r1, [pc, #8]	; (2f8 <udi_cdc_line_coding_received+0xc>)
     2f0:	2000      	movs	r0, #0
     2f2:	4b02      	ldr	r3, [pc, #8]	; (2fc <udi_cdc_line_coding_received+0x10>)
     2f4:	4798      	blx	r3
}
     2f6:	bd10      	pop	{r4, pc}
     2f8:	20000110 	.word	0x20000110
     2fc:	00004411 	.word	0x00004411

00000300 <udi_cdc_comm_enable>:
{
     300:	b510      	push	{r4, lr}
	udi_cdc_nb_comm_enabled = 0;
     302:	2200      	movs	r2, #0
     304:	4b12      	ldr	r3, [pc, #72]	; (350 <udi_cdc_comm_enable+0x50>)
     306:	701a      	strb	r2, [r3, #0]
	udi_cdc_state[port] = CPU_TO_LE16(0);
     308:	2000      	movs	r0, #0
     30a:	4b12      	ldr	r3, [pc, #72]	; (354 <udi_cdc_comm_enable+0x54>)
     30c:	801a      	strh	r2, [r3, #0]
	uid_cdc_state_msg[port].header.bmRequestType =
     30e:	4b12      	ldr	r3, [pc, #72]	; (358 <udi_cdc_comm_enable+0x58>)
     310:	21a1      	movs	r1, #161	; 0xa1
     312:	7019      	strb	r1, [r3, #0]
	uid_cdc_state_msg[port].header.bNotification = USB_REQ_CDC_NOTIFY_SERIAL_STATE;
     314:	3981      	subs	r1, #129	; 0x81
     316:	7059      	strb	r1, [r3, #1]
	uid_cdc_state_msg[port].header.wValue = LE16(0);
     318:	805a      	strh	r2, [r3, #2]
	uid_cdc_state_msg[port].header.wIndex = LE16(iface_comm_num);
     31a:	809a      	strh	r2, [r3, #4]
	uid_cdc_state_msg[port].header.wLength = LE16(2);
     31c:	391e      	subs	r1, #30
     31e:	80d9      	strh	r1, [r3, #6]
	uid_cdc_state_msg[port].value = CPU_TO_LE16(0);
     320:	811a      	strh	r2, [r3, #8]
	udi_cdc_line_coding[port].dwDTERate = CPU_TO_LE32(UDI_CDC_DEFAULT_RATE);
     322:	490e      	ldr	r1, [pc, #56]	; (35c <udi_cdc_comm_enable+0x5c>)
     324:	23e1      	movs	r3, #225	; 0xe1
     326:	025b      	lsls	r3, r3, #9
     328:	600b      	str	r3, [r1, #0]
	udi_cdc_line_coding[port].bCharFormat = UDI_CDC_DEFAULT_STOPBITS;
     32a:	7108      	strb	r0, [r1, #4]
	udi_cdc_line_coding[port].bParityType = UDI_CDC_DEFAULT_PARITY;
     32c:	7148      	strb	r0, [r1, #5]
	udi_cdc_line_coding[port].bDataBits = UDI_CDC_DEFAULT_DATABITS;
     32e:	2308      	movs	r3, #8
     330:	718b      	strb	r3, [r1, #6]
	UDI_CDC_SET_CODING_EXT(port,(&udi_cdc_line_coding[port]));
     332:	2000      	movs	r0, #0
     334:	4b0a      	ldr	r3, [pc, #40]	; (360 <udi_cdc_comm_enable+0x60>)
     336:	4798      	blx	r3
	if (!UDI_CDC_ENABLE_EXT(port)) {
     338:	2000      	movs	r0, #0
     33a:	4b0a      	ldr	r3, [pc, #40]	; (364 <udi_cdc_comm_enable+0x64>)
     33c:	4798      	blx	r3
     33e:	2800      	cmp	r0, #0
     340:	d004      	beq.n	34c <udi_cdc_comm_enable+0x4c>
	udi_cdc_nb_comm_enabled++;
     342:	4a03      	ldr	r2, [pc, #12]	; (350 <udi_cdc_comm_enable+0x50>)
     344:	7813      	ldrb	r3, [r2, #0]
     346:	3301      	adds	r3, #1
     348:	b2db      	uxtb	r3, r3
     34a:	7013      	strb	r3, [r2, #0]
}
     34c:	bd10      	pop	{r4, pc}
     34e:	46c0      	nop			; (mov r8, r8)
     350:	20000117 	.word	0x20000117
     354:	200001b0 	.word	0x200001b0
     358:	20000248 	.word	0x20000248
     35c:	20000110 	.word	0x20000110
     360:	00004411 	.word	0x00004411
     364:	00000191 	.word	0x00000191

00000368 <udi_cdc_tx_send>:
	udi_cdc_tx_send(port);
}


static void udi_cdc_tx_send(uint8_t port)
{
     368:	b570      	push	{r4, r5, r6, lr}
     36a:	b084      	sub	sp, #16

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	if (udi_cdc_tx_trans_ongoing[port]) {
     36c:	4b46      	ldr	r3, [pc, #280]	; (488 <udi_cdc_tx_send+0x120>)
     36e:	781b      	ldrb	r3, [r3, #0]
     370:	2b00      	cmp	r3, #0
     372:	d001      	beq.n	378 <udi_cdc_tx_send+0x10>
	udd_ep_run( ep,
			b_short_packet,
			udi_cdc_tx_buf[port][buf_sel_trans],
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
			udi_cdc_data_sent);
}
     374:	b004      	add	sp, #16
     376:	bd70      	pop	{r4, r5, r6, pc}
	if (udd_is_high_speed()) {
     378:	4b44      	ldr	r3, [pc, #272]	; (48c <udi_cdc_tx_send+0x124>)
     37a:	4798      	blx	r3
     37c:	2800      	cmp	r0, #0
     37e:	d043      	beq.n	408 <udi_cdc_tx_send+0xa0>
		if (udi_cdc_tx_sof_num[port] == udd_get_micro_frame_number()) {
     380:	4b43      	ldr	r3, [pc, #268]	; (490 <udi_cdc_tx_send+0x128>)
     382:	881c      	ldrh	r4, [r3, #0]
     384:	4b43      	ldr	r3, [pc, #268]	; (494 <udi_cdc_tx_send+0x12c>)
     386:	4798      	blx	r3
     388:	4284      	cmp	r4, r0
     38a:	d0f3      	beq.n	374 <udi_cdc_tx_send+0xc>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     38c:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
     390:	425a      	negs	r2, r3
     392:	4153      	adcs	r3, r2
     394:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
     396:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
     398:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     39c:	2200      	movs	r2, #0
     39e:	4b3e      	ldr	r3, [pc, #248]	; (498 <udi_cdc_tx_send+0x130>)
     3a0:	701a      	strb	r2, [r3, #0]
	return flags;
     3a2:	9d03      	ldr	r5, [sp, #12]
	buf_sel_trans = udi_cdc_tx_buf_sel[port];
     3a4:	4b3d      	ldr	r3, [pc, #244]	; (49c <udi_cdc_tx_send+0x134>)
     3a6:	781c      	ldrb	r4, [r3, #0]
     3a8:	b2e4      	uxtb	r4, r4
	if (udi_cdc_tx_buf_nb[port][buf_sel_trans] == 0) {
     3aa:	0062      	lsls	r2, r4, #1
     3ac:	4b3c      	ldr	r3, [pc, #240]	; (4a0 <udi_cdc_tx_send+0x138>)
     3ae:	5ad3      	ldrh	r3, [r2, r3]
     3b0:	2b00      	cmp	r3, #0
     3b2:	d030      	beq.n	416 <udi_cdc_tx_send+0xae>
	sof_zlp_counter = 0;
     3b4:	2200      	movs	r2, #0
     3b6:	4b3b      	ldr	r3, [pc, #236]	; (4a4 <udi_cdc_tx_send+0x13c>)
     3b8:	801a      	strh	r2, [r3, #0]
	if (!udi_cdc_tx_both_buf_to_send[port]) {
     3ba:	4b3b      	ldr	r3, [pc, #236]	; (4a8 <udi_cdc_tx_send+0x140>)
     3bc:	781b      	ldrb	r3, [r3, #0]
     3be:	2b00      	cmp	r3, #0
     3c0:	d148      	bne.n	454 <udi_cdc_tx_send+0xec>
		udi_cdc_tx_buf_sel[port] = (buf_sel_trans==0)?1:0;
     3c2:	4263      	negs	r3, r4
     3c4:	4163      	adcs	r3, r4
     3c6:	b2db      	uxtb	r3, r3
     3c8:	4a34      	ldr	r2, [pc, #208]	; (49c <udi_cdc_tx_send+0x134>)
     3ca:	7013      	strb	r3, [r2, #0]
	udi_cdc_tx_trans_ongoing[port] = true;
     3cc:	2201      	movs	r2, #1
     3ce:	4b2e      	ldr	r3, [pc, #184]	; (488 <udi_cdc_tx_send+0x120>)
     3d0:	701a      	strb	r2, [r3, #0]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
     3d2:	2d00      	cmp	r5, #0
     3d4:	d004      	beq.n	3e0 <udi_cdc_tx_send+0x78>
		cpu_irq_enable();
     3d6:	4b30      	ldr	r3, [pc, #192]	; (498 <udi_cdc_tx_send+0x130>)
     3d8:	701a      	strb	r2, [r3, #0]
     3da:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     3de:	b662      	cpsie	i
	b_short_packet = (udi_cdc_tx_buf_nb[port][buf_sel_trans] != UDI_CDC_TX_BUFFERS);
     3e0:	0026      	movs	r6, r4
     3e2:	0063      	lsls	r3, r4, #1
     3e4:	4a2e      	ldr	r2, [pc, #184]	; (4a0 <udi_cdc_tx_send+0x138>)
     3e6:	5a9b      	ldrh	r3, [r3, r2]
     3e8:	001d      	movs	r5, r3
     3ea:	3d40      	subs	r5, #64	; 0x40
     3ec:	1e6a      	subs	r2, r5, #1
     3ee:	4195      	sbcs	r5, r2
     3f0:	b2ed      	uxtb	r5, r5
	if (b_short_packet) {
     3f2:	2b40      	cmp	r3, #64	; 0x40
     3f4:	d037      	beq.n	466 <udi_cdc_tx_send+0xfe>
		if (udd_is_high_speed()) {
     3f6:	4b25      	ldr	r3, [pc, #148]	; (48c <udi_cdc_tx_send+0x124>)
     3f8:	4798      	blx	r3
     3fa:	2800      	cmp	r0, #0
     3fc:	d02e      	beq.n	45c <udi_cdc_tx_send+0xf4>
			udi_cdc_tx_sof_num[port] = udd_get_micro_frame_number();
     3fe:	4b25      	ldr	r3, [pc, #148]	; (494 <udi_cdc_tx_send+0x12c>)
     400:	4798      	blx	r3
     402:	4b23      	ldr	r3, [pc, #140]	; (490 <udi_cdc_tx_send+0x128>)
     404:	8018      	strh	r0, [r3, #0]
     406:	e031      	b.n	46c <udi_cdc_tx_send+0x104>
		if (udi_cdc_tx_sof_num[port] == udd_get_frame_number()) {
     408:	4b21      	ldr	r3, [pc, #132]	; (490 <udi_cdc_tx_send+0x128>)
     40a:	881c      	ldrh	r4, [r3, #0]
     40c:	4b27      	ldr	r3, [pc, #156]	; (4ac <udi_cdc_tx_send+0x144>)
     40e:	4798      	blx	r3
     410:	4284      	cmp	r4, r0
     412:	d1bb      	bne.n	38c <udi_cdc_tx_send+0x24>
     414:	e7ae      	b.n	374 <udi_cdc_tx_send+0xc>
		sof_zlp_counter++;
     416:	4a23      	ldr	r2, [pc, #140]	; (4a4 <udi_cdc_tx_send+0x13c>)
     418:	8813      	ldrh	r3, [r2, #0]
     41a:	3301      	adds	r3, #1
     41c:	8013      	strh	r3, [r2, #0]
		if (((!udd_is_high_speed()) && (sof_zlp_counter < 100))
     41e:	4b1b      	ldr	r3, [pc, #108]	; (48c <udi_cdc_tx_send+0x124>)
     420:	4798      	blx	r3
     422:	2800      	cmp	r0, #0
     424:	d103      	bne.n	42e <udi_cdc_tx_send+0xc6>
     426:	4b1f      	ldr	r3, [pc, #124]	; (4a4 <udi_cdc_tx_send+0x13c>)
     428:	881b      	ldrh	r3, [r3, #0]
     42a:	2b63      	cmp	r3, #99	; 0x63
     42c:	d908      	bls.n	440 <udi_cdc_tx_send+0xd8>
				|| (udd_is_high_speed() && (sof_zlp_counter < 800))) {
     42e:	4b17      	ldr	r3, [pc, #92]	; (48c <udi_cdc_tx_send+0x124>)
     430:	4798      	blx	r3
     432:	2800      	cmp	r0, #0
     434:	d0be      	beq.n	3b4 <udi_cdc_tx_send+0x4c>
     436:	4b1e      	ldr	r3, [pc, #120]	; (4b0 <udi_cdc_tx_send+0x148>)
     438:	4a1a      	ldr	r2, [pc, #104]	; (4a4 <udi_cdc_tx_send+0x13c>)
     43a:	8812      	ldrh	r2, [r2, #0]
     43c:	429a      	cmp	r2, r3
     43e:	d8b9      	bhi.n	3b4 <udi_cdc_tx_send+0x4c>
	if (cpu_irq_is_enabled_flags(flags))
     440:	2d00      	cmp	r5, #0
     442:	d100      	bne.n	446 <udi_cdc_tx_send+0xde>
     444:	e796      	b.n	374 <udi_cdc_tx_send+0xc>
		cpu_irq_enable();
     446:	2201      	movs	r2, #1
     448:	4b13      	ldr	r3, [pc, #76]	; (498 <udi_cdc_tx_send+0x130>)
     44a:	701a      	strb	r2, [r3, #0]
     44c:	f3bf 8f5f 	dmb	sy
     450:	b662      	cpsie	i
     452:	e78f      	b.n	374 <udi_cdc_tx_send+0xc>
		buf_sel_trans = (buf_sel_trans==0)?1:0;
     454:	4262      	negs	r2, r4
     456:	4154      	adcs	r4, r2
     458:	b2e4      	uxtb	r4, r4
     45a:	e7b7      	b.n	3cc <udi_cdc_tx_send+0x64>
			udi_cdc_tx_sof_num[port] = udd_get_frame_number();
     45c:	4b13      	ldr	r3, [pc, #76]	; (4ac <udi_cdc_tx_send+0x144>)
     45e:	4798      	blx	r3
     460:	4b0b      	ldr	r3, [pc, #44]	; (490 <udi_cdc_tx_send+0x128>)
     462:	8018      	strh	r0, [r3, #0]
     464:	e002      	b.n	46c <udi_cdc_tx_send+0x104>
		udi_cdc_tx_sof_num[port] = 0; // Force next transfer without wait SOF
     466:	2200      	movs	r2, #0
     468:	4b09      	ldr	r3, [pc, #36]	; (490 <udi_cdc_tx_send+0x128>)
     46a:	801a      	strh	r2, [r3, #0]
			udi_cdc_tx_buf_nb[port][buf_sel_trans],
     46c:	0076      	lsls	r6, r6, #1
	udd_ep_run( ep,
     46e:	4b0c      	ldr	r3, [pc, #48]	; (4a0 <udi_cdc_tx_send+0x138>)
     470:	5af3      	ldrh	r3, [r6, r3]
			udi_cdc_tx_buf[port][buf_sel_trans],
     472:	01a4      	lsls	r4, r4, #6
     474:	4a0f      	ldr	r2, [pc, #60]	; (4b4 <udi_cdc_tx_send+0x14c>)
     476:	1914      	adds	r4, r2, r4
	udd_ep_run( ep,
     478:	4a0f      	ldr	r2, [pc, #60]	; (4b8 <udi_cdc_tx_send+0x150>)
     47a:	9200      	str	r2, [sp, #0]
     47c:	0022      	movs	r2, r4
     47e:	0029      	movs	r1, r5
     480:	2081      	movs	r0, #129	; 0x81
     482:	4c0e      	ldr	r4, [pc, #56]	; (4bc <udi_cdc_tx_send+0x154>)
     484:	47a0      	blx	r4
     486:	e775      	b.n	374 <udi_cdc_tx_send+0xc>
     488:	20000244 	.word	0x20000244
     48c:	00002bbd 	.word	0x00002bbd
     490:	20000240 	.word	0x20000240
     494:	00002bd1 	.word	0x00002bd1
     498:	200000e8 	.word	0x200000e8
     49c:	2000023c 	.word	0x2000023c
     4a0:	20000238 	.word	0x20000238
     4a4:	2000010a 	.word	0x2000010a
     4a8:	200001b4 	.word	0x200001b4
     4ac:	00002bc1 	.word	0x00002bc1
     4b0:	0000031f 	.word	0x0000031f
     4b4:	200001b8 	.word	0x200001b8
     4b8:	000004c1 	.word	0x000004c1
     4bc:	00002ec9 	.word	0x00002ec9

000004c0 <udi_cdc_data_sent>:
{
     4c0:	b510      	push	{r4, lr}
	if (UDD_EP_TRANSFER_OK != status) {
     4c2:	2800      	cmp	r0, #0
     4c4:	d000      	beq.n	4c8 <udi_cdc_data_sent+0x8>
}
     4c6:	bd10      	pop	{r4, pc}
	udi_cdc_tx_buf_nb[port][(udi_cdc_tx_buf_sel[port]==0)?1:0] = 0;
     4c8:	4b07      	ldr	r3, [pc, #28]	; (4e8 <udi_cdc_data_sent+0x28>)
     4ca:	781b      	ldrb	r3, [r3, #0]
     4cc:	425a      	negs	r2, r3
     4ce:	4153      	adcs	r3, r2
     4d0:	005b      	lsls	r3, r3, #1
     4d2:	2200      	movs	r2, #0
     4d4:	4905      	ldr	r1, [pc, #20]	; (4ec <udi_cdc_data_sent+0x2c>)
     4d6:	5258      	strh	r0, [r3, r1]
	udi_cdc_tx_both_buf_to_send[port] = false;
     4d8:	4b05      	ldr	r3, [pc, #20]	; (4f0 <udi_cdc_data_sent+0x30>)
     4da:	701a      	strb	r2, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
     4dc:	4b05      	ldr	r3, [pc, #20]	; (4f4 <udi_cdc_data_sent+0x34>)
     4de:	701a      	strb	r2, [r3, #0]
	udi_cdc_tx_send(port);
     4e0:	4b05      	ldr	r3, [pc, #20]	; (4f8 <udi_cdc_data_sent+0x38>)
     4e2:	4798      	blx	r3
     4e4:	e7ef      	b.n	4c6 <udi_cdc_data_sent+0x6>
     4e6:	46c0      	nop			; (mov r8, r8)
     4e8:	2000023c 	.word	0x2000023c
     4ec:	20000238 	.word	0x20000238
     4f0:	200001b4 	.word	0x200001b4
     4f4:	20000244 	.word	0x20000244
     4f8:	00000369 	.word	0x00000369

000004fc <udi_cdc_data_sof_notify>:
{
     4fc:	b510      	push	{r4, lr}
	udi_cdc_tx_send(port_notify);
     4fe:	2000      	movs	r0, #0
     500:	4b01      	ldr	r3, [pc, #4]	; (508 <udi_cdc_data_sof_notify+0xc>)
     502:	4798      	blx	r3
}
     504:	bd10      	pop	{r4, pc}
     506:	46c0      	nop			; (mov r8, r8)
     508:	00000369 	.word	0x00000369

0000050c <udi_cdc_ctrl_state_notify>:
{
     50c:	b510      	push	{r4, lr}
     50e:	b082      	sub	sp, #8
     510:	0008      	movs	r0, r1
	if ((!udi_cdc_serial_state_msg_ongoing[port])
     512:	4b0c      	ldr	r3, [pc, #48]	; (544 <udi_cdc_ctrl_state_notify+0x38>)
     514:	781b      	ldrb	r3, [r3, #0]
     516:	2b00      	cmp	r3, #0
     518:	d112      	bne.n	540 <udi_cdc_ctrl_state_notify+0x34>
			&& (udi_cdc_state[port] != uid_cdc_state_msg[port].value)) {
     51a:	4b0b      	ldr	r3, [pc, #44]	; (548 <udi_cdc_ctrl_state_notify+0x3c>)
     51c:	881b      	ldrh	r3, [r3, #0]
     51e:	b29b      	uxth	r3, r3
     520:	4a0a      	ldr	r2, [pc, #40]	; (54c <udi_cdc_ctrl_state_notify+0x40>)
     522:	8912      	ldrh	r2, [r2, #8]
     524:	429a      	cmp	r2, r3
     526:	d00b      	beq.n	540 <udi_cdc_ctrl_state_notify+0x34>
		uid_cdc_state_msg[port].value = udi_cdc_state[port];
     528:	4b07      	ldr	r3, [pc, #28]	; (548 <udi_cdc_ctrl_state_notify+0x3c>)
     52a:	881b      	ldrh	r3, [r3, #0]
     52c:	4a07      	ldr	r2, [pc, #28]	; (54c <udi_cdc_ctrl_state_notify+0x40>)
     52e:	8113      	strh	r3, [r2, #8]
				udd_ep_run(ep,
     530:	4b07      	ldr	r3, [pc, #28]	; (550 <udi_cdc_ctrl_state_notify+0x44>)
     532:	9300      	str	r3, [sp, #0]
     534:	230a      	movs	r3, #10
     536:	2100      	movs	r1, #0
     538:	4c06      	ldr	r4, [pc, #24]	; (554 <udi_cdc_ctrl_state_notify+0x48>)
     53a:	47a0      	blx	r4
		udi_cdc_serial_state_msg_ongoing[port] =
     53c:	4b01      	ldr	r3, [pc, #4]	; (544 <udi_cdc_ctrl_state_notify+0x38>)
     53e:	7018      	strb	r0, [r3, #0]
}
     540:	b002      	add	sp, #8
     542:	bd10      	pop	{r4, pc}
     544:	200001ac 	.word	0x200001ac
     548:	200001b0 	.word	0x200001b0
     54c:	20000248 	.word	0x20000248
     550:	000005b5 	.word	0x000005b5
     554:	00002ec9 	.word	0x00002ec9

00000558 <udi_cdc_ctrl_state_change>:
{
     558:	b500      	push	{lr}
     55a:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     55c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     560:	4258      	negs	r0, r3
     562:	4143      	adcs	r3, r0
     564:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     566:	b672      	cpsid	i
     568:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     56c:	2000      	movs	r0, #0
     56e:	4b0e      	ldr	r3, [pc, #56]	; (5a8 <udi_cdc_ctrl_state_change+0x50>)
     570:	7018      	strb	r0, [r3, #0]
	return flags;
     572:	9b01      	ldr	r3, [sp, #4]
	if (b_set) {
     574:	2900      	cmp	r1, #0
     576:	d011      	beq.n	59c <udi_cdc_ctrl_state_change+0x44>
		udi_cdc_state[port] |= bit_mask;
     578:	480c      	ldr	r0, [pc, #48]	; (5ac <udi_cdc_ctrl_state_change+0x54>)
     57a:	8801      	ldrh	r1, [r0, #0]
     57c:	430a      	orrs	r2, r1
     57e:	8002      	strh	r2, [r0, #0]
	if (cpu_irq_is_enabled_flags(flags))
     580:	2b00      	cmp	r3, #0
     582:	d005      	beq.n	590 <udi_cdc_ctrl_state_change+0x38>
		cpu_irq_enable();
     584:	2201      	movs	r2, #1
     586:	4b08      	ldr	r3, [pc, #32]	; (5a8 <udi_cdc_ctrl_state_change+0x50>)
     588:	701a      	strb	r2, [r3, #0]
     58a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     58e:	b662      	cpsie	i
	udi_cdc_ctrl_state_notify(port, ep_comm);
     590:	2183      	movs	r1, #131	; 0x83
     592:	2000      	movs	r0, #0
     594:	4b06      	ldr	r3, [pc, #24]	; (5b0 <udi_cdc_ctrl_state_change+0x58>)
     596:	4798      	blx	r3
}
     598:	b003      	add	sp, #12
     59a:	bd00      	pop	{pc}
		udi_cdc_state[port] &= ~(unsigned)bit_mask;
     59c:	4803      	ldr	r0, [pc, #12]	; (5ac <udi_cdc_ctrl_state_change+0x54>)
     59e:	8801      	ldrh	r1, [r0, #0]
     5a0:	4391      	bics	r1, r2
     5a2:	8001      	strh	r1, [r0, #0]
     5a4:	e7ec      	b.n	580 <udi_cdc_ctrl_state_change+0x28>
     5a6:	46c0      	nop			; (mov r8, r8)
     5a8:	200000e8 	.word	0x200000e8
     5ac:	200001b0 	.word	0x200001b0
     5b0:	0000050d 	.word	0x0000050d

000005b4 <udi_cdc_serial_state_msg_sent>:
{
     5b4:	b510      	push	{r4, lr}
	udi_cdc_serial_state_msg_ongoing[port] = false;
     5b6:	2100      	movs	r1, #0
     5b8:	4b07      	ldr	r3, [pc, #28]	; (5d8 <udi_cdc_serial_state_msg_sent+0x24>)
     5ba:	7019      	strb	r1, [r3, #0]
	udi_cdc_state[port] &= ~(CDC_SERIAL_STATE_BREAK |
     5bc:	4807      	ldr	r0, [pc, #28]	; (5dc <udi_cdc_serial_state_msg_sent+0x28>)
     5be:	8803      	ldrh	r3, [r0, #0]
     5c0:	247c      	movs	r4, #124	; 0x7c
     5c2:	43a3      	bics	r3, r4
     5c4:	8003      	strh	r3, [r0, #0]
	uid_cdc_state_msg[port].value &= ~(CDC_SERIAL_STATE_BREAK |
     5c6:	4806      	ldr	r0, [pc, #24]	; (5e0 <udi_cdc_serial_state_msg_sent+0x2c>)
     5c8:	8903      	ldrh	r3, [r0, #8]
     5ca:	43a3      	bics	r3, r4
     5cc:	8103      	strh	r3, [r0, #8]
	udi_cdc_ctrl_state_notify(port, ep);
     5ce:	0011      	movs	r1, r2
     5d0:	2000      	movs	r0, #0
     5d2:	4b04      	ldr	r3, [pc, #16]	; (5e4 <udi_cdc_serial_state_msg_sent+0x30>)
     5d4:	4798      	blx	r3
}
     5d6:	bd10      	pop	{r4, pc}
     5d8:	200001ac 	.word	0x200001ac
     5dc:	200001b0 	.word	0x200001b0
     5e0:	20000248 	.word	0x20000248
     5e4:	0000050d 	.word	0x0000050d

000005e8 <udi_cdc_data_disable>:
{
     5e8:	b510      	push	{r4, lr}
	udi_cdc_nb_data_enabled--;
     5ea:	4a06      	ldr	r2, [pc, #24]	; (604 <udi_cdc_data_disable+0x1c>)
     5ec:	7813      	ldrb	r3, [r2, #0]
     5ee:	3b01      	subs	r3, #1
     5f0:	b2db      	uxtb	r3, r3
     5f2:	7013      	strb	r3, [r2, #0]
	port = udi_cdc_nb_data_enabled;
     5f4:	7810      	ldrb	r0, [r2, #0]
     5f6:	b2c0      	uxtb	r0, r0
	UDI_CDC_DISABLE_EXT(port);
     5f8:	4b03      	ldr	r3, [pc, #12]	; (608 <udi_cdc_data_disable+0x20>)
     5fa:	4798      	blx	r3
	udi_cdc_data_running = false;
     5fc:	2200      	movs	r2, #0
     5fe:	4b03      	ldr	r3, [pc, #12]	; (60c <udi_cdc_data_disable+0x24>)
     600:	701a      	strb	r2, [r3, #0]
}
     602:	bd10      	pop	{r4, pc}
     604:	20000118 	.word	0x20000118
     608:	000001a9 	.word	0x000001a9
     60c:	2000010c 	.word	0x2000010c

00000610 <udi_cdc_comm_setup>:
{
     610:	b510      	push	{r4, lr}
	if (Udd_setup_is_in()) {
     612:	4b20      	ldr	r3, [pc, #128]	; (694 <udi_cdc_comm_setup+0x84>)
     614:	781a      	ldrb	r2, [r3, #0]
     616:	b253      	sxtb	r3, r2
     618:	2b00      	cmp	r3, #0
     61a:	db05      	blt.n	628 <udi_cdc_comm_setup+0x18>
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
     61c:	2360      	movs	r3, #96	; 0x60
     61e:	4013      	ands	r3, r2
	return false;  // request Not supported
     620:	2000      	movs	r0, #0
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
     622:	2b20      	cmp	r3, #32
     624:	d014      	beq.n	650 <udi_cdc_comm_setup+0x40>
}
     626:	bd10      	pop	{r4, pc}
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
     628:	2360      	movs	r3, #96	; 0x60
     62a:	4013      	ands	r3, r2
	return false;  // request Not supported
     62c:	2000      	movs	r0, #0
		if (Udd_setup_type() == USB_REQ_TYPE_CLASS) {
     62e:	2b20      	cmp	r3, #32
     630:	d1f9      	bne.n	626 <udi_cdc_comm_setup+0x16>
			switch (udd_g_ctrlreq.req.bRequest) {
     632:	4b18      	ldr	r3, [pc, #96]	; (694 <udi_cdc_comm_setup+0x84>)
     634:	785b      	ldrb	r3, [r3, #1]
     636:	2b21      	cmp	r3, #33	; 0x21
     638:	d129      	bne.n	68e <udi_cdc_comm_setup+0x7e>
						udd_g_ctrlreq.req.wLength)
     63a:	4b16      	ldr	r3, [pc, #88]	; (694 <udi_cdc_comm_setup+0x84>)
				if (sizeof(usb_cdc_line_coding_t) !=
     63c:	88db      	ldrh	r3, [r3, #6]
     63e:	2b07      	cmp	r3, #7
     640:	d1f1      	bne.n	626 <udi_cdc_comm_setup+0x16>
				udd_g_ctrlreq.payload =
     642:	4b14      	ldr	r3, [pc, #80]	; (694 <udi_cdc_comm_setup+0x84>)
     644:	4a14      	ldr	r2, [pc, #80]	; (698 <udi_cdc_comm_setup+0x88>)
     646:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
     648:	2207      	movs	r2, #7
     64a:	819a      	strh	r2, [r3, #12]
				return true;
     64c:	3001      	adds	r0, #1
     64e:	e7ea      	b.n	626 <udi_cdc_comm_setup+0x16>
			switch (udd_g_ctrlreq.req.bRequest) {
     650:	4b10      	ldr	r3, [pc, #64]	; (694 <udi_cdc_comm_setup+0x84>)
     652:	785b      	ldrb	r3, [r3, #1]
     654:	2b20      	cmp	r3, #32
     656:	d003      	beq.n	660 <udi_cdc_comm_setup+0x50>
     658:	2b22      	cmp	r3, #34	; 0x22
     65a:	d00f      	beq.n	67c <udi_cdc_comm_setup+0x6c>
	return false;  // request Not supported
     65c:	2000      	movs	r0, #0
     65e:	e7e2      	b.n	626 <udi_cdc_comm_setup+0x16>
						udd_g_ctrlreq.req.wLength)
     660:	4b0c      	ldr	r3, [pc, #48]	; (694 <udi_cdc_comm_setup+0x84>)
				if (sizeof(usb_cdc_line_coding_t) !=
     662:	88db      	ldrh	r3, [r3, #6]
					return false; // Error for USB host
     664:	2000      	movs	r0, #0
				if (sizeof(usb_cdc_line_coding_t) !=
     666:	2b07      	cmp	r3, #7
     668:	d1dd      	bne.n	626 <udi_cdc_comm_setup+0x16>
				udd_g_ctrlreq.callback =
     66a:	4b0a      	ldr	r3, [pc, #40]	; (694 <udi_cdc_comm_setup+0x84>)
     66c:	4a0b      	ldr	r2, [pc, #44]	; (69c <udi_cdc_comm_setup+0x8c>)
     66e:	611a      	str	r2, [r3, #16]
				udd_g_ctrlreq.payload =
     670:	4a09      	ldr	r2, [pc, #36]	; (698 <udi_cdc_comm_setup+0x88>)
     672:	609a      	str	r2, [r3, #8]
				udd_g_ctrlreq.payload_size =
     674:	2207      	movs	r2, #7
     676:	819a      	strh	r2, [r3, #12]
				return true;
     678:	3001      	adds	r0, #1
     67a:	e7d4      	b.n	626 <udi_cdc_comm_setup+0x16>
				UDI_CDC_SET_DTR_EXT(port, (0 !=
     67c:	4b05      	ldr	r3, [pc, #20]	; (694 <udi_cdc_comm_setup+0x84>)
     67e:	885b      	ldrh	r3, [r3, #2]
     680:	2101      	movs	r1, #1
     682:	4019      	ands	r1, r3
     684:	2000      	movs	r0, #0
     686:	4b06      	ldr	r3, [pc, #24]	; (6a0 <udi_cdc_comm_setup+0x90>)
     688:	4798      	blx	r3
				return true;
     68a:	2001      	movs	r0, #1
     68c:	e7cb      	b.n	626 <udi_cdc_comm_setup+0x16>
	return false;  // request Not supported
     68e:	2000      	movs	r0, #0
     690:	e7c9      	b.n	626 <udi_cdc_comm_setup+0x16>
     692:	46c0      	nop			; (mov r8, r8)
     694:	200005d0 	.word	0x200005d0
     698:	20000110 	.word	0x20000110
     69c:	000002ed 	.word	0x000002ed
     6a0:	000001c1 	.word	0x000001c1

000006a4 <udi_cdc_signal_overrun>:
{
	udi_cdc_ctrl_state_change(0, true, CDC_SERIAL_STATE_PARITY);
}

void udi_cdc_signal_overrun(void)
{
     6a4:	b510      	push	{r4, lr}
	udi_cdc_ctrl_state_change(0, true, CDC_SERIAL_STATE_OVERRUN);
     6a6:	2240      	movs	r2, #64	; 0x40
     6a8:	2101      	movs	r1, #1
     6aa:	2000      	movs	r0, #0
     6ac:	4b01      	ldr	r3, [pc, #4]	; (6b4 <udi_cdc_signal_overrun+0x10>)
     6ae:	4798      	blx	r3
}
     6b0:	bd10      	pop	{r4, pc}
     6b2:	46c0      	nop			; (mov r8, r8)
     6b4:	00000559 	.word	0x00000559

000006b8 <udi_cdc_multi_get_nb_received_data>:
{
	udi_cdc_ctrl_state_change(port, true, CDC_SERIAL_STATE_OVERRUN);
}

iram_size_t udi_cdc_multi_get_nb_received_data(uint8_t port)
{
     6b8:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     6ba:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     6be:	425a      	negs	r2, r3
     6c0:	4153      	adcs	r3, r2
     6c2:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     6c4:	b672      	cpsid	i
     6c6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     6ca:	2200      	movs	r2, #0
     6cc:	4b0a      	ldr	r3, [pc, #40]	; (6f8 <udi_cdc_multi_get_nb_received_data+0x40>)
     6ce:	701a      	strb	r2, [r3, #0]
	return flags;
     6d0:	9a01      	ldr	r2, [sp, #4]

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
     6d2:	4b0a      	ldr	r3, [pc, #40]	; (6fc <udi_cdc_multi_get_nb_received_data+0x44>)
     6d4:	8819      	ldrh	r1, [r3, #0]
	nb_received = udi_cdc_rx_buf_nb[port][udi_cdc_rx_buf_sel[port]] - pos;
     6d6:	4b0a      	ldr	r3, [pc, #40]	; (700 <udi_cdc_multi_get_nb_received_data+0x48>)
     6d8:	781b      	ldrb	r3, [r3, #0]
     6da:	005b      	lsls	r3, r3, #1
     6dc:	4809      	ldr	r0, [pc, #36]	; (704 <udi_cdc_multi_get_nb_received_data+0x4c>)
     6de:	5a18      	ldrh	r0, [r3, r0]
     6e0:	1a40      	subs	r0, r0, r1
	if (cpu_irq_is_enabled_flags(flags))
     6e2:	2a00      	cmp	r2, #0
     6e4:	d005      	beq.n	6f2 <udi_cdc_multi_get_nb_received_data+0x3a>
		cpu_irq_enable();
     6e6:	2201      	movs	r2, #1
     6e8:	4b03      	ldr	r3, [pc, #12]	; (6f8 <udi_cdc_multi_get_nb_received_data+0x40>)
     6ea:	701a      	strb	r2, [r3, #0]
     6ec:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     6f0:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return nb_received;
}
     6f2:	b002      	add	sp, #8
     6f4:	4770      	bx	lr
     6f6:	46c0      	nop			; (mov r8, r8)
     6f8:	200000e8 	.word	0x200000e8
     6fc:	200001a4 	.word	0x200001a4
     700:	200001a0 	.word	0x200001a0
     704:	2000019c 	.word	0x2000019c

00000708 <udi_cdc_multi_is_rx_ready>:
{
	return udi_cdc_multi_get_nb_received_data(0);
}

bool udi_cdc_multi_is_rx_ready(uint8_t port)
{
     708:	b510      	push	{r4, lr}
	return (udi_cdc_multi_get_nb_received_data(port) > 0);
     70a:	4b03      	ldr	r3, [pc, #12]	; (718 <udi_cdc_multi_is_rx_ready+0x10>)
     70c:	4798      	blx	r3
     70e:	1e43      	subs	r3, r0, #1
     710:	4198      	sbcs	r0, r3
     712:	b2c0      	uxtb	r0, r0
}
     714:	bd10      	pop	{r4, pc}
     716:	46c0      	nop			; (mov r8, r8)
     718:	000006b9 	.word	0x000006b9

0000071c <udi_cdc_rx_start>:
{
     71c:	b510      	push	{r4, lr}
     71e:	b084      	sub	sp, #16
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     720:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     724:	425a      	negs	r2, r3
     726:	4153      	adcs	r3, r2
     728:	9303      	str	r3, [sp, #12]
  __ASM volatile ("cpsid i" : : : "memory");
     72a:	b672      	cpsid	i
     72c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     730:	2200      	movs	r2, #0
     732:	4b22      	ldr	r3, [pc, #136]	; (7bc <udi_cdc_rx_start+0xa0>)
     734:	701a      	strb	r2, [r3, #0]
	return flags;
     736:	9b03      	ldr	r3, [sp, #12]
	buf_sel_trans = udi_cdc_rx_buf_sel[port];
     738:	4a21      	ldr	r2, [pc, #132]	; (7c0 <udi_cdc_rx_start+0xa4>)
     73a:	7814      	ldrb	r4, [r2, #0]
     73c:	b2e4      	uxtb	r4, r4
	if (udi_cdc_rx_trans_ongoing[port] ||
     73e:	4a21      	ldr	r2, [pc, #132]	; (7c4 <udi_cdc_rx_start+0xa8>)
     740:	7812      	ldrb	r2, [r2, #0]
     742:	2a00      	cmp	r2, #0
     744:	d107      	bne.n	756 <udi_cdc_rx_start+0x3a>
		(udi_cdc_rx_pos[port] < udi_cdc_rx_buf_nb[port][buf_sel_trans])) {
     746:	4a20      	ldr	r2, [pc, #128]	; (7c8 <udi_cdc_rx_start+0xac>)
     748:	8812      	ldrh	r2, [r2, #0]
     74a:	0061      	lsls	r1, r4, #1
     74c:	481f      	ldr	r0, [pc, #124]	; (7cc <udi_cdc_rx_start+0xb0>)
     74e:	5a09      	ldrh	r1, [r1, r0]
     750:	b292      	uxth	r2, r2
	if (udi_cdc_rx_trans_ongoing[port] ||
     752:	428a      	cmp	r2, r1
     754:	d20a      	bcs.n	76c <udi_cdc_rx_start+0x50>
		return false;
     756:	2000      	movs	r0, #0
	if (cpu_irq_is_enabled_flags(flags))
     758:	2b00      	cmp	r3, #0
     75a:	d005      	beq.n	768 <udi_cdc_rx_start+0x4c>
		cpu_irq_enable();
     75c:	2201      	movs	r2, #1
     75e:	4b17      	ldr	r3, [pc, #92]	; (7bc <udi_cdc_rx_start+0xa0>)
     760:	701a      	strb	r2, [r3, #0]
     762:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     766:	b662      	cpsie	i
}
     768:	b004      	add	sp, #16
     76a:	bd10      	pop	{r4, pc}
	udi_cdc_rx_pos[port] = 0;
     76c:	2100      	movs	r1, #0
     76e:	4a16      	ldr	r2, [pc, #88]	; (7c8 <udi_cdc_rx_start+0xac>)
     770:	8011      	strh	r1, [r2, #0]
	udi_cdc_rx_buf_sel[port] = (buf_sel_trans==0)?1:0;
     772:	4262      	negs	r2, r4
     774:	4162      	adcs	r2, r4
     776:	b2d2      	uxtb	r2, r2
     778:	4911      	ldr	r1, [pc, #68]	; (7c0 <udi_cdc_rx_start+0xa4>)
     77a:	700a      	strb	r2, [r1, #0]
	udi_cdc_rx_trans_ongoing[port] = true;
     77c:	2101      	movs	r1, #1
     77e:	4a11      	ldr	r2, [pc, #68]	; (7c4 <udi_cdc_rx_start+0xa8>)
     780:	7011      	strb	r1, [r2, #0]
	if (cpu_irq_is_enabled_flags(flags))
     782:	2b00      	cmp	r3, #0
     784:	d005      	beq.n	792 <udi_cdc_rx_start+0x76>
		cpu_irq_enable();
     786:	2201      	movs	r2, #1
     788:	4b0c      	ldr	r3, [pc, #48]	; (7bc <udi_cdc_rx_start+0xa0>)
     78a:	701a      	strb	r2, [r3, #0]
     78c:	f3bf 8f5f 	dmb	sy
     790:	b662      	cpsie	i
	if (udi_cdc_multi_is_rx_ready(port)) {
     792:	2000      	movs	r0, #0
     794:	4b0e      	ldr	r3, [pc, #56]	; (7d0 <udi_cdc_rx_start+0xb4>)
     796:	4798      	blx	r3
     798:	2800      	cmp	r0, #0
     79a:	d10a      	bne.n	7b2 <udi_cdc_rx_start+0x96>
			udi_cdc_rx_buf[port][buf_sel_trans],
     79c:	01a4      	lsls	r4, r4, #6
     79e:	4a0d      	ldr	r2, [pc, #52]	; (7d4 <udi_cdc_rx_start+0xb8>)
     7a0:	1912      	adds	r2, r2, r4
	return udd_ep_run(ep,
     7a2:	4b0d      	ldr	r3, [pc, #52]	; (7d8 <udi_cdc_rx_start+0xbc>)
     7a4:	9300      	str	r3, [sp, #0]
     7a6:	2340      	movs	r3, #64	; 0x40
     7a8:	2101      	movs	r1, #1
     7aa:	2002      	movs	r0, #2
     7ac:	4c0b      	ldr	r4, [pc, #44]	; (7dc <udi_cdc_rx_start+0xc0>)
     7ae:	47a0      	blx	r4
     7b0:	e7da      	b.n	768 <udi_cdc_rx_start+0x4c>
		UDI_CDC_RX_NOTIFY(port);
     7b2:	2000      	movs	r0, #0
     7b4:	4b0a      	ldr	r3, [pc, #40]	; (7e0 <udi_cdc_rx_start+0xc4>)
     7b6:	4798      	blx	r3
     7b8:	e7f0      	b.n	79c <udi_cdc_rx_start+0x80>
     7ba:	46c0      	nop			; (mov r8, r8)
     7bc:	200000e8 	.word	0x200000e8
     7c0:	200001a0 	.word	0x200001a0
     7c4:	200001a8 	.word	0x200001a8
     7c8:	200001a4 	.word	0x200001a4
     7cc:	2000019c 	.word	0x2000019c
     7d0:	00000709 	.word	0x00000709
     7d4:	2000011c 	.word	0x2000011c
     7d8:	00000875 	.word	0x00000875
     7dc:	00002ec9 	.word	0x00002ec9
     7e0:	00000151 	.word	0x00000151

000007e4 <udi_cdc_data_enable>:
{
     7e4:	b570      	push	{r4, r5, r6, lr}
	udi_cdc_nb_data_enabled = 0;
     7e6:	2400      	movs	r4, #0
     7e8:	4b15      	ldr	r3, [pc, #84]	; (840 <udi_cdc_data_enable+0x5c>)
     7ea:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_trans_ongoing[port] = false;
     7ec:	4b15      	ldr	r3, [pc, #84]	; (844 <udi_cdc_data_enable+0x60>)
     7ee:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_both_buf_to_send[port] = false;
     7f0:	4b15      	ldr	r3, [pc, #84]	; (848 <udi_cdc_data_enable+0x64>)
     7f2:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_sel[port] = 0;
     7f4:	4b15      	ldr	r3, [pc, #84]	; (84c <udi_cdc_data_enable+0x68>)
     7f6:	701c      	strb	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][0] = 0;
     7f8:	4b15      	ldr	r3, [pc, #84]	; (850 <udi_cdc_data_enable+0x6c>)
     7fa:	2500      	movs	r5, #0
     7fc:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_buf_nb[port][1] = 0;
     7fe:	805c      	strh	r4, [r3, #2]
	udi_cdc_tx_sof_num[port] = 0;
     800:	4b14      	ldr	r3, [pc, #80]	; (854 <udi_cdc_data_enable+0x70>)
     802:	801c      	strh	r4, [r3, #0]
	udi_cdc_tx_send(port);
     804:	2000      	movs	r0, #0
     806:	4b14      	ldr	r3, [pc, #80]	; (858 <udi_cdc_data_enable+0x74>)
     808:	4798      	blx	r3
	udi_cdc_rx_trans_ongoing[port] = false;
     80a:	4b14      	ldr	r3, [pc, #80]	; (85c <udi_cdc_data_enable+0x78>)
     80c:	701d      	strb	r5, [r3, #0]
	udi_cdc_rx_buf_sel[port] = 0;
     80e:	4b14      	ldr	r3, [pc, #80]	; (860 <udi_cdc_data_enable+0x7c>)
     810:	701d      	strb	r5, [r3, #0]
	udi_cdc_rx_buf_nb[port][0] = 0;
     812:	4b14      	ldr	r3, [pc, #80]	; (864 <udi_cdc_data_enable+0x80>)
     814:	801c      	strh	r4, [r3, #0]
	udi_cdc_rx_buf_nb[port][1] = 0;
     816:	805c      	strh	r4, [r3, #2]
	udi_cdc_rx_pos[port] = 0;
     818:	4b13      	ldr	r3, [pc, #76]	; (868 <udi_cdc_data_enable+0x84>)
     81a:	801c      	strh	r4, [r3, #0]
	if (!udi_cdc_rx_start(port)) {
     81c:	2000      	movs	r0, #0
     81e:	4b13      	ldr	r3, [pc, #76]	; (86c <udi_cdc_data_enable+0x88>)
     820:	4798      	blx	r3
     822:	2800      	cmp	r0, #0
     824:	d007      	beq.n	836 <udi_cdc_data_enable+0x52>
	udi_cdc_nb_data_enabled++;
     826:	4a06      	ldr	r2, [pc, #24]	; (840 <udi_cdc_data_enable+0x5c>)
     828:	7813      	ldrb	r3, [r2, #0]
     82a:	3301      	adds	r3, #1
     82c:	b2db      	uxtb	r3, r3
     82e:	7013      	strb	r3, [r2, #0]
	if (udi_cdc_nb_data_enabled == UDI_CDC_PORT_NB) {
     830:	7813      	ldrb	r3, [r2, #0]
     832:	2b01      	cmp	r3, #1
     834:	d000      	beq.n	838 <udi_cdc_data_enable+0x54>
}
     836:	bd70      	pop	{r4, r5, r6, pc}
		udi_cdc_data_running = true;
     838:	2201      	movs	r2, #1
     83a:	4b0d      	ldr	r3, [pc, #52]	; (870 <udi_cdc_data_enable+0x8c>)
     83c:	701a      	strb	r2, [r3, #0]
     83e:	e7fa      	b.n	836 <udi_cdc_data_enable+0x52>
     840:	20000118 	.word	0x20000118
     844:	20000244 	.word	0x20000244
     848:	200001b4 	.word	0x200001b4
     84c:	2000023c 	.word	0x2000023c
     850:	20000238 	.word	0x20000238
     854:	20000240 	.word	0x20000240
     858:	00000369 	.word	0x00000369
     85c:	200001a8 	.word	0x200001a8
     860:	200001a0 	.word	0x200001a0
     864:	2000019c 	.word	0x2000019c
     868:	200001a4 	.word	0x200001a4
     86c:	0000071d 	.word	0x0000071d
     870:	2000010c 	.word	0x2000010c

00000874 <udi_cdc_data_received>:
{
     874:	b510      	push	{r4, lr}
     876:	b082      	sub	sp, #8
     878:	0014      	movs	r4, r2
	if (UDD_EP_TRANSFER_OK != status) {
     87a:	2800      	cmp	r0, #0
     87c:	d110      	bne.n	8a0 <udi_cdc_data_received+0x2c>
	buf_sel_trans = (udi_cdc_rx_buf_sel[port]==0)?1:0;
     87e:	4b0f      	ldr	r3, [pc, #60]	; (8bc <udi_cdc_data_received+0x48>)
     880:	781a      	ldrb	r2, [r3, #0]
     882:	4253      	negs	r3, r2
     884:	415a      	adcs	r2, r3
     886:	b2d2      	uxtb	r2, r2
	if (!n) {
     888:	2900      	cmp	r1, #0
     88a:	d00b      	beq.n	8a4 <udi_cdc_data_received+0x30>
	udi_cdc_rx_buf_nb[port][buf_sel_trans] = n;
     88c:	b289      	uxth	r1, r1
     88e:	0052      	lsls	r2, r2, #1
     890:	4b0b      	ldr	r3, [pc, #44]	; (8c0 <udi_cdc_data_received+0x4c>)
     892:	52d1      	strh	r1, [r2, r3]
	udi_cdc_rx_trans_ongoing[port] = false;
     894:	2200      	movs	r2, #0
     896:	4b0b      	ldr	r3, [pc, #44]	; (8c4 <udi_cdc_data_received+0x50>)
     898:	701a      	strb	r2, [r3, #0]
	udi_cdc_rx_start(port);
     89a:	2000      	movs	r0, #0
     89c:	4b0a      	ldr	r3, [pc, #40]	; (8c8 <udi_cdc_data_received+0x54>)
     89e:	4798      	blx	r3
}
     8a0:	b002      	add	sp, #8
     8a2:	bd10      	pop	{r4, pc}
				udi_cdc_rx_buf[port][buf_sel_trans],
     8a4:	0192      	lsls	r2, r2, #6
     8a6:	4b09      	ldr	r3, [pc, #36]	; (8cc <udi_cdc_data_received+0x58>)
     8a8:	189a      	adds	r2, r3, r2
		udd_ep_run( ep,
     8aa:	4b09      	ldr	r3, [pc, #36]	; (8d0 <udi_cdc_data_received+0x5c>)
     8ac:	9300      	str	r3, [sp, #0]
     8ae:	2340      	movs	r3, #64	; 0x40
     8b0:	3101      	adds	r1, #1
     8b2:	0020      	movs	r0, r4
     8b4:	4c07      	ldr	r4, [pc, #28]	; (8d4 <udi_cdc_data_received+0x60>)
     8b6:	47a0      	blx	r4
		return;
     8b8:	e7f2      	b.n	8a0 <udi_cdc_data_received+0x2c>
     8ba:	46c0      	nop			; (mov r8, r8)
     8bc:	200001a0 	.word	0x200001a0
     8c0:	2000019c 	.word	0x2000019c
     8c4:	200001a8 	.word	0x200001a8
     8c8:	0000071d 	.word	0x0000071d
     8cc:	2000011c 	.word	0x2000011c
     8d0:	00000875 	.word	0x00000875
     8d4:	00002ec9 	.word	0x00002ec9

000008d8 <udi_cdc_is_rx_ready>:

bool udi_cdc_is_rx_ready(void)
{
     8d8:	b510      	push	{r4, lr}
	return udi_cdc_multi_is_rx_ready(0);
     8da:	2000      	movs	r0, #0
     8dc:	4b01      	ldr	r3, [pc, #4]	; (8e4 <udi_cdc_is_rx_ready+0xc>)
     8de:	4798      	blx	r3
}
     8e0:	bd10      	pop	{r4, pc}
     8e2:	46c0      	nop			; (mov r8, r8)
     8e4:	00000709 	.word	0x00000709

000008e8 <udi_cdc_multi_getc>:

int udi_cdc_multi_getc(uint8_t port)
{
     8e8:	b5f0      	push	{r4, r5, r6, r7, lr}
     8ea:	46d6      	mov	lr, sl
     8ec:	464f      	mov	r7, r9
     8ee:	4646      	mov	r6, r8
     8f0:	b5c0      	push	{r6, r7, lr}
     8f2:	b082      	sub	sp, #8

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
     8f4:	4b27      	ldr	r3, [pc, #156]	; (994 <udi_cdc_multi_getc+0xac>)
     8f6:	799b      	ldrb	r3, [r3, #6]
     8f8:	3b09      	subs	r3, #9
     8fa:	425a      	negs	r2, r3
     8fc:	4153      	adcs	r3, r2
     8fe:	b2db      	uxtb	r3, r3
     900:	4699      	mov	r9, r3
	int rx_data = 0;
     902:	2300      	movs	r3, #0
     904:	469c      	mov	ip, r3
	cpu_irq_disable();
     906:	4b24      	ldr	r3, [pc, #144]	; (998 <udi_cdc_multi_getc+0xb0>)
     908:	4698      	mov	r8, r3
     90a:	2700      	movs	r7, #0

udi_cdc_getc_process_one_byte:
	// Check available data
	flags = cpu_irq_save();
	pos = udi_cdc_rx_pos[port];
     90c:	4e23      	ldr	r6, [pc, #140]	; (99c <udi_cdc_multi_getc+0xb4>)
	buf_sel = udi_cdc_rx_buf_sel[port];
     90e:	4c24      	ldr	r4, [pc, #144]	; (9a0 <udi_cdc_multi_getc+0xb8>)
     910:	e005      	b.n	91e <udi_cdc_multi_getc+0x36>
	again = pos >= udi_cdc_rx_buf_nb[port][buf_sel];
	cpu_irq_restore(flags);
	while (again) {
     912:	428b      	cmp	r3, r1
     914:	d329      	bcc.n	96a <udi_cdc_multi_getc+0x82>
		if (!udi_cdc_data_running) {
     916:	4b23      	ldr	r3, [pc, #140]	; (9a4 <udi_cdc_multi_getc+0xbc>)
     918:	781b      	ldrb	r3, [r3, #0]
     91a:	2b00      	cmp	r3, #0
     91c:	d01d      	beq.n	95a <udi_cdc_multi_getc+0x72>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     91e:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     922:	425a      	negs	r2, r3
     924:	4153      	adcs	r3, r2
     926:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     928:	b672      	cpsid	i
     92a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     92e:	4643      	mov	r3, r8
     930:	701f      	strb	r7, [r3, #0]
	return flags;
     932:	9801      	ldr	r0, [sp, #4]
	pos = udi_cdc_rx_pos[port];
     934:	8833      	ldrh	r3, [r6, #0]
     936:	b29b      	uxth	r3, r3
	buf_sel = udi_cdc_rx_buf_sel[port];
     938:	7822      	ldrb	r2, [r4, #0]
     93a:	b2d2      	uxtb	r2, r2
	again = pos >= udi_cdc_rx_buf_nb[port][buf_sel];
     93c:	0055      	lsls	r5, r2, #1
     93e:	491a      	ldr	r1, [pc, #104]	; (9a8 <udi_cdc_multi_getc+0xc0>)
     940:	5a69      	ldrh	r1, [r5, r1]
     942:	b289      	uxth	r1, r1
	if (cpu_irq_is_enabled_flags(flags))
     944:	2800      	cmp	r0, #0
     946:	d0e4      	beq.n	912 <udi_cdc_multi_getc+0x2a>
		cpu_irq_enable();
     948:	2001      	movs	r0, #1
     94a:	4682      	mov	sl, r0
     94c:	4812      	ldr	r0, [pc, #72]	; (998 <udi_cdc_multi_getc+0xb0>)
     94e:	4655      	mov	r5, sl
     950:	7005      	strb	r5, [r0, #0]
     952:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     956:	b662      	cpsie	i
     958:	e7db      	b.n	912 <udi_cdc_multi_getc+0x2a>
			return 0;
     95a:	2500      	movs	r5, #0
		b_databit_9 = false;
		rx_data = rx_data << 8;
		goto udi_cdc_getc_process_one_byte;
	}
	return rx_data;
}
     95c:	0028      	movs	r0, r5
     95e:	b002      	add	sp, #8
     960:	bc1c      	pop	{r2, r3, r4}
     962:	4690      	mov	r8, r2
     964:	4699      	mov	r9, r3
     966:	46a2      	mov	sl, r4
     968:	bdf0      	pop	{r4, r5, r6, r7, pc}
	rx_data |= udi_cdc_rx_buf[port][buf_sel][pos];
     96a:	0192      	lsls	r2, r2, #6
     96c:	490f      	ldr	r1, [pc, #60]	; (9ac <udi_cdc_multi_getc+0xc4>)
     96e:	188a      	adds	r2, r1, r2
     970:	5cd2      	ldrb	r2, [r2, r3]
     972:	4665      	mov	r5, ip
     974:	4315      	orrs	r5, r2
	udi_cdc_rx_pos[port] = pos+1;
     976:	3301      	adds	r3, #1
     978:	b29b      	uxth	r3, r3
     97a:	4a08      	ldr	r2, [pc, #32]	; (99c <udi_cdc_multi_getc+0xb4>)
     97c:	8013      	strh	r3, [r2, #0]
	udi_cdc_rx_start(port);
     97e:	2000      	movs	r0, #0
     980:	4b0b      	ldr	r3, [pc, #44]	; (9b0 <udi_cdc_multi_getc+0xc8>)
     982:	4798      	blx	r3
	if (b_databit_9) {
     984:	464b      	mov	r3, r9
     986:	2b00      	cmp	r3, #0
     988:	d0e8      	beq.n	95c <udi_cdc_multi_getc+0x74>
		rx_data = rx_data << 8;
     98a:	022b      	lsls	r3, r5, #8
     98c:	469c      	mov	ip, r3
		b_databit_9 = false;
     98e:	2300      	movs	r3, #0
     990:	4699      	mov	r9, r3
		goto udi_cdc_getc_process_one_byte;
     992:	e7c4      	b.n	91e <udi_cdc_multi_getc+0x36>
     994:	20000110 	.word	0x20000110
     998:	200000e8 	.word	0x200000e8
     99c:	200001a4 	.word	0x200001a4
     9a0:	200001a0 	.word	0x200001a0
     9a4:	2000010c 	.word	0x2000010c
     9a8:	2000019c 	.word	0x2000019c
     9ac:	2000011c 	.word	0x2000011c
     9b0:	0000071d 	.word	0x0000071d

000009b4 <udi_cdc_getc>:

int udi_cdc_getc(void)
{
     9b4:	b510      	push	{r4, lr}
	return udi_cdc_multi_getc(0);
     9b6:	2000      	movs	r0, #0
     9b8:	4b01      	ldr	r3, [pc, #4]	; (9c0 <udi_cdc_getc+0xc>)
     9ba:	4798      	blx	r3
}
     9bc:	bd10      	pop	{r4, pc}
     9be:	46c0      	nop			; (mov r8, r8)
     9c0:	000008e9 	.word	0x000008e9

000009c4 <udi_cdc_multi_get_free_tx_buffer>:
{
	return udi_cdc_multi_read_buf(0, buf, size);
}

iram_size_t udi_cdc_multi_get_free_tx_buffer(uint8_t port)
{
     9c4:	b082      	sub	sp, #8
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     9c6:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     9ca:	425a      	negs	r2, r3
     9cc:	4153      	adcs	r3, r2
     9ce:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     9d0:	b672      	cpsid	i
     9d2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     9d6:	2200      	movs	r2, #0
     9d8:	4b14      	ldr	r3, [pc, #80]	; (a2c <udi_cdc_multi_get_free_tx_buffer+0x68>)
     9da:	701a      	strb	r2, [r3, #0]
	return flags;
     9dc:	9901      	ldr	r1, [sp, #4]
#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
     9de:	4b14      	ldr	r3, [pc, #80]	; (a30 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
     9e0:	781b      	ldrb	r3, [r3, #0]
     9e2:	b2db      	uxtb	r3, r3
	buf_sel_nb = udi_cdc_tx_buf_nb[port][buf_sel];
     9e4:	0058      	lsls	r0, r3, #1
     9e6:	4a13      	ldr	r2, [pc, #76]	; (a34 <udi_cdc_multi_get_free_tx_buffer+0x70>)
     9e8:	5a82      	ldrh	r2, [r0, r2]
	if (buf_sel_nb == UDI_CDC_TX_BUFFERS) {
     9ea:	2a40      	cmp	r2, #64	; 0x40
     9ec:	d00b      	beq.n	a06 <udi_cdc_multi_get_free_tx_buffer+0x42>
			udi_cdc_tx_both_buf_to_send[port] = true;
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
			buf_sel_nb = 0;
		}
	}
	retval = UDI_CDC_TX_BUFFERS - buf_sel_nb;  
     9ee:	2040      	movs	r0, #64	; 0x40
     9f0:	1a80      	subs	r0, r0, r2
	if (cpu_irq_is_enabled_flags(flags))
     9f2:	2900      	cmp	r1, #0
     9f4:	d005      	beq.n	a02 <udi_cdc_multi_get_free_tx_buffer+0x3e>
		cpu_irq_enable();
     9f6:	2201      	movs	r2, #1
     9f8:	4b0c      	ldr	r3, [pc, #48]	; (a2c <udi_cdc_multi_get_free_tx_buffer+0x68>)
     9fa:	701a      	strb	r2, [r3, #0]
     9fc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     a00:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return retval;
}
     a02:	b002      	add	sp, #8
     a04:	4770      	bx	lr
		if ((!udi_cdc_tx_trans_ongoing[port])
     a06:	480c      	ldr	r0, [pc, #48]	; (a38 <udi_cdc_multi_get_free_tx_buffer+0x74>)
     a08:	7800      	ldrb	r0, [r0, #0]
     a0a:	2800      	cmp	r0, #0
     a0c:	d1ef      	bne.n	9ee <udi_cdc_multi_get_free_tx_buffer+0x2a>
			&& (!udi_cdc_tx_both_buf_to_send[port])) {
     a0e:	480b      	ldr	r0, [pc, #44]	; (a3c <udi_cdc_multi_get_free_tx_buffer+0x78>)
     a10:	7800      	ldrb	r0, [r0, #0]
     a12:	2800      	cmp	r0, #0
     a14:	d1eb      	bne.n	9ee <udi_cdc_multi_get_free_tx_buffer+0x2a>
			udi_cdc_tx_both_buf_to_send[port] = true;
     a16:	3001      	adds	r0, #1
     a18:	4a08      	ldr	r2, [pc, #32]	; (a3c <udi_cdc_multi_get_free_tx_buffer+0x78>)
     a1a:	7010      	strb	r0, [r2, #0]
			udi_cdc_tx_buf_sel[port] = (buf_sel == 0)? 1 : 0;
     a1c:	425a      	negs	r2, r3
     a1e:	4153      	adcs	r3, r2
     a20:	b2db      	uxtb	r3, r3
     a22:	4a03      	ldr	r2, [pc, #12]	; (a30 <udi_cdc_multi_get_free_tx_buffer+0x6c>)
     a24:	7013      	strb	r3, [r2, #0]
			buf_sel_nb = 0;
     a26:	2200      	movs	r2, #0
     a28:	e7e1      	b.n	9ee <udi_cdc_multi_get_free_tx_buffer+0x2a>
     a2a:	46c0      	nop			; (mov r8, r8)
     a2c:	200000e8 	.word	0x200000e8
     a30:	2000023c 	.word	0x2000023c
     a34:	20000238 	.word	0x20000238
     a38:	20000244 	.word	0x20000244
     a3c:	200001b4 	.word	0x200001b4

00000a40 <udi_cdc_multi_is_tx_ready>:
{
	return udi_cdc_multi_get_free_tx_buffer(0);
}

bool udi_cdc_multi_is_tx_ready(uint8_t port)
{
     a40:	b510      	push	{r4, lr}
	return (udi_cdc_multi_get_free_tx_buffer(port) != 0);
     a42:	4b03      	ldr	r3, [pc, #12]	; (a50 <udi_cdc_multi_is_tx_ready+0x10>)
     a44:	4798      	blx	r3
     a46:	1e43      	subs	r3, r0, #1
     a48:	4198      	sbcs	r0, r3
     a4a:	b2c0      	uxtb	r0, r0
}
     a4c:	bd10      	pop	{r4, pc}
     a4e:	46c0      	nop			; (mov r8, r8)
     a50:	000009c5 	.word	0x000009c5

00000a54 <udi_cdc_is_tx_ready>:

bool udi_cdc_is_tx_ready(void)
{
     a54:	b510      	push	{r4, lr}
	return udi_cdc_multi_is_tx_ready(0);
     a56:	2000      	movs	r0, #0
     a58:	4b01      	ldr	r3, [pc, #4]	; (a60 <udi_cdc_is_tx_ready+0xc>)
     a5a:	4798      	blx	r3
}
     a5c:	bd10      	pop	{r4, pc}
     a5e:	46c0      	nop			; (mov r8, r8)
     a60:	00000a41 	.word	0x00000a41

00000a64 <udi_cdc_multi_putc>:

int udi_cdc_multi_putc(uint8_t port, int value)
{
     a64:	b5f0      	push	{r4, r5, r6, r7, lr}
     a66:	46de      	mov	lr, fp
     a68:	4657      	mov	r7, sl
     a6a:	464e      	mov	r6, r9
     a6c:	4645      	mov	r5, r8
     a6e:	b5e0      	push	{r5, r6, r7, lr}
     a70:	b083      	sub	sp, #12
     a72:	000c      	movs	r4, r1

#if UDI_CDC_PORT_NB == 1 // To optimize code
	port = 0;
#endif

	b_databit_9 = (9 == udi_cdc_line_coding[port].bDataBits);
     a74:	4b22      	ldr	r3, [pc, #136]	; (b00 <udi_cdc_multi_putc+0x9c>)
     a76:	799d      	ldrb	r5, [r3, #6]
     a78:	3d09      	subs	r5, #9
     a7a:	426b      	negs	r3, r5
     a7c:	415d      	adcs	r5, r3
     a7e:	b2ed      	uxtb	r5, r5

udi_cdc_putc_process_one_byte:
	// Check available space
	if (!udi_cdc_multi_is_tx_ready(port)) {
     a80:	4e20      	ldr	r6, [pc, #128]	; (b04 <udi_cdc_multi_putc+0xa0>)
	cpu_irq_disable();
     a82:	4b21      	ldr	r3, [pc, #132]	; (b08 <udi_cdc_multi_putc+0xa4>)
     a84:	4698      	mov	r8, r3
		goto udi_cdc_putc_process_one_byte;
	}

	// Write value
	flags = cpu_irq_save();
	buf_sel = udi_cdc_tx_buf_sel[port];
     a86:	4b21      	ldr	r3, [pc, #132]	; (b0c <udi_cdc_multi_putc+0xa8>)
     a88:	469a      	mov	sl, r3
     a8a:	e027      	b.n	adc <udi_cdc_multi_putc+0x78>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     a8c:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     a90:	425a      	negs	r2, r3
     a92:	4153      	adcs	r3, r2
     a94:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     a96:	b672      	cpsid	i
     a98:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     a9c:	2300      	movs	r3, #0
     a9e:	4642      	mov	r2, r8
     aa0:	7013      	strb	r3, [r2, #0]
	return flags;
     aa2:	9b01      	ldr	r3, [sp, #4]
     aa4:	469b      	mov	fp, r3
     aa6:	4653      	mov	r3, sl
     aa8:	781b      	ldrb	r3, [r3, #0]
     aaa:	b2db      	uxtb	r3, r3
	udi_cdc_tx_buf[port][buf_sel][udi_cdc_tx_buf_nb[port][buf_sel]++] = value;
     aac:	4a18      	ldr	r2, [pc, #96]	; (b10 <udi_cdc_multi_putc+0xac>)
     aae:	4694      	mov	ip, r2
     ab0:	005f      	lsls	r7, r3, #1
     ab2:	5ab9      	ldrh	r1, [r7, r2]
     ab4:	1c4a      	adds	r2, r1, #1
     ab6:	4660      	mov	r0, ip
     ab8:	523a      	strh	r2, [r7, r0]
     aba:	019b      	lsls	r3, r3, #6
     abc:	4a15      	ldr	r2, [pc, #84]	; (b14 <udi_cdc_multi_putc+0xb0>)
     abe:	18d3      	adds	r3, r2, r3
     ac0:	545c      	strb	r4, [r3, r1]
	if (cpu_irq_is_enabled_flags(flags))
     ac2:	465b      	mov	r3, fp
     ac4:	2b00      	cmp	r3, #0
     ac6:	d005      	beq.n	ad4 <udi_cdc_multi_putc+0x70>
		cpu_irq_enable();
     ac8:	2201      	movs	r2, #1
     aca:	4b0f      	ldr	r3, [pc, #60]	; (b08 <udi_cdc_multi_putc+0xa4>)
     acc:	701a      	strb	r2, [r3, #0]
     ace:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     ad2:	b662      	cpsie	i
	cpu_irq_restore(flags);

	if (b_databit_9) {
     ad4:	2d00      	cmp	r5, #0
     ad6:	d010      	beq.n	afa <udi_cdc_multi_putc+0x96>
		// Send MSB
		b_databit_9 = false;
		value = value >> 8;
     ad8:	1224      	asrs	r4, r4, #8
		b_databit_9 = false;
     ada:	2500      	movs	r5, #0
	if (!udi_cdc_multi_is_tx_ready(port)) {
     adc:	2000      	movs	r0, #0
     ade:	47b0      	blx	r6
     ae0:	2800      	cmp	r0, #0
     ae2:	d1d3      	bne.n	a8c <udi_cdc_multi_putc+0x28>
		if (!udi_cdc_data_running) {
     ae4:	4b0c      	ldr	r3, [pc, #48]	; (b18 <udi_cdc_multi_putc+0xb4>)
     ae6:	781b      	ldrb	r3, [r3, #0]
     ae8:	2b00      	cmp	r3, #0
     aea:	d1f7      	bne.n	adc <udi_cdc_multi_putc+0x78>
		goto udi_cdc_putc_process_one_byte;
	}
	return true;
}
     aec:	b003      	add	sp, #12
     aee:	bc3c      	pop	{r2, r3, r4, r5}
     af0:	4690      	mov	r8, r2
     af2:	4699      	mov	r9, r3
     af4:	46a2      	mov	sl, r4
     af6:	46ab      	mov	fp, r5
     af8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	return true;
     afa:	2001      	movs	r0, #1
     afc:	e7f6      	b.n	aec <udi_cdc_multi_putc+0x88>
     afe:	46c0      	nop			; (mov r8, r8)
     b00:	20000110 	.word	0x20000110
     b04:	00000a41 	.word	0x00000a41
     b08:	200000e8 	.word	0x200000e8
     b0c:	2000023c 	.word	0x2000023c
     b10:	20000238 	.word	0x20000238
     b14:	200001b8 	.word	0x200001b8
     b18:	2000010c 	.word	0x2000010c

00000b1c <udi_cdc_putc>:

int udi_cdc_putc(int value)
{
     b1c:	b510      	push	{r4, lr}
     b1e:	0001      	movs	r1, r0
	return udi_cdc_multi_putc(0, value);
     b20:	2000      	movs	r0, #0
     b22:	4b01      	ldr	r3, [pc, #4]	; (b28 <udi_cdc_putc+0xc>)
     b24:	4798      	blx	r3
}
     b26:	bd10      	pop	{r4, pc}
     b28:	00000a65 	.word	0x00000a65

00000b2c <udc_next_desc_in_iface>:
 * \return address of specific descriptor found
 * \return NULL if it is the end of global interface descriptor
 */
static usb_conf_desc_t UDC_DESC_STORAGE *udc_next_desc_in_iface(usb_conf_desc_t
		UDC_DESC_STORAGE * desc, uint8_t desc_id)
{
     b2c:	b510      	push	{r4, lr}
			udc_ptr_conf->desc +
     b2e:	4b11      	ldr	r3, [pc, #68]	; (b74 <udc_next_desc_in_iface+0x48>)
     b30:	681b      	ldr	r3, [r3, #0]
     b32:	681a      	ldr	r2, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
     b34:	7894      	ldrb	r4, [r2, #2]
     b36:	78d3      	ldrb	r3, [r2, #3]
     b38:	021b      	lsls	r3, r3, #8
     b3a:	4323      	orrs	r3, r4
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
     b3c:	18d2      	adds	r2, r2, r3
	usb_conf_desc_t UDC_DESC_STORAGE *ptr_eof_desc;

	ptr_eof_desc = udc_get_eof_conf();
	// Go to next descriptor
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
			desc->bLength);
     b3e:	7803      	ldrb	r3, [r0, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
     b40:	18c0      	adds	r0, r0, r3
	// Check the end of configuration descriptor
	while (ptr_eof_desc > desc) {
     b42:	4290      	cmp	r0, r2
     b44:	d210      	bcs.n	b68 <udc_next_desc_in_iface+0x3c>
		// If new interface descriptor is found,
		// then it is the end of the current global interface descriptor
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
     b46:	7843      	ldrb	r3, [r0, #1]
     b48:	2b04      	cmp	r3, #4
     b4a:	d00f      	beq.n	b6c <udc_next_desc_in_iface+0x40>
			break; // End of global interface descriptor
		}
		if (desc_id == desc->bDescriptorType) {
     b4c:	428b      	cmp	r3, r1
     b4e:	d00a      	beq.n	b66 <udc_next_desc_in_iface+0x3a>
			return desc; // Specific descriptor found
		}
		// Go to next descriptor
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
				desc->bLength);
     b50:	7803      	ldrb	r3, [r0, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
     b52:	18c0      	adds	r0, r0, r3
	while (ptr_eof_desc > desc) {
     b54:	4290      	cmp	r0, r2
     b56:	d205      	bcs.n	b64 <udc_next_desc_in_iface+0x38>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
     b58:	7843      	ldrb	r3, [r0, #1]
     b5a:	2b04      	cmp	r3, #4
     b5c:	d008      	beq.n	b70 <udc_next_desc_in_iface+0x44>
		if (desc_id == desc->bDescriptorType) {
     b5e:	428b      	cmp	r3, r1
     b60:	d1f6      	bne.n	b50 <udc_next_desc_in_iface+0x24>
     b62:	e000      	b.n	b66 <udc_next_desc_in_iface+0x3a>
	}
	return NULL; // No specific descriptor found
     b64:	2000      	movs	r0, #0
}
     b66:	bd10      	pop	{r4, pc}
	return NULL; // No specific descriptor found
     b68:	2000      	movs	r0, #0
     b6a:	e7fc      	b.n	b66 <udc_next_desc_in_iface+0x3a>
     b6c:	2000      	movs	r0, #0
     b6e:	e7fa      	b.n	b66 <udc_next_desc_in_iface+0x3a>
     b70:	2000      	movs	r0, #0
     b72:	e7f8      	b.n	b66 <udc_next_desc_in_iface+0x3a>
     b74:	20000260 	.word	0x20000260

00000b78 <udc_valid_address>:
/**
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
     b78:	b510      	push	{r4, lr}
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
     b7a:	4b03      	ldr	r3, [pc, #12]	; (b88 <udc_valid_address+0x10>)
     b7c:	885b      	ldrh	r3, [r3, #2]
     b7e:	207f      	movs	r0, #127	; 0x7f
     b80:	4018      	ands	r0, r3
     b82:	4b02      	ldr	r3, [pc, #8]	; (b8c <udc_valid_address+0x14>)
     b84:	4798      	blx	r3
}
     b86:	bd10      	pop	{r4, pc}
     b88:	200005d0 	.word	0x200005d0
     b8c:	000030a1 	.word	0x000030a1

00000b90 <udc_update_iface_desc>:
{
     b90:	b570      	push	{r4, r5, r6, lr}
	if (0 == udc_num_configuration) {
     b92:	4b19      	ldr	r3, [pc, #100]	; (bf8 <udc_update_iface_desc+0x68>)
     b94:	781b      	ldrb	r3, [r3, #0]
		return false;
     b96:	2200      	movs	r2, #0
	if (0 == udc_num_configuration) {
     b98:	2b00      	cmp	r3, #0
     b9a:	d029      	beq.n	bf0 <udc_update_iface_desc+0x60>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
     b9c:	4b17      	ldr	r3, [pc, #92]	; (bfc <udc_update_iface_desc+0x6c>)
     b9e:	681b      	ldr	r3, [r3, #0]
     ba0:	681b      	ldr	r3, [r3, #0]
     ba2:	791c      	ldrb	r4, [r3, #4]
     ba4:	4284      	cmp	r4, r0
     ba6:	d923      	bls.n	bf0 <udc_update_iface_desc+0x60>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
     ba8:	4a15      	ldr	r2, [pc, #84]	; (c00 <udc_update_iface_desc+0x70>)
     baa:	6013      	str	r3, [r2, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
     bac:	789a      	ldrb	r2, [r3, #2]
     bae:	78dc      	ldrb	r4, [r3, #3]
     bb0:	0224      	lsls	r4, r4, #8
     bb2:	4314      	orrs	r4, r2
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
     bb4:	191c      	adds	r4, r3, r4
	while (ptr_end_desc >
     bb6:	42a3      	cmp	r3, r4
     bb8:	d21c      	bcs.n	bf4 <udc_update_iface_desc+0x64>
     bba:	2500      	movs	r5, #0
     bbc:	2601      	movs	r6, #1
     bbe:	e007      	b.n	bd0 <udc_update_iface_desc+0x40>
     bc0:	4a0f      	ldr	r2, [pc, #60]	; (c00 <udc_update_iface_desc+0x70>)
     bc2:	6013      	str	r3, [r2, #0]
     bc4:	e00f      	b.n	be6 <udc_update_iface_desc+0x56>
				udc_ptr_iface->bLength);
     bc6:	781a      	ldrb	r2, [r3, #0]
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
     bc8:	189b      	adds	r3, r3, r2
     bca:	0035      	movs	r5, r6
	while (ptr_end_desc >
     bcc:	42a3      	cmp	r3, r4
     bce:	d20c      	bcs.n	bea <udc_update_iface_desc+0x5a>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
     bd0:	785a      	ldrb	r2, [r3, #1]
     bd2:	2a04      	cmp	r2, #4
     bd4:	d1f7      	bne.n	bc6 <udc_update_iface_desc+0x36>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
     bd6:	789a      	ldrb	r2, [r3, #2]
     bd8:	4282      	cmp	r2, r0
     bda:	d1f4      	bne.n	bc6 <udc_update_iface_desc+0x36>
     bdc:	78da      	ldrb	r2, [r3, #3]
     bde:	428a      	cmp	r2, r1
     be0:	d1f1      	bne.n	bc6 <udc_update_iface_desc+0x36>
     be2:	2d00      	cmp	r5, #0
     be4:	d1ec      	bne.n	bc0 <udc_update_iface_desc+0x30>
				return true; // Interface found
     be6:	2201      	movs	r2, #1
     be8:	e002      	b.n	bf0 <udc_update_iface_desc+0x60>
     bea:	4a05      	ldr	r2, [pc, #20]	; (c00 <udc_update_iface_desc+0x70>)
     bec:	6013      	str	r3, [r2, #0]
	return false; // Interface not found
     bee:	2200      	movs	r2, #0
}
     bf0:	0010      	movs	r0, r2
     bf2:	bd70      	pop	{r4, r5, r6, pc}
	return false; // Interface not found
     bf4:	2200      	movs	r2, #0
     bf6:	e7fb      	b.n	bf0 <udc_update_iface_desc+0x60>
     bf8:	2000025c 	.word	0x2000025c
     bfc:	20000260 	.word	0x20000260
     c00:	20000264 	.word	0x20000264

00000c04 <udc_iface_disable>:
{
     c04:	b5f0      	push	{r4, r5, r6, r7, lr}
     c06:	46c6      	mov	lr, r8
     c08:	b500      	push	{lr}
     c0a:	0004      	movs	r4, r0
	if (!udc_update_iface_desc(iface_num, 0)) {
     c0c:	2100      	movs	r1, #0
     c0e:	4b13      	ldr	r3, [pc, #76]	; (c5c <udc_iface_disable+0x58>)
     c10:	4798      	blx	r3
     c12:	1e05      	subs	r5, r0, #0
     c14:	d103      	bne.n	c1e <udc_iface_disable+0x1a>
}
     c16:	0028      	movs	r0, r5
     c18:	bc04      	pop	{r2}
     c1a:	4690      	mov	r8, r2
     c1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
     c1e:	4b10      	ldr	r3, [pc, #64]	; (c60 <udc_iface_disable+0x5c>)
     c20:	681b      	ldr	r3, [r3, #0]
     c22:	685b      	ldr	r3, [r3, #4]
     c24:	00a2      	lsls	r2, r4, #2
     c26:	58d3      	ldr	r3, [r2, r3]
     c28:	4698      	mov	r8, r3
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
     c2a:	68db      	ldr	r3, [r3, #12]
     c2c:	4798      	blx	r3
     c2e:	0001      	movs	r1, r0
     c30:	0020      	movs	r0, r4
     c32:	4b0a      	ldr	r3, [pc, #40]	; (c5c <udc_iface_disable+0x58>)
     c34:	4798      	blx	r3
     c36:	1e05      	subs	r5, r0, #0
     c38:	d0ed      	beq.n	c16 <udc_iface_disable+0x12>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
     c3a:	4b0a      	ldr	r3, [pc, #40]	; (c64 <udc_iface_disable+0x60>)
     c3c:	681c      	ldr	r4, [r3, #0]
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     c3e:	4e0a      	ldr	r6, [pc, #40]	; (c68 <udc_iface_disable+0x64>)
			udd_ep_free(ep_desc->bEndpointAddress);
     c40:	4f0a      	ldr	r7, [pc, #40]	; (c6c <udc_iface_disable+0x68>)
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     c42:	2105      	movs	r1, #5
     c44:	0020      	movs	r0, r4
     c46:	47b0      	blx	r6
     c48:	1e04      	subs	r4, r0, #0
			if (NULL == ep_desc) {
     c4a:	d002      	beq.n	c52 <udc_iface_disable+0x4e>
			udd_ep_free(ep_desc->bEndpointAddress);
     c4c:	7880      	ldrb	r0, [r0, #2]
     c4e:	47b8      	blx	r7
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     c50:	e7f7      	b.n	c42 <udc_iface_disable+0x3e>
	udi_api->disable();
     c52:	4643      	mov	r3, r8
     c54:	685b      	ldr	r3, [r3, #4]
     c56:	4798      	blx	r3
	return true;
     c58:	e7dd      	b.n	c16 <udc_iface_disable+0x12>
     c5a:	46c0      	nop			; (mov r8, r8)
     c5c:	00000b91 	.word	0x00000b91
     c60:	20000260 	.word	0x20000260
     c64:	20000264 	.word	0x20000264
     c68:	00000b2d 	.word	0x00000b2d
     c6c:	00002be1 	.word	0x00002be1

00000c70 <udc_iface_enable>:
{
     c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     c72:	0005      	movs	r5, r0
	if (!udc_update_iface_desc(iface_num, setting_num)) {
     c74:	4b0f      	ldr	r3, [pc, #60]	; (cb4 <udc_iface_enable+0x44>)
     c76:	4798      	blx	r3
     c78:	2800      	cmp	r0, #0
     c7a:	d019      	beq.n	cb0 <udc_iface_enable+0x40>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
     c7c:	4b0e      	ldr	r3, [pc, #56]	; (cb8 <udc_iface_enable+0x48>)
     c7e:	681c      	ldr	r4, [r3, #0]
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     c80:	4e0e      	ldr	r6, [pc, #56]	; (cbc <udc_iface_enable+0x4c>)
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
     c82:	4f0f      	ldr	r7, [pc, #60]	; (cc0 <udc_iface_enable+0x50>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
     c84:	2105      	movs	r1, #5
     c86:	0020      	movs	r0, r4
     c88:	47b0      	blx	r6
     c8a:	1e04      	subs	r4, r0, #0
		if (NULL == ep_desc)
     c8c:	d009      	beq.n	ca2 <udc_iface_enable+0x32>
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
     c8e:	7903      	ldrb	r3, [r0, #4]
     c90:	7942      	ldrb	r2, [r0, #5]
     c92:	0212      	lsls	r2, r2, #8
     c94:	431a      	orrs	r2, r3
     c96:	78c1      	ldrb	r1, [r0, #3]
     c98:	7880      	ldrb	r0, [r0, #2]
     c9a:	47b8      	blx	r7
     c9c:	2800      	cmp	r0, #0
     c9e:	d1f1      	bne.n	c84 <udc_iface_enable+0x14>
     ca0:	e006      	b.n	cb0 <udc_iface_enable+0x40>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
     ca2:	4b08      	ldr	r3, [pc, #32]	; (cc4 <udc_iface_enable+0x54>)
     ca4:	681b      	ldr	r3, [r3, #0]
     ca6:	685b      	ldr	r3, [r3, #4]
     ca8:	00ad      	lsls	r5, r5, #2
     caa:	58eb      	ldr	r3, [r5, r3]
     cac:	681b      	ldr	r3, [r3, #0]
     cae:	4798      	blx	r3
}
     cb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     cb2:	46c0      	nop			; (mov r8, r8)
     cb4:	00000b91 	.word	0x00000b91
     cb8:	20000264 	.word	0x20000264
     cbc:	00000b2d 	.word	0x00000b2d
     cc0:	00002c39 	.word	0x00002c39
     cc4:	20000260 	.word	0x20000260

00000cc8 <udc_start>:
{
     cc8:	b510      	push	{r4, lr}
	udd_enable();
     cca:	4b01      	ldr	r3, [pc, #4]	; (cd0 <udc_start+0x8>)
     ccc:	4798      	blx	r3
}
     cce:	bd10      	pop	{r4, pc}
     cd0:	00003205 	.word	0x00003205

00000cd4 <udc_reset>:
{
     cd4:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
     cd6:	4b0e      	ldr	r3, [pc, #56]	; (d10 <udc_reset+0x3c>)
     cd8:	781b      	ldrb	r3, [r3, #0]
     cda:	2b00      	cmp	r3, #0
     cdc:	d011      	beq.n	d02 <udc_reset+0x2e>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     cde:	4b0d      	ldr	r3, [pc, #52]	; (d14 <udc_reset+0x40>)
     ce0:	681b      	ldr	r3, [r3, #0]
     ce2:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
     ce4:	791b      	ldrb	r3, [r3, #4]
     ce6:	2b00      	cmp	r3, #0
     ce8:	d00b      	beq.n	d02 <udc_reset+0x2e>
     cea:	2400      	movs	r4, #0
			udc_iface_disable(iface_num);
     cec:	4e0a      	ldr	r6, [pc, #40]	; (d18 <udc_reset+0x44>)
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     cee:	4d09      	ldr	r5, [pc, #36]	; (d14 <udc_reset+0x40>)
			udc_iface_disable(iface_num);
     cf0:	0020      	movs	r0, r4
     cf2:	47b0      	blx	r6
				iface_num++) {
     cf4:	3401      	adds	r4, #1
     cf6:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     cf8:	682b      	ldr	r3, [r5, #0]
     cfa:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
     cfc:	791b      	ldrb	r3, [r3, #4]
     cfe:	42a3      	cmp	r3, r4
     d00:	d8f6      	bhi.n	cf0 <udc_reset+0x1c>
	udc_num_configuration = 0;
     d02:	2200      	movs	r2, #0
     d04:	4b02      	ldr	r3, [pc, #8]	; (d10 <udc_reset+0x3c>)
     d06:	701a      	strb	r2, [r3, #0]
	udc_device_status =
     d08:	3201      	adds	r2, #1
     d0a:	4b04      	ldr	r3, [pc, #16]	; (d1c <udc_reset+0x48>)
     d0c:	801a      	strh	r2, [r3, #0]
}
     d0e:	bd70      	pop	{r4, r5, r6, pc}
     d10:	2000025c 	.word	0x2000025c
     d14:	20000260 	.word	0x20000260
     d18:	00000c05 	.word	0x00000c05
     d1c:	20000252 	.word	0x20000252

00000d20 <udc_sof_notify>:
{
     d20:	b570      	push	{r4, r5, r6, lr}
	if (udc_num_configuration) {
     d22:	4b0e      	ldr	r3, [pc, #56]	; (d5c <udc_sof_notify+0x3c>)
     d24:	781b      	ldrb	r3, [r3, #0]
     d26:	2b00      	cmp	r3, #0
     d28:	d017      	beq.n	d5a <udc_sof_notify+0x3a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     d2a:	4b0d      	ldr	r3, [pc, #52]	; (d60 <udc_sof_notify+0x40>)
     d2c:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
     d2e:	681a      	ldr	r2, [r3, #0]
     d30:	7912      	ldrb	r2, [r2, #4]
     d32:	2a00      	cmp	r2, #0
     d34:	d011      	beq.n	d5a <udc_sof_notify+0x3a>
     d36:	2400      	movs	r4, #0
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     d38:	4d09      	ldr	r5, [pc, #36]	; (d60 <udc_sof_notify+0x40>)
     d3a:	e006      	b.n	d4a <udc_sof_notify+0x2a>
				iface_num++) {
     d3c:	3401      	adds	r4, #1
     d3e:	b2e4      	uxtb	r4, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
     d40:	682b      	ldr	r3, [r5, #0]
		for (iface_num = 0;
     d42:	681a      	ldr	r2, [r3, #0]
     d44:	7912      	ldrb	r2, [r2, #4]
     d46:	42a2      	cmp	r2, r4
     d48:	d907      	bls.n	d5a <udc_sof_notify+0x3a>
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
     d4a:	685b      	ldr	r3, [r3, #4]
     d4c:	00a2      	lsls	r2, r4, #2
     d4e:	58d3      	ldr	r3, [r2, r3]
     d50:	691b      	ldr	r3, [r3, #16]
     d52:	2b00      	cmp	r3, #0
     d54:	d0f2      	beq.n	d3c <udc_sof_notify+0x1c>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
     d56:	4798      	blx	r3
     d58:	e7f0      	b.n	d3c <udc_sof_notify+0x1c>
}
     d5a:	bd70      	pop	{r4, r5, r6, pc}
     d5c:	2000025c 	.word	0x2000025c
     d60:	20000260 	.word	0x20000260

00000d64 <udc_process_setup>:
 * sent to a specific application callback.
 *
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
     d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
     d66:	4baa      	ldr	r3, [pc, #680]	; (1010 <udc_process_setup+0x2ac>)
     d68:	2200      	movs	r2, #0
     d6a:	819a      	strh	r2, [r3, #12]
	udd_g_ctrlreq.callback = NULL;
     d6c:	611a      	str	r2, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
     d6e:	615a      	str	r2, [r3, #20]

	if (Udd_setup_is_in()) {
     d70:	781b      	ldrb	r3, [r3, #0]
     d72:	b25a      	sxtb	r2, r3
     d74:	2a00      	cmp	r2, #0
     d76:	db13      	blt.n	da0 <udc_process_setup+0x3c>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
     d78:	2260      	movs	r2, #96	; 0x60
     d7a:	421a      	tst	r2, r3
     d7c:	d100      	bne.n	d80 <udc_process_setup+0x1c>
     d7e:	e0d6      	b.n	f2e <udc_process_setup+0x1ca>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
     d80:	4ba3      	ldr	r3, [pc, #652]	; (1010 <udc_process_setup+0x2ac>)
     d82:	781a      	ldrb	r2, [r3, #0]
     d84:	231f      	movs	r3, #31
     d86:	4013      	ands	r3, r2
     d88:	2b01      	cmp	r3, #1
     d8a:	d100      	bne.n	d8e <udc_process_setup+0x2a>
     d8c:	e172      	b.n	1074 <udc_process_setup+0x310>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
     d8e:	4ba0      	ldr	r3, [pc, #640]	; (1010 <udc_process_setup+0x2ac>)
     d90:	781a      	ldrb	r2, [r3, #0]
     d92:	231f      	movs	r3, #31
     d94:	4013      	ands	r3, r2
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
     d96:	2000      	movs	r0, #0
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
     d98:	2b02      	cmp	r3, #2
     d9a:	d100      	bne.n	d9e <udc_process_setup+0x3a>
     d9c:	e1c8      	b.n	1130 <udc_process_setup+0x3cc>
#endif
}
     d9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
     da0:	4a9b      	ldr	r2, [pc, #620]	; (1010 <udc_process_setup+0x2ac>)
     da2:	88d2      	ldrh	r2, [r2, #6]
			return false; // Error from USB host
     da4:	2000      	movs	r0, #0
		if (udd_g_ctrlreq.req.wLength == 0) {
     da6:	2a00      	cmp	r2, #0
     da8:	d0f9      	beq.n	d9e <udc_process_setup+0x3a>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
     daa:	2160      	movs	r1, #96	; 0x60
     dac:	4219      	tst	r1, r3
     dae:	d1e7      	bne.n	d80 <udc_process_setup+0x1c>
     db0:	211f      	movs	r1, #31
     db2:	400b      	ands	r3, r1
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
     db4:	d108      	bne.n	dc8 <udc_process_setup+0x64>
			switch (udd_g_ctrlreq.req.bRequest) {
     db6:	4996      	ldr	r1, [pc, #600]	; (1010 <udc_process_setup+0x2ac>)
     db8:	7849      	ldrb	r1, [r1, #1]
     dba:	2906      	cmp	r1, #6
     dbc:	d023      	beq.n	e06 <udc_process_setup+0xa2>
     dbe:	2908      	cmp	r1, #8
     dc0:	d100      	bne.n	dc4 <udc_process_setup+0x60>
     dc2:	e083      	b.n	ecc <udc_process_setup+0x168>
     dc4:	2900      	cmp	r1, #0
     dc6:	d017      	beq.n	df8 <udc_process_setup+0x94>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
     dc8:	2b01      	cmp	r3, #1
     dca:	d100      	bne.n	dce <udc_process_setup+0x6a>
     dcc:	e086      	b.n	edc <udc_process_setup+0x178>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
     dce:	2b02      	cmp	r3, #2
     dd0:	d1d6      	bne.n	d80 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
     dd2:	4b8f      	ldr	r3, [pc, #572]	; (1010 <udc_process_setup+0x2ac>)
     dd4:	785b      	ldrb	r3, [r3, #1]
	return false;
     dd6:	2000      	movs	r0, #0
			switch (udd_g_ctrlreq.req.bRequest) {
     dd8:	2b00      	cmp	r3, #0
     dda:	d000      	beq.n	dde <udc_process_setup+0x7a>
     ddc:	e1a4      	b.n	1128 <udc_process_setup+0x3c4>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
     dde:	2a02      	cmp	r2, #2
     de0:	d1d5      	bne.n	d8e <udc_process_setup+0x2a>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
     de2:	4b8b      	ldr	r3, [pc, #556]	; (1010 <udc_process_setup+0x2ac>)
     de4:	7918      	ldrb	r0, [r3, #4]
     de6:	4b8b      	ldr	r3, [pc, #556]	; (1014 <udc_process_setup+0x2b0>)
     de8:	4798      	blx	r3
     dea:	4b8b      	ldr	r3, [pc, #556]	; (1018 <udc_process_setup+0x2b4>)
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
     dec:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
     dee:	2102      	movs	r1, #2
     df0:	0018      	movs	r0, r3
     df2:	4b8a      	ldr	r3, [pc, #552]	; (101c <udc_process_setup+0x2b8>)
     df4:	4798      	blx	r3
     df6:	e0fb      	b.n	ff0 <udc_process_setup+0x28c>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
     df8:	2a02      	cmp	r2, #2
     dfa:	d1c8      	bne.n	d8e <udc_process_setup+0x2a>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
     dfc:	3102      	adds	r1, #2
     dfe:	4888      	ldr	r0, [pc, #544]	; (1020 <udc_process_setup+0x2bc>)
     e00:	4b86      	ldr	r3, [pc, #536]	; (101c <udc_process_setup+0x2b8>)
     e02:	4798      	blx	r3
     e04:	e0f4      	b.n	ff0 <udc_process_setup+0x28c>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
     e06:	4b82      	ldr	r3, [pc, #520]	; (1010 <udc_process_setup+0x2ac>)
     e08:	885a      	ldrh	r2, [r3, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
     e0a:	0a13      	lsrs	r3, r2, #8
     e0c:	2b02      	cmp	r3, #2
     e0e:	d023      	beq.n	e58 <udc_process_setup+0xf4>
     e10:	b2d9      	uxtb	r1, r3
     e12:	2902      	cmp	r1, #2
     e14:	d90f      	bls.n	e36 <udc_process_setup+0xd2>
     e16:	2b03      	cmp	r3, #3
     e18:	d034      	beq.n	e84 <udc_process_setup+0x120>
     e1a:	2b0f      	cmp	r3, #15
     e1c:	d000      	beq.n	e20 <udc_process_setup+0xbc>
     e1e:	e180      	b.n	1122 <udc_process_setup+0x3be>
		if (udc_config.conf_bos == NULL) {
     e20:	4b80      	ldr	r3, [pc, #512]	; (1024 <udc_process_setup+0x2c0>)
     e22:	6898      	ldr	r0, [r3, #8]
     e24:	2800      	cmp	r0, #0
     e26:	d0b2      	beq.n	d8e <udc_process_setup+0x2a>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
     e28:	7883      	ldrb	r3, [r0, #2]
     e2a:	78c1      	ldrb	r1, [r0, #3]
     e2c:	0209      	lsls	r1, r1, #8
     e2e:	4319      	orrs	r1, r3
     e30:	4b7a      	ldr	r3, [pc, #488]	; (101c <udc_process_setup+0x2b8>)
     e32:	4798      	blx	r3
     e34:	e007      	b.n	e46 <udc_process_setup+0xe2>
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
     e36:	2b01      	cmp	r3, #1
     e38:	d000      	beq.n	e3c <udc_process_setup+0xd8>
     e3a:	e172      	b.n	1122 <udc_process_setup+0x3be>
				(uint8_t *) udc_config.confdev_lsfs,
     e3c:	4b79      	ldr	r3, [pc, #484]	; (1024 <udc_process_setup+0x2c0>)
     e3e:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
     e40:	7801      	ldrb	r1, [r0, #0]
     e42:	4b76      	ldr	r3, [pc, #472]	; (101c <udc_process_setup+0x2b8>)
     e44:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
     e46:	4b72      	ldr	r3, [pc, #456]	; (1010 <udc_process_setup+0x2ac>)
     e48:	88da      	ldrh	r2, [r3, #6]
     e4a:	899b      	ldrh	r3, [r3, #12]
     e4c:	4293      	cmp	r3, r2
     e4e:	d800      	bhi.n	e52 <udc_process_setup+0xee>
     e50:	e0ce      	b.n	ff0 <udc_process_setup+0x28c>
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
     e52:	4b6f      	ldr	r3, [pc, #444]	; (1010 <udc_process_setup+0x2ac>)
     e54:	819a      	strh	r2, [r3, #12]
     e56:	e0cb      	b.n	ff0 <udc_process_setup+0x28c>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
     e58:	b2d2      	uxtb	r2, r2
			if (conf_num >= udc_config.confdev_lsfs->
     e5a:	4b72      	ldr	r3, [pc, #456]	; (1024 <udc_process_setup+0x2c0>)
     e5c:	681b      	ldr	r3, [r3, #0]
     e5e:	7c5b      	ldrb	r3, [r3, #17]
     e60:	4293      	cmp	r3, r2
     e62:	d800      	bhi.n	e66 <udc_process_setup+0x102>
     e64:	e793      	b.n	d8e <udc_process_setup+0x2a>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
     e66:	4b6f      	ldr	r3, [pc, #444]	; (1024 <udc_process_setup+0x2c0>)
     e68:	685b      	ldr	r3, [r3, #4]
     e6a:	00d2      	lsls	r2, r2, #3
     e6c:	58d0      	ldr	r0, [r2, r3]
			udd_set_setup_payload(
     e6e:	7883      	ldrb	r3, [r0, #2]
     e70:	78c1      	ldrb	r1, [r0, #3]
     e72:	0209      	lsls	r1, r1, #8
     e74:	4319      	orrs	r1, r3
     e76:	4b69      	ldr	r3, [pc, #420]	; (101c <udc_process_setup+0x2b8>)
     e78:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
     e7a:	4b65      	ldr	r3, [pc, #404]	; (1010 <udc_process_setup+0x2ac>)
     e7c:	689b      	ldr	r3, [r3, #8]
     e7e:	2202      	movs	r2, #2
     e80:	705a      	strb	r2, [r3, #1]
     e82:	e7e0      	b.n	e46 <udc_process_setup+0xe2>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
     e84:	23ff      	movs	r3, #255	; 0xff
     e86:	401a      	ands	r2, r3
     e88:	2a01      	cmp	r2, #1
     e8a:	d01c      	beq.n	ec6 <udc_process_setup+0x162>
     e8c:	2a00      	cmp	r2, #0
     e8e:	d015      	beq.n	ebc <udc_process_setup+0x158>
     e90:	2a02      	cmp	r2, #2
     e92:	d000      	beq.n	e96 <udc_process_setup+0x132>
     e94:	e774      	b.n	d80 <udc_process_setup+0x1c>
		str = udc_string_product_name;
     e96:	4c64      	ldr	r4, [pc, #400]	; (1028 <udc_process_setup+0x2c4>)
		str_length = USB_DEVICE_PRODUCT_NAME_SIZE;
     e98:	210f      	movs	r1, #15
     e9a:	4a64      	ldr	r2, [pc, #400]	; (102c <udc_process_setup+0x2c8>)
     e9c:	2300      	movs	r3, #0
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
     e9e:	5ce0      	ldrb	r0, [r4, r3]
     ea0:	8050      	strh	r0, [r2, #2]
     ea2:	3301      	adds	r3, #1
     ea4:	3202      	adds	r2, #2
		for(i = 0; i < str_length; i++) {
     ea6:	b2d8      	uxtb	r0, r3
     ea8:	4288      	cmp	r0, r1
     eaa:	d3f8      	bcc.n	e9e <udc_process_setup+0x13a>
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
     eac:	0049      	lsls	r1, r1, #1
     eae:	3102      	adds	r1, #2
     eb0:	485e      	ldr	r0, [pc, #376]	; (102c <udc_process_setup+0x2c8>)
     eb2:	7001      	strb	r1, [r0, #0]
		udd_set_setup_payload(
     eb4:	b289      	uxth	r1, r1
     eb6:	4b59      	ldr	r3, [pc, #356]	; (101c <udc_process_setup+0x2b8>)
     eb8:	4798      	blx	r3
     eba:	e7c4      	b.n	e46 <udc_process_setup+0xe2>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
     ebc:	2104      	movs	r1, #4
     ebe:	485c      	ldr	r0, [pc, #368]	; (1030 <udc_process_setup+0x2cc>)
     ec0:	4b56      	ldr	r3, [pc, #344]	; (101c <udc_process_setup+0x2b8>)
     ec2:	4798      	blx	r3
     ec4:	e7bf      	b.n	e46 <udc_process_setup+0xe2>
		str = udc_string_manufacturer_name;
     ec6:	4c5b      	ldr	r4, [pc, #364]	; (1034 <udc_process_setup+0x2d0>)
		str_length = USB_DEVICE_MANUFACTURE_NAME_SIZE;
     ec8:	2109      	movs	r1, #9
     eca:	e7e6      	b.n	e9a <udc_process_setup+0x136>
	if (udd_g_ctrlreq.req.wLength != 1) {
     ecc:	2a01      	cmp	r2, #1
     ece:	d000      	beq.n	ed2 <udc_process_setup+0x16e>
     ed0:	e75d      	b.n	d8e <udc_process_setup+0x2a>
	udd_set_setup_payload(&udc_num_configuration,1);
     ed2:	2101      	movs	r1, #1
     ed4:	4858      	ldr	r0, [pc, #352]	; (1038 <udc_process_setup+0x2d4>)
     ed6:	4b51      	ldr	r3, [pc, #324]	; (101c <udc_process_setup+0x2b8>)
     ed8:	4798      	blx	r3
     eda:	e089      	b.n	ff0 <udc_process_setup+0x28c>
			switch (udd_g_ctrlreq.req.bRequest) {
     edc:	494c      	ldr	r1, [pc, #304]	; (1010 <udc_process_setup+0x2ac>)
     ede:	7849      	ldrb	r1, [r1, #1]
     ee0:	290a      	cmp	r1, #10
     ee2:	d000      	beq.n	ee6 <udc_process_setup+0x182>
     ee4:	e773      	b.n	dce <udc_process_setup+0x6a>
	if (udd_g_ctrlreq.req.wLength != 1) {
     ee6:	2a01      	cmp	r2, #1
     ee8:	d000      	beq.n	eec <udc_process_setup+0x188>
     eea:	e0c3      	b.n	1074 <udc_process_setup+0x310>
	if (!udc_num_configuration) {
     eec:	4b52      	ldr	r3, [pc, #328]	; (1038 <udc_process_setup+0x2d4>)
     eee:	781b      	ldrb	r3, [r3, #0]
     ef0:	2b00      	cmp	r3, #0
     ef2:	d100      	bne.n	ef6 <udc_process_setup+0x192>
     ef4:	e0be      	b.n	1074 <udc_process_setup+0x310>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
     ef6:	4b46      	ldr	r3, [pc, #280]	; (1010 <udc_process_setup+0x2ac>)
     ef8:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
     efa:	4b50      	ldr	r3, [pc, #320]	; (103c <udc_process_setup+0x2d8>)
     efc:	681d      	ldr	r5, [r3, #0]
     efe:	682b      	ldr	r3, [r5, #0]
     f00:	791b      	ldrb	r3, [r3, #4]
     f02:	42a3      	cmp	r3, r4
     f04:	d800      	bhi.n	f08 <udc_process_setup+0x1a4>
     f06:	e0b5      	b.n	1074 <udc_process_setup+0x310>
	if (!udc_update_iface_desc(iface_num, 0)) {
     f08:	2100      	movs	r1, #0
     f0a:	0020      	movs	r0, r4
     f0c:	4b4c      	ldr	r3, [pc, #304]	; (1040 <udc_process_setup+0x2dc>)
     f0e:	4798      	blx	r3
     f10:	2800      	cmp	r0, #0
     f12:	d100      	bne.n	f16 <udc_process_setup+0x1b2>
     f14:	e734      	b.n	d80 <udc_process_setup+0x1c>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
     f16:	686b      	ldr	r3, [r5, #4]
     f18:	00a4      	lsls	r4, r4, #2
	udc_iface_setting = udi_api->getsetting();
     f1a:	58e3      	ldr	r3, [r4, r3]
     f1c:	68db      	ldr	r3, [r3, #12]
     f1e:	4798      	blx	r3
     f20:	4b48      	ldr	r3, [pc, #288]	; (1044 <udc_process_setup+0x2e0>)
     f22:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
     f24:	2101      	movs	r1, #1
     f26:	0018      	movs	r0, r3
     f28:	4b3c      	ldr	r3, [pc, #240]	; (101c <udc_process_setup+0x2b8>)
     f2a:	4798      	blx	r3
     f2c:	e060      	b.n	ff0 <udc_process_setup+0x28c>
     f2e:	221f      	movs	r2, #31
     f30:	4013      	ands	r3, r2
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
     f32:	d15f      	bne.n	ff4 <udc_process_setup+0x290>
			switch (udd_g_ctrlreq.req.bRequest) {
     f34:	4a36      	ldr	r2, [pc, #216]	; (1010 <udc_process_setup+0x2ac>)
     f36:	7852      	ldrb	r2, [r2, #1]
     f38:	2a03      	cmp	r2, #3
     f3a:	d100      	bne.n	f3e <udc_process_setup+0x1da>
     f3c:	e0f3      	b.n	1126 <udc_process_setup+0x3c2>
     f3e:	b2d1      	uxtb	r1, r2
     f40:	2903      	cmp	r1, #3
     f42:	d93b      	bls.n	fbc <udc_process_setup+0x258>
     f44:	2a05      	cmp	r2, #5
     f46:	d04b      	beq.n	fe0 <udc_process_setup+0x27c>
     f48:	2a09      	cmp	r2, #9
     f4a:	d153      	bne.n	ff4 <udc_process_setup+0x290>
	if (udd_g_ctrlreq.req.wLength) {
     f4c:	4b30      	ldr	r3, [pc, #192]	; (1010 <udc_process_setup+0x2ac>)
     f4e:	88db      	ldrh	r3, [r3, #6]
     f50:	2b00      	cmp	r3, #0
     f52:	d000      	beq.n	f56 <udc_process_setup+0x1f2>
     f54:	e71b      	b.n	d8e <udc_process_setup+0x2a>
	if (!udd_getaddress()) {
     f56:	4b3c      	ldr	r3, [pc, #240]	; (1048 <udc_process_setup+0x2e4>)
     f58:	4798      	blx	r3
     f5a:	2800      	cmp	r0, #0
     f5c:	d100      	bne.n	f60 <udc_process_setup+0x1fc>
     f5e:	e70f      	b.n	d80 <udc_process_setup+0x1c>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
     f60:	4b2b      	ldr	r3, [pc, #172]	; (1010 <udc_process_setup+0x2ac>)
     f62:	789a      	ldrb	r2, [r3, #2]
				udc_config.confdev_lsfs->bNumConfigurations) {
     f64:	4b2f      	ldr	r3, [pc, #188]	; (1024 <udc_process_setup+0x2c0>)
     f66:	681b      	ldr	r3, [r3, #0]
     f68:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
     f6a:	429a      	cmp	r2, r3
     f6c:	dd00      	ble.n	f70 <udc_process_setup+0x20c>
     f6e:	e707      	b.n	d80 <udc_process_setup+0x1c>
	udc_reset();
     f70:	4b36      	ldr	r3, [pc, #216]	; (104c <udc_process_setup+0x2e8>)
     f72:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
     f74:	4b26      	ldr	r3, [pc, #152]	; (1010 <udc_process_setup+0x2ac>)
     f76:	789b      	ldrb	r3, [r3, #2]
     f78:	4a2f      	ldr	r2, [pc, #188]	; (1038 <udc_process_setup+0x2d4>)
     f7a:	7013      	strb	r3, [r2, #0]
	if (udc_num_configuration == 0) {
     f7c:	2b00      	cmp	r3, #0
     f7e:	d037      	beq.n	ff0 <udc_process_setup+0x28c>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
     f80:	4a33      	ldr	r2, [pc, #204]	; (1050 <udc_process_setup+0x2ec>)
     f82:	4694      	mov	ip, r2
     f84:	4463      	add	r3, ip
     f86:	00db      	lsls	r3, r3, #3
     f88:	4a26      	ldr	r2, [pc, #152]	; (1024 <udc_process_setup+0x2c0>)
     f8a:	6852      	ldr	r2, [r2, #4]
     f8c:	18d3      	adds	r3, r2, r3
     f8e:	4a2b      	ldr	r2, [pc, #172]	; (103c <udc_process_setup+0x2d8>)
     f90:	6013      	str	r3, [r2, #0]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
     f92:	681b      	ldr	r3, [r3, #0]
     f94:	791b      	ldrb	r3, [r3, #4]
     f96:	2b00      	cmp	r3, #0
     f98:	d02a      	beq.n	ff0 <udc_process_setup+0x28c>
     f9a:	2400      	movs	r4, #0
		if (!udc_iface_enable(iface_num, 0)) {
     f9c:	4d2d      	ldr	r5, [pc, #180]	; (1054 <udc_process_setup+0x2f0>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
     f9e:	0016      	movs	r6, r2
		if (!udc_iface_enable(iface_num, 0)) {
     fa0:	2100      	movs	r1, #0
     fa2:	0020      	movs	r0, r4
     fa4:	47a8      	blx	r5
     fa6:	2800      	cmp	r0, #0
     fa8:	d100      	bne.n	fac <udc_process_setup+0x248>
     faa:	e6e9      	b.n	d80 <udc_process_setup+0x1c>
			iface_num++) {
     fac:	3401      	adds	r4, #1
     fae:	b2e4      	uxtb	r4, r4
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
     fb0:	6833      	ldr	r3, [r6, #0]
     fb2:	681b      	ldr	r3, [r3, #0]
     fb4:	791b      	ldrb	r3, [r3, #4]
     fb6:	42a3      	cmp	r3, r4
     fb8:	d8f2      	bhi.n	fa0 <udc_process_setup+0x23c>
     fba:	e019      	b.n	ff0 <udc_process_setup+0x28c>
			switch (udd_g_ctrlreq.req.bRequest) {
     fbc:	2a01      	cmp	r2, #1
     fbe:	d119      	bne.n	ff4 <udc_process_setup+0x290>
	if (udd_g_ctrlreq.req.wLength) {
     fc0:	4b13      	ldr	r3, [pc, #76]	; (1010 <udc_process_setup+0x2ac>)
     fc2:	88db      	ldrh	r3, [r3, #6]
     fc4:	2b00      	cmp	r3, #0
     fc6:	d000      	beq.n	fca <udc_process_setup+0x266>
     fc8:	e6e1      	b.n	d8e <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
     fca:	4b11      	ldr	r3, [pc, #68]	; (1010 <udc_process_setup+0x2ac>)
     fcc:	885b      	ldrh	r3, [r3, #2]
     fce:	2b01      	cmp	r3, #1
     fd0:	d000      	beq.n	fd4 <udc_process_setup+0x270>
     fd2:	e6dc      	b.n	d8e <udc_process_setup+0x2a>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
     fd4:	4a12      	ldr	r2, [pc, #72]	; (1020 <udc_process_setup+0x2bc>)
     fd6:	8813      	ldrh	r3, [r2, #0]
     fd8:	2102      	movs	r1, #2
     fda:	438b      	bics	r3, r1
     fdc:	8013      	strh	r3, [r2, #0]
     fde:	e007      	b.n	ff0 <udc_process_setup+0x28c>
	if (udd_g_ctrlreq.req.wLength) {
     fe0:	4b0b      	ldr	r3, [pc, #44]	; (1010 <udc_process_setup+0x2ac>)
     fe2:	88db      	ldrh	r3, [r3, #6]
     fe4:	2b00      	cmp	r3, #0
     fe6:	d000      	beq.n	fea <udc_process_setup+0x286>
     fe8:	e6d1      	b.n	d8e <udc_process_setup+0x2a>
	udd_g_ctrlreq.callback = udc_valid_address;
     fea:	4a1b      	ldr	r2, [pc, #108]	; (1058 <udc_process_setup+0x2f4>)
     fec:	4b08      	ldr	r3, [pc, #32]	; (1010 <udc_process_setup+0x2ac>)
     fee:	611a      	str	r2, [r3, #16]
			return true;
     ff0:	2001      	movs	r0, #1
     ff2:	e6d4      	b.n	d9e <udc_process_setup+0x3a>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
     ff4:	2b01      	cmp	r3, #1
     ff6:	d031      	beq.n	105c <udc_process_setup+0x2f8>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
     ff8:	2b02      	cmp	r3, #2
     ffa:	d000      	beq.n	ffe <udc_process_setup+0x29a>
     ffc:	e6c0      	b.n	d80 <udc_process_setup+0x1c>
			switch (udd_g_ctrlreq.req.bRequest) {
     ffe:	4b04      	ldr	r3, [pc, #16]	; (1010 <udc_process_setup+0x2ac>)
    1000:	785b      	ldrb	r3, [r3, #1]
    1002:	2b01      	cmp	r3, #1
    1004:	d06c      	beq.n	10e0 <udc_process_setup+0x37c>
    1006:	2b03      	cmp	r3, #3
    1008:	d100      	bne.n	100c <udc_process_setup+0x2a8>
    100a:	e078      	b.n	10fe <udc_process_setup+0x39a>
	return false;
    100c:	2000      	movs	r0, #0
    100e:	e08b      	b.n	1128 <udc_process_setup+0x3c4>
    1010:	200005d0 	.word	0x200005d0
    1014:	00002d41 	.word	0x00002d41
    1018:	20000254 	.word	0x20000254
    101c:	00003119 	.word	0x00003119
    1020:	20000252 	.word	0x20000252
    1024:	20000028 	.word	0x20000028
    1028:	200000d8 	.word	0x200000d8
    102c:	200000a8 	.word	0x200000a8
    1030:	200000c8 	.word	0x200000c8
    1034:	200000cc 	.word	0x200000cc
    1038:	2000025c 	.word	0x2000025c
    103c:	20000260 	.word	0x20000260
    1040:	00000b91 	.word	0x00000b91
    1044:	20000258 	.word	0x20000258
    1048:	000030b1 	.word	0x000030b1
    104c:	00000cd5 	.word	0x00000cd5
    1050:	1fffffff 	.word	0x1fffffff
    1054:	00000c71 	.word	0x00000c71
    1058:	00000b79 	.word	0x00000b79
			switch (udd_g_ctrlreq.req.bRequest) {
    105c:	4a48      	ldr	r2, [pc, #288]	; (1180 <udc_process_setup+0x41c>)
    105e:	7852      	ldrb	r2, [r2, #1]
    1060:	2a0b      	cmp	r2, #11
    1062:	d1c9      	bne.n	ff8 <udc_process_setup+0x294>
	if (udd_g_ctrlreq.req.wLength) {
    1064:	4b46      	ldr	r3, [pc, #280]	; (1180 <udc_process_setup+0x41c>)
    1066:	88db      	ldrh	r3, [r3, #6]
    1068:	2b00      	cmp	r3, #0
    106a:	d103      	bne.n	1074 <udc_process_setup+0x310>
	if (!udc_num_configuration) {
    106c:	4b45      	ldr	r3, [pc, #276]	; (1184 <udc_process_setup+0x420>)
    106e:	781b      	ldrb	r3, [r3, #0]
    1070:	2b00      	cmp	r3, #0
    1072:	d127      	bne.n	10c4 <udc_process_setup+0x360>
	if (0 == udc_num_configuration) {
    1074:	4b43      	ldr	r3, [pc, #268]	; (1184 <udc_process_setup+0x420>)
    1076:	781b      	ldrb	r3, [r3, #0]
	return false;
    1078:	2000      	movs	r0, #0
	if (0 == udc_num_configuration) {
    107a:	2b00      	cmp	r3, #0
    107c:	d100      	bne.n	1080 <udc_process_setup+0x31c>
    107e:	e68e      	b.n	d9e <udc_process_setup+0x3a>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
    1080:	4b3f      	ldr	r3, [pc, #252]	; (1180 <udc_process_setup+0x41c>)
    1082:	791c      	ldrb	r4, [r3, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
    1084:	4b40      	ldr	r3, [pc, #256]	; (1188 <udc_process_setup+0x424>)
    1086:	681d      	ldr	r5, [r3, #0]
    1088:	682b      	ldr	r3, [r5, #0]
    108a:	791b      	ldrb	r3, [r3, #4]
    108c:	42a3      	cmp	r3, r4
    108e:	d800      	bhi.n	1092 <udc_process_setup+0x32e>
    1090:	e685      	b.n	d9e <udc_process_setup+0x3a>
	if (!udc_update_iface_desc(iface_num, 0)) {
    1092:	2100      	movs	r1, #0
    1094:	0020      	movs	r0, r4
    1096:	4b3d      	ldr	r3, [pc, #244]	; (118c <udc_process_setup+0x428>)
    1098:	4798      	blx	r3
    109a:	2800      	cmp	r0, #0
    109c:	d100      	bne.n	10a0 <udc_process_setup+0x33c>
    109e:	e676      	b.n	d8e <udc_process_setup+0x2a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
    10a0:	686b      	ldr	r3, [r5, #4]
    10a2:	00a2      	lsls	r2, r4, #2
    10a4:	58d5      	ldr	r5, [r2, r3]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
    10a6:	68eb      	ldr	r3, [r5, #12]
    10a8:	4798      	blx	r3
    10aa:	0001      	movs	r1, r0
    10ac:	0020      	movs	r0, r4
    10ae:	4b37      	ldr	r3, [pc, #220]	; (118c <udc_process_setup+0x428>)
    10b0:	4798      	blx	r3
    10b2:	2800      	cmp	r0, #0
    10b4:	d100      	bne.n	10b8 <udc_process_setup+0x354>
    10b6:	e66a      	b.n	d8e <udc_process_setup+0x2a>
	return udi_api->setup();
    10b8:	68ab      	ldr	r3, [r5, #8]
    10ba:	4798      	blx	r3
		if (udc_req_iface()) {
    10bc:	2800      	cmp	r0, #0
    10be:	d000      	beq.n	10c2 <udc_process_setup+0x35e>
    10c0:	e66d      	b.n	d9e <udc_process_setup+0x3a>
    10c2:	e664      	b.n	d8e <udc_process_setup+0x2a>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
    10c4:	4b2e      	ldr	r3, [pc, #184]	; (1180 <udc_process_setup+0x41c>)
    10c6:	791d      	ldrb	r5, [r3, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
    10c8:	885c      	ldrh	r4, [r3, #2]
	if (!udc_iface_disable(iface_num)) {
    10ca:	0028      	movs	r0, r5
    10cc:	4b30      	ldr	r3, [pc, #192]	; (1190 <udc_process_setup+0x42c>)
    10ce:	4798      	blx	r3
    10d0:	2800      	cmp	r0, #0
    10d2:	d100      	bne.n	10d6 <udc_process_setup+0x372>
    10d4:	e654      	b.n	d80 <udc_process_setup+0x1c>
	return udc_iface_enable(iface_num, setting_num);
    10d6:	b2e1      	uxtb	r1, r4
    10d8:	0028      	movs	r0, r5
    10da:	4b2e      	ldr	r3, [pc, #184]	; (1194 <udc_process_setup+0x430>)
    10dc:	4798      	blx	r3
    10de:	e023      	b.n	1128 <udc_process_setup+0x3c4>
	if (udd_g_ctrlreq.req.wLength) {
    10e0:	4b27      	ldr	r3, [pc, #156]	; (1180 <udc_process_setup+0x41c>)
    10e2:	88db      	ldrh	r3, [r3, #6]
    10e4:	2b00      	cmp	r3, #0
    10e6:	d000      	beq.n	10ea <udc_process_setup+0x386>
    10e8:	e651      	b.n	d8e <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
    10ea:	4b25      	ldr	r3, [pc, #148]	; (1180 <udc_process_setup+0x41c>)
    10ec:	885b      	ldrh	r3, [r3, #2]
    10ee:	2b00      	cmp	r3, #0
    10f0:	d000      	beq.n	10f4 <udc_process_setup+0x390>
    10f2:	e64c      	b.n	d8e <udc_process_setup+0x2a>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
    10f4:	4b22      	ldr	r3, [pc, #136]	; (1180 <udc_process_setup+0x41c>)
    10f6:	7918      	ldrb	r0, [r3, #4]
    10f8:	4b27      	ldr	r3, [pc, #156]	; (1198 <udc_process_setup+0x434>)
    10fa:	4798      	blx	r3
    10fc:	e014      	b.n	1128 <udc_process_setup+0x3c4>
	if (udd_g_ctrlreq.req.wLength) {
    10fe:	4b20      	ldr	r3, [pc, #128]	; (1180 <udc_process_setup+0x41c>)
    1100:	88db      	ldrh	r3, [r3, #6]
    1102:	2b00      	cmp	r3, #0
    1104:	d000      	beq.n	1108 <udc_process_setup+0x3a4>
    1106:	e642      	b.n	d8e <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
    1108:	4b1d      	ldr	r3, [pc, #116]	; (1180 <udc_process_setup+0x41c>)
    110a:	885b      	ldrh	r3, [r3, #2]
    110c:	2b00      	cmp	r3, #0
    110e:	d000      	beq.n	1112 <udc_process_setup+0x3ae>
    1110:	e63d      	b.n	d8e <udc_process_setup+0x2a>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
    1112:	4c1b      	ldr	r4, [pc, #108]	; (1180 <udc_process_setup+0x41c>)
    1114:	7920      	ldrb	r0, [r4, #4]
    1116:	4b21      	ldr	r3, [pc, #132]	; (119c <udc_process_setup+0x438>)
    1118:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
    111a:	7920      	ldrb	r0, [r4, #4]
    111c:	4b20      	ldr	r3, [pc, #128]	; (11a0 <udc_process_setup+0x43c>)
    111e:	4798      	blx	r3
    1120:	e002      	b.n	1128 <udc_process_setup+0x3c4>
		return false;
    1122:	2000      	movs	r0, #0
    1124:	e000      	b.n	1128 <udc_process_setup+0x3c4>
				return udc_req_std_dev_set_feature();
    1126:	2000      	movs	r0, #0
		if (udc_reqstd()) {
    1128:	2800      	cmp	r0, #0
    112a:	d000      	beq.n	112e <udc_process_setup+0x3ca>
    112c:	e637      	b.n	d9e <udc_process_setup+0x3a>
    112e:	e627      	b.n	d80 <udc_process_setup+0x1c>
	if (0 == udc_num_configuration) {
    1130:	4b14      	ldr	r3, [pc, #80]	; (1184 <udc_process_setup+0x420>)
    1132:	781b      	ldrb	r3, [r3, #0]
    1134:	2b00      	cmp	r3, #0
    1136:	d100      	bne.n	113a <udc_process_setup+0x3d6>
    1138:	e631      	b.n	d9e <udc_process_setup+0x3a>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
    113a:	4b13      	ldr	r3, [pc, #76]	; (1188 <udc_process_setup+0x424>)
    113c:	681b      	ldr	r3, [r3, #0]
    113e:	681a      	ldr	r2, [r3, #0]
    1140:	7912      	ldrb	r2, [r2, #4]
    1142:	2a00      	cmp	r2, #0
    1144:	d01a      	beq.n	117c <udc_process_setup+0x418>
    1146:	2500      	movs	r5, #0
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
    1148:	4e10      	ldr	r6, [pc, #64]	; (118c <udc_process_setup+0x428>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
    114a:	4f0f      	ldr	r7, [pc, #60]	; (1188 <udc_process_setup+0x424>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
    114c:	685b      	ldr	r3, [r3, #4]
    114e:	00aa      	lsls	r2, r5, #2
    1150:	58d4      	ldr	r4, [r2, r3]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
    1152:	68e3      	ldr	r3, [r4, #12]
    1154:	4798      	blx	r3
    1156:	0001      	movs	r1, r0
    1158:	0028      	movs	r0, r5
    115a:	47b0      	blx	r6
    115c:	2800      	cmp	r0, #0
    115e:	d100      	bne.n	1162 <udc_process_setup+0x3fe>
    1160:	e61d      	b.n	d9e <udc_process_setup+0x3a>
		if (udi_api->setup()) {
    1162:	68a3      	ldr	r3, [r4, #8]
    1164:	4798      	blx	r3
    1166:	2800      	cmp	r0, #0
    1168:	d000      	beq.n	116c <udc_process_setup+0x408>
    116a:	e618      	b.n	d9e <udc_process_setup+0x3a>
			iface_num++) {
    116c:	3501      	adds	r5, #1
    116e:	b2ed      	uxtb	r5, r5
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
    1170:	683b      	ldr	r3, [r7, #0]
    1172:	681a      	ldr	r2, [r3, #0]
    1174:	7912      	ldrb	r2, [r2, #4]
    1176:	42aa      	cmp	r2, r5
    1178:	d8e8      	bhi.n	114c <udc_process_setup+0x3e8>
    117a:	e610      	b.n	d9e <udc_process_setup+0x3a>
	return false;
    117c:	2000      	movs	r0, #0
    117e:	e60e      	b.n	d9e <udc_process_setup+0x3a>
    1180:	200005d0 	.word	0x200005d0
    1184:	2000025c 	.word	0x2000025c
    1188:	20000260 	.word	0x20000260
    118c:	00000b91 	.word	0x00000b91
    1190:	00000c05 	.word	0x00000c05
    1194:	00000c71 	.word	0x00000c71
    1198:	00002e85 	.word	0x00002e85
    119c:	00002b81 	.word	0x00002b81
    11a0:	00002d55 	.word	0x00002d55

000011a4 <cpu_irq_enter_critical>:
    11a4:	4b0c      	ldr	r3, [pc, #48]	; (11d8 <cpu_irq_enter_critical+0x34>)
    11a6:	681b      	ldr	r3, [r3, #0]
    11a8:	2b00      	cmp	r3, #0
    11aa:	d106      	bne.n	11ba <cpu_irq_enter_critical+0x16>
    11ac:	f3ef 8310 	mrs	r3, PRIMASK
    11b0:	2b00      	cmp	r3, #0
    11b2:	d007      	beq.n	11c4 <cpu_irq_enter_critical+0x20>
    11b4:	2200      	movs	r2, #0
    11b6:	4b09      	ldr	r3, [pc, #36]	; (11dc <cpu_irq_enter_critical+0x38>)
    11b8:	701a      	strb	r2, [r3, #0]
    11ba:	4a07      	ldr	r2, [pc, #28]	; (11d8 <cpu_irq_enter_critical+0x34>)
    11bc:	6813      	ldr	r3, [r2, #0]
    11be:	3301      	adds	r3, #1
    11c0:	6013      	str	r3, [r2, #0]
    11c2:	4770      	bx	lr
    11c4:	b672      	cpsid	i
    11c6:	f3bf 8f5f 	dmb	sy
    11ca:	2200      	movs	r2, #0
    11cc:	4b04      	ldr	r3, [pc, #16]	; (11e0 <cpu_irq_enter_critical+0x3c>)
    11ce:	701a      	strb	r2, [r3, #0]
    11d0:	3201      	adds	r2, #1
    11d2:	4b02      	ldr	r3, [pc, #8]	; (11dc <cpu_irq_enter_critical+0x38>)
    11d4:	701a      	strb	r2, [r3, #0]
    11d6:	e7f0      	b.n	11ba <cpu_irq_enter_critical+0x16>
    11d8:	20000268 	.word	0x20000268
    11dc:	2000026c 	.word	0x2000026c
    11e0:	200000e8 	.word	0x200000e8

000011e4 <cpu_irq_leave_critical>:
    11e4:	4b08      	ldr	r3, [pc, #32]	; (1208 <cpu_irq_leave_critical+0x24>)
    11e6:	681a      	ldr	r2, [r3, #0]
    11e8:	3a01      	subs	r2, #1
    11ea:	601a      	str	r2, [r3, #0]
    11ec:	681b      	ldr	r3, [r3, #0]
    11ee:	2b00      	cmp	r3, #0
    11f0:	d109      	bne.n	1206 <cpu_irq_leave_critical+0x22>
    11f2:	4b06      	ldr	r3, [pc, #24]	; (120c <cpu_irq_leave_critical+0x28>)
    11f4:	781b      	ldrb	r3, [r3, #0]
    11f6:	2b00      	cmp	r3, #0
    11f8:	d005      	beq.n	1206 <cpu_irq_leave_critical+0x22>
    11fa:	2201      	movs	r2, #1
    11fc:	4b04      	ldr	r3, [pc, #16]	; (1210 <cpu_irq_leave_critical+0x2c>)
    11fe:	701a      	strb	r2, [r3, #0]
    1200:	f3bf 8f5f 	dmb	sy
    1204:	b662      	cpsie	i
    1206:	4770      	bx	lr
    1208:	20000268 	.word	0x20000268
    120c:	2000026c 	.word	0x2000026c
    1210:	200000e8 	.word	0x200000e8

00001214 <system_board_init>:
    1214:	b5f0      	push	{r4, r5, r6, r7, lr}
    1216:	b083      	sub	sp, #12
    1218:	ac01      	add	r4, sp, #4
    121a:	2501      	movs	r5, #1
    121c:	7065      	strb	r5, [r4, #1]
    121e:	2700      	movs	r7, #0
    1220:	70a7      	strb	r7, [r4, #2]
    1222:	7025      	strb	r5, [r4, #0]
    1224:	0021      	movs	r1, r4
    1226:	203e      	movs	r0, #62	; 0x3e
    1228:	4e06      	ldr	r6, [pc, #24]	; (1244 <system_board_init+0x30>)
    122a:	47b0      	blx	r6
    122c:	2280      	movs	r2, #128	; 0x80
    122e:	05d2      	lsls	r2, r2, #23
    1230:	4b05      	ldr	r3, [pc, #20]	; (1248 <system_board_init+0x34>)
    1232:	619a      	str	r2, [r3, #24]
    1234:	7027      	strb	r7, [r4, #0]
    1236:	7065      	strb	r5, [r4, #1]
    1238:	0021      	movs	r1, r4
    123a:	200f      	movs	r0, #15
    123c:	47b0      	blx	r6
    123e:	b003      	add	sp, #12
    1240:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1242:	46c0      	nop			; (mov r8, r8)
    1244:	0000141d 	.word	0x0000141d
    1248:	41004480 	.word	0x41004480

0000124c <extint_register_callback>:
    124c:	2317      	movs	r3, #23
    124e:	2a00      	cmp	r2, #0
    1250:	d001      	beq.n	1256 <extint_register_callback+0xa>
    1252:	0018      	movs	r0, r3
    1254:	4770      	bx	lr
    1256:	008b      	lsls	r3, r1, #2
    1258:	4a06      	ldr	r2, [pc, #24]	; (1274 <extint_register_callback+0x28>)
    125a:	589b      	ldr	r3, [r3, r2]
    125c:	2b00      	cmp	r3, #0
    125e:	d003      	beq.n	1268 <extint_register_callback+0x1c>
    1260:	4283      	cmp	r3, r0
    1262:	d005      	beq.n	1270 <extint_register_callback+0x24>
    1264:	231d      	movs	r3, #29
    1266:	e7f4      	b.n	1252 <extint_register_callback+0x6>
    1268:	0089      	lsls	r1, r1, #2
    126a:	5088      	str	r0, [r1, r2]
    126c:	2300      	movs	r3, #0
    126e:	e7f0      	b.n	1252 <extint_register_callback+0x6>
    1270:	2300      	movs	r3, #0
    1272:	e7ee      	b.n	1252 <extint_register_callback+0x6>
    1274:	20000350 	.word	0x20000350

00001278 <extint_chan_enable_callback>:
    1278:	2317      	movs	r3, #23
    127a:	2900      	cmp	r1, #0
    127c:	d001      	beq.n	1282 <extint_chan_enable_callback+0xa>
    127e:	0018      	movs	r0, r3
    1280:	4770      	bx	lr
    1282:	2200      	movs	r2, #0
    1284:	281f      	cmp	r0, #31
    1286:	d800      	bhi.n	128a <extint_chan_enable_callback+0x12>
    1288:	4a02      	ldr	r2, [pc, #8]	; (1294 <extint_chan_enable_callback+0x1c>)
    128a:	2301      	movs	r3, #1
    128c:	4083      	lsls	r3, r0
    128e:	60d3      	str	r3, [r2, #12]
    1290:	2300      	movs	r3, #0
    1292:	e7f4      	b.n	127e <extint_chan_enable_callback+0x6>
    1294:	40001800 	.word	0x40001800

00001298 <extint_chan_disable_callback>:
    1298:	2317      	movs	r3, #23
    129a:	2900      	cmp	r1, #0
    129c:	d001      	beq.n	12a2 <extint_chan_disable_callback+0xa>
    129e:	0018      	movs	r0, r3
    12a0:	4770      	bx	lr
    12a2:	2200      	movs	r2, #0
    12a4:	281f      	cmp	r0, #31
    12a6:	d800      	bhi.n	12aa <extint_chan_disable_callback+0x12>
    12a8:	4a02      	ldr	r2, [pc, #8]	; (12b4 <extint_chan_disable_callback+0x1c>)
    12aa:	2301      	movs	r3, #1
    12ac:	4083      	lsls	r3, r0
    12ae:	6093      	str	r3, [r2, #8]
    12b0:	2300      	movs	r3, #0
    12b2:	e7f4      	b.n	129e <extint_chan_disable_callback+0x6>
    12b4:	40001800 	.word	0x40001800

000012b8 <EIC_Handler>:
    12b8:	b570      	push	{r4, r5, r6, lr}
    12ba:	2200      	movs	r2, #0
    12bc:	4b10      	ldr	r3, [pc, #64]	; (1300 <EIC_Handler+0x48>)
    12be:	701a      	strb	r2, [r3, #0]
    12c0:	2300      	movs	r3, #0
    12c2:	4910      	ldr	r1, [pc, #64]	; (1304 <EIC_Handler+0x4c>)
    12c4:	251f      	movs	r5, #31
    12c6:	4e10      	ldr	r6, [pc, #64]	; (1308 <EIC_Handler+0x50>)
    12c8:	4c0d      	ldr	r4, [pc, #52]	; (1300 <EIC_Handler+0x48>)
    12ca:	e00a      	b.n	12e2 <EIC_Handler+0x2a>
    12cc:	490d      	ldr	r1, [pc, #52]	; (1304 <EIC_Handler+0x4c>)
    12ce:	e008      	b.n	12e2 <EIC_Handler+0x2a>
    12d0:	7823      	ldrb	r3, [r4, #0]
    12d2:	3301      	adds	r3, #1
    12d4:	b2db      	uxtb	r3, r3
    12d6:	7023      	strb	r3, [r4, #0]
    12d8:	2b0f      	cmp	r3, #15
    12da:	d810      	bhi.n	12fe <EIC_Handler+0x46>
    12dc:	2100      	movs	r1, #0
    12de:	2b1f      	cmp	r3, #31
    12e0:	d9f4      	bls.n	12cc <EIC_Handler+0x14>
    12e2:	0028      	movs	r0, r5
    12e4:	4018      	ands	r0, r3
    12e6:	2201      	movs	r2, #1
    12e8:	4082      	lsls	r2, r0
    12ea:	6908      	ldr	r0, [r1, #16]
    12ec:	4210      	tst	r0, r2
    12ee:	d0ef      	beq.n	12d0 <EIC_Handler+0x18>
    12f0:	610a      	str	r2, [r1, #16]
    12f2:	009b      	lsls	r3, r3, #2
    12f4:	599b      	ldr	r3, [r3, r6]
    12f6:	2b00      	cmp	r3, #0
    12f8:	d0ea      	beq.n	12d0 <EIC_Handler+0x18>
    12fa:	4798      	blx	r3
    12fc:	e7e8      	b.n	12d0 <EIC_Handler+0x18>
    12fe:	bd70      	pop	{r4, r5, r6, pc}
    1300:	2000034d 	.word	0x2000034d
    1304:	40001800 	.word	0x40001800
    1308:	20000350 	.word	0x20000350

0000130c <_extint_enable>:
    130c:	4a04      	ldr	r2, [pc, #16]	; (1320 <_extint_enable+0x14>)
    130e:	7813      	ldrb	r3, [r2, #0]
    1310:	2102      	movs	r1, #2
    1312:	430b      	orrs	r3, r1
    1314:	7013      	strb	r3, [r2, #0]
    1316:	7853      	ldrb	r3, [r2, #1]
    1318:	b25b      	sxtb	r3, r3
    131a:	2b00      	cmp	r3, #0
    131c:	dbfb      	blt.n	1316 <_extint_enable+0xa>
    131e:	4770      	bx	lr
    1320:	40001800 	.word	0x40001800

00001324 <_system_extint_init>:
    1324:	b500      	push	{lr}
    1326:	b083      	sub	sp, #12
    1328:	4a12      	ldr	r2, [pc, #72]	; (1374 <_system_extint_init+0x50>)
    132a:	6993      	ldr	r3, [r2, #24]
    132c:	2140      	movs	r1, #64	; 0x40
    132e:	430b      	orrs	r3, r1
    1330:	6193      	str	r3, [r2, #24]
    1332:	a901      	add	r1, sp, #4
    1334:	2300      	movs	r3, #0
    1336:	700b      	strb	r3, [r1, #0]
    1338:	2005      	movs	r0, #5
    133a:	4b0f      	ldr	r3, [pc, #60]	; (1378 <_system_extint_init+0x54>)
    133c:	4798      	blx	r3
    133e:	2005      	movs	r0, #5
    1340:	4b0e      	ldr	r3, [pc, #56]	; (137c <_system_extint_init+0x58>)
    1342:	4798      	blx	r3
    1344:	4a0e      	ldr	r2, [pc, #56]	; (1380 <_system_extint_init+0x5c>)
    1346:	7813      	ldrb	r3, [r2, #0]
    1348:	2101      	movs	r1, #1
    134a:	430b      	orrs	r3, r1
    134c:	7013      	strb	r3, [r2, #0]
    134e:	7853      	ldrb	r3, [r2, #1]
    1350:	b25b      	sxtb	r3, r3
    1352:	2b00      	cmp	r3, #0
    1354:	dbfb      	blt.n	134e <_system_extint_init+0x2a>
    1356:	4b0b      	ldr	r3, [pc, #44]	; (1384 <_system_extint_init+0x60>)
    1358:	0019      	movs	r1, r3
    135a:	3140      	adds	r1, #64	; 0x40
    135c:	2200      	movs	r2, #0
    135e:	c304      	stmia	r3!, {r2}
    1360:	4299      	cmp	r1, r3
    1362:	d1fc      	bne.n	135e <_system_extint_init+0x3a>
    1364:	2210      	movs	r2, #16
    1366:	4b08      	ldr	r3, [pc, #32]	; (1388 <_system_extint_init+0x64>)
    1368:	601a      	str	r2, [r3, #0]
    136a:	4b08      	ldr	r3, [pc, #32]	; (138c <_system_extint_init+0x68>)
    136c:	4798      	blx	r3
    136e:	b003      	add	sp, #12
    1370:	bd00      	pop	{pc}
    1372:	46c0      	nop			; (mov r8, r8)
    1374:	40000400 	.word	0x40000400
    1378:	00002385 	.word	0x00002385
    137c:	000022f9 	.word	0x000022f9
    1380:	40001800 	.word	0x40001800
    1384:	20000350 	.word	0x20000350
    1388:	e000e100 	.word	0xe000e100
    138c:	0000130d 	.word	0x0000130d

00001390 <extint_chan_get_config_defaults>:
    1390:	2300      	movs	r3, #0
    1392:	6003      	str	r3, [r0, #0]
    1394:	6043      	str	r3, [r0, #4]
    1396:	2201      	movs	r2, #1
    1398:	7202      	strb	r2, [r0, #8]
    139a:	7242      	strb	r2, [r0, #9]
    139c:	7283      	strb	r3, [r0, #10]
    139e:	3302      	adds	r3, #2
    13a0:	72c3      	strb	r3, [r0, #11]
    13a2:	4770      	bx	lr

000013a4 <extint_chan_set_config>:
    13a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    13a6:	b083      	sub	sp, #12
    13a8:	0005      	movs	r5, r0
    13aa:	000c      	movs	r4, r1
    13ac:	a901      	add	r1, sp, #4
    13ae:	2300      	movs	r3, #0
    13b0:	704b      	strb	r3, [r1, #1]
    13b2:	70cb      	strb	r3, [r1, #3]
    13b4:	7923      	ldrb	r3, [r4, #4]
    13b6:	700b      	strb	r3, [r1, #0]
    13b8:	7a23      	ldrb	r3, [r4, #8]
    13ba:	708b      	strb	r3, [r1, #2]
    13bc:	7820      	ldrb	r0, [r4, #0]
    13be:	4b15      	ldr	r3, [pc, #84]	; (1414 <extint_chan_set_config+0x70>)
    13c0:	4798      	blx	r3
    13c2:	2000      	movs	r0, #0
    13c4:	2d1f      	cmp	r5, #31
    13c6:	d800      	bhi.n	13ca <extint_chan_set_config+0x26>
    13c8:	4813      	ldr	r0, [pc, #76]	; (1418 <extint_chan_set_config+0x74>)
    13ca:	2207      	movs	r2, #7
    13cc:	402a      	ands	r2, r5
    13ce:	0092      	lsls	r2, r2, #2
    13d0:	7ae7      	ldrb	r7, [r4, #11]
    13d2:	7aa3      	ldrb	r3, [r4, #10]
    13d4:	2b00      	cmp	r3, #0
    13d6:	d001      	beq.n	13dc <extint_chan_set_config+0x38>
    13d8:	2308      	movs	r3, #8
    13da:	431f      	orrs	r7, r3
    13dc:	08eb      	lsrs	r3, r5, #3
    13de:	009b      	lsls	r3, r3, #2
    13e0:	18c3      	adds	r3, r0, r3
    13e2:	6999      	ldr	r1, [r3, #24]
    13e4:	260f      	movs	r6, #15
    13e6:	4096      	lsls	r6, r2
    13e8:	43b1      	bics	r1, r6
    13ea:	4097      	lsls	r7, r2
    13ec:	003a      	movs	r2, r7
    13ee:	430a      	orrs	r2, r1
    13f0:	619a      	str	r2, [r3, #24]
    13f2:	7a63      	ldrb	r3, [r4, #9]
    13f4:	2b00      	cmp	r3, #0
    13f6:	d106      	bne.n	1406 <extint_chan_set_config+0x62>
    13f8:	6943      	ldr	r3, [r0, #20]
    13fa:	2201      	movs	r2, #1
    13fc:	40aa      	lsls	r2, r5
    13fe:	4393      	bics	r3, r2
    1400:	6143      	str	r3, [r0, #20]
    1402:	b003      	add	sp, #12
    1404:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1406:	6942      	ldr	r2, [r0, #20]
    1408:	2301      	movs	r3, #1
    140a:	40ab      	lsls	r3, r5
    140c:	4313      	orrs	r3, r2
    140e:	6143      	str	r3, [r0, #20]
    1410:	e7f7      	b.n	1402 <extint_chan_set_config+0x5e>
    1412:	46c0      	nop			; (mov r8, r8)
    1414:	0000247d 	.word	0x0000247d
    1418:	40001800 	.word	0x40001800

0000141c <port_pin_set_config>:
    141c:	b500      	push	{lr}
    141e:	b083      	sub	sp, #12
    1420:	ab01      	add	r3, sp, #4
    1422:	2280      	movs	r2, #128	; 0x80
    1424:	701a      	strb	r2, [r3, #0]
    1426:	780a      	ldrb	r2, [r1, #0]
    1428:	705a      	strb	r2, [r3, #1]
    142a:	784a      	ldrb	r2, [r1, #1]
    142c:	709a      	strb	r2, [r3, #2]
    142e:	788a      	ldrb	r2, [r1, #2]
    1430:	70da      	strb	r2, [r3, #3]
    1432:	0019      	movs	r1, r3
    1434:	4b01      	ldr	r3, [pc, #4]	; (143c <port_pin_set_config+0x20>)
    1436:	4798      	blx	r3
    1438:	b003      	add	sp, #12
    143a:	bd00      	pop	{pc}
    143c:	0000247d 	.word	0x0000247d

00001440 <long_division>:
    1440:	b5f0      	push	{r4, r5, r6, r7, lr}
    1442:	46de      	mov	lr, fp
    1444:	4657      	mov	r7, sl
    1446:	464e      	mov	r6, r9
    1448:	4645      	mov	r5, r8
    144a:	b5e0      	push	{r5, r6, r7, lr}
    144c:	b087      	sub	sp, #28
    144e:	4680      	mov	r8, r0
    1450:	9104      	str	r1, [sp, #16]
    1452:	0016      	movs	r6, r2
    1454:	001f      	movs	r7, r3
    1456:	2200      	movs	r2, #0
    1458:	2300      	movs	r3, #0
    145a:	2100      	movs	r1, #0
    145c:	468b      	mov	fp, r1
    145e:	243f      	movs	r4, #63	; 0x3f
    1460:	2001      	movs	r0, #1
    1462:	0021      	movs	r1, r4
    1464:	9600      	str	r6, [sp, #0]
    1466:	9701      	str	r7, [sp, #4]
    1468:	465c      	mov	r4, fp
    146a:	9403      	str	r4, [sp, #12]
    146c:	4644      	mov	r4, r8
    146e:	9405      	str	r4, [sp, #20]
    1470:	e013      	b.n	149a <long_division+0x5a>
    1472:	2420      	movs	r4, #32
    1474:	1a64      	subs	r4, r4, r1
    1476:	0005      	movs	r5, r0
    1478:	40e5      	lsrs	r5, r4
    147a:	46a8      	mov	r8, r5
    147c:	e014      	b.n	14a8 <long_division+0x68>
    147e:	9c00      	ldr	r4, [sp, #0]
    1480:	9d01      	ldr	r5, [sp, #4]
    1482:	1b12      	subs	r2, r2, r4
    1484:	41ab      	sbcs	r3, r5
    1486:	465c      	mov	r4, fp
    1488:	464d      	mov	r5, r9
    148a:	432c      	orrs	r4, r5
    148c:	46a3      	mov	fp, r4
    148e:	9c03      	ldr	r4, [sp, #12]
    1490:	4645      	mov	r5, r8
    1492:	432c      	orrs	r4, r5
    1494:	9403      	str	r4, [sp, #12]
    1496:	3901      	subs	r1, #1
    1498:	d325      	bcc.n	14e6 <long_division+0xa6>
    149a:	2420      	movs	r4, #32
    149c:	4264      	negs	r4, r4
    149e:	190c      	adds	r4, r1, r4
    14a0:	d4e7      	bmi.n	1472 <long_division+0x32>
    14a2:	0005      	movs	r5, r0
    14a4:	40a5      	lsls	r5, r4
    14a6:	46a8      	mov	r8, r5
    14a8:	0004      	movs	r4, r0
    14aa:	408c      	lsls	r4, r1
    14ac:	46a1      	mov	r9, r4
    14ae:	1892      	adds	r2, r2, r2
    14b0:	415b      	adcs	r3, r3
    14b2:	0014      	movs	r4, r2
    14b4:	001d      	movs	r5, r3
    14b6:	9e05      	ldr	r6, [sp, #20]
    14b8:	464f      	mov	r7, r9
    14ba:	403e      	ands	r6, r7
    14bc:	46b4      	mov	ip, r6
    14be:	9e04      	ldr	r6, [sp, #16]
    14c0:	4647      	mov	r7, r8
    14c2:	403e      	ands	r6, r7
    14c4:	46b2      	mov	sl, r6
    14c6:	4666      	mov	r6, ip
    14c8:	4657      	mov	r7, sl
    14ca:	433e      	orrs	r6, r7
    14cc:	d003      	beq.n	14d6 <long_division+0x96>
    14ce:	0006      	movs	r6, r0
    14d0:	4326      	orrs	r6, r4
    14d2:	0032      	movs	r2, r6
    14d4:	002b      	movs	r3, r5
    14d6:	9c00      	ldr	r4, [sp, #0]
    14d8:	9d01      	ldr	r5, [sp, #4]
    14da:	429d      	cmp	r5, r3
    14dc:	d8db      	bhi.n	1496 <long_division+0x56>
    14de:	d1ce      	bne.n	147e <long_division+0x3e>
    14e0:	4294      	cmp	r4, r2
    14e2:	d8d8      	bhi.n	1496 <long_division+0x56>
    14e4:	e7cb      	b.n	147e <long_division+0x3e>
    14e6:	9b03      	ldr	r3, [sp, #12]
    14e8:	4658      	mov	r0, fp
    14ea:	0019      	movs	r1, r3
    14ec:	b007      	add	sp, #28
    14ee:	bc3c      	pop	{r2, r3, r4, r5}
    14f0:	4690      	mov	r8, r2
    14f2:	4699      	mov	r9, r3
    14f4:	46a2      	mov	sl, r4
    14f6:	46ab      	mov	fp, r5
    14f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

000014fa <_sercom_get_sync_baud_val>:
    14fa:	b510      	push	{r4, lr}
    14fc:	0849      	lsrs	r1, r1, #1
    14fe:	2340      	movs	r3, #64	; 0x40
    1500:	2400      	movs	r4, #0
    1502:	4281      	cmp	r1, r0
    1504:	d202      	bcs.n	150c <_sercom_get_sync_baud_val+0x12>
    1506:	0018      	movs	r0, r3
    1508:	bd10      	pop	{r4, pc}
    150a:	001c      	movs	r4, r3
    150c:	1a09      	subs	r1, r1, r0
    150e:	1c63      	adds	r3, r4, #1
    1510:	b29b      	uxth	r3, r3
    1512:	4288      	cmp	r0, r1
    1514:	d9f9      	bls.n	150a <_sercom_get_sync_baud_val+0x10>
    1516:	2340      	movs	r3, #64	; 0x40
    1518:	2cff      	cmp	r4, #255	; 0xff
    151a:	d8f4      	bhi.n	1506 <_sercom_get_sync_baud_val+0xc>
    151c:	8014      	strh	r4, [r2, #0]
    151e:	2300      	movs	r3, #0
    1520:	e7f1      	b.n	1506 <_sercom_get_sync_baud_val+0xc>
	...

00001524 <_sercom_get_async_baud_val>:
    1524:	b5f0      	push	{r4, r5, r6, r7, lr}
    1526:	b083      	sub	sp, #12
    1528:	000f      	movs	r7, r1
    152a:	0016      	movs	r6, r2
    152c:	aa08      	add	r2, sp, #32
    152e:	7811      	ldrb	r1, [r2, #0]
    1530:	0004      	movs	r4, r0
    1532:	434c      	muls	r4, r1
    1534:	2240      	movs	r2, #64	; 0x40
    1536:	42bc      	cmp	r4, r7
    1538:	d902      	bls.n	1540 <_sercom_get_async_baud_val+0x1c>
    153a:	0010      	movs	r0, r2
    153c:	b003      	add	sp, #12
    153e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1540:	2b00      	cmp	r3, #0
    1542:	d114      	bne.n	156e <_sercom_get_async_baud_val+0x4a>
    1544:	0002      	movs	r2, r0
    1546:	0008      	movs	r0, r1
    1548:	2100      	movs	r1, #0
    154a:	4c19      	ldr	r4, [pc, #100]	; (15b0 <_sercom_get_async_baud_val+0x8c>)
    154c:	47a0      	blx	r4
    154e:	0001      	movs	r1, r0
    1550:	003a      	movs	r2, r7
    1552:	2300      	movs	r3, #0
    1554:	2000      	movs	r0, #0
    1556:	4c17      	ldr	r4, [pc, #92]	; (15b4 <_sercom_get_async_baud_val+0x90>)
    1558:	47a0      	blx	r4
    155a:	2200      	movs	r2, #0
    155c:	2301      	movs	r3, #1
    155e:	1a12      	subs	r2, r2, r0
    1560:	418b      	sbcs	r3, r1
    1562:	0c12      	lsrs	r2, r2, #16
    1564:	041b      	lsls	r3, r3, #16
    1566:	431a      	orrs	r2, r3
    1568:	8032      	strh	r2, [r6, #0]
    156a:	2200      	movs	r2, #0
    156c:	e7e5      	b.n	153a <_sercom_get_async_baud_val+0x16>
    156e:	2200      	movs	r2, #0
    1570:	2b01      	cmp	r3, #1
    1572:	d1f9      	bne.n	1568 <_sercom_get_async_baud_val+0x44>
    1574:	000a      	movs	r2, r1
    1576:	2300      	movs	r3, #0
    1578:	2100      	movs	r1, #0
    157a:	4c0d      	ldr	r4, [pc, #52]	; (15b0 <_sercom_get_async_baud_val+0x8c>)
    157c:	47a0      	blx	r4
    157e:	0002      	movs	r2, r0
    1580:	000b      	movs	r3, r1
    1582:	9200      	str	r2, [sp, #0]
    1584:	9301      	str	r3, [sp, #4]
    1586:	0038      	movs	r0, r7
    1588:	2100      	movs	r1, #0
    158a:	4c0a      	ldr	r4, [pc, #40]	; (15b4 <_sercom_get_async_baud_val+0x90>)
    158c:	47a0      	blx	r4
    158e:	0005      	movs	r5, r0
    1590:	2380      	movs	r3, #128	; 0x80
    1592:	019b      	lsls	r3, r3, #6
    1594:	2240      	movs	r2, #64	; 0x40
    1596:	4298      	cmp	r0, r3
    1598:	d8cf      	bhi.n	153a <_sercom_get_async_baud_val+0x16>
    159a:	0f79      	lsrs	r1, r7, #29
    159c:	00f8      	lsls	r0, r7, #3
    159e:	9a00      	ldr	r2, [sp, #0]
    15a0:	9b01      	ldr	r3, [sp, #4]
    15a2:	47a0      	blx	r4
    15a4:	00ea      	lsls	r2, r5, #3
    15a6:	1a82      	subs	r2, r0, r2
    15a8:	b2d2      	uxtb	r2, r2
    15aa:	0352      	lsls	r2, r2, #13
    15ac:	432a      	orrs	r2, r5
    15ae:	e7db      	b.n	1568 <_sercom_get_async_baud_val+0x44>
    15b0:	00004941 	.word	0x00004941
    15b4:	00001441 	.word	0x00001441

000015b8 <sercom_set_gclk_generator>:
    15b8:	b510      	push	{r4, lr}
    15ba:	b082      	sub	sp, #8
    15bc:	0004      	movs	r4, r0
    15be:	4b0e      	ldr	r3, [pc, #56]	; (15f8 <sercom_set_gclk_generator+0x40>)
    15c0:	781b      	ldrb	r3, [r3, #0]
    15c2:	2b00      	cmp	r3, #0
    15c4:	d007      	beq.n	15d6 <sercom_set_gclk_generator+0x1e>
    15c6:	2900      	cmp	r1, #0
    15c8:	d105      	bne.n	15d6 <sercom_set_gclk_generator+0x1e>
    15ca:	4b0b      	ldr	r3, [pc, #44]	; (15f8 <sercom_set_gclk_generator+0x40>)
    15cc:	785b      	ldrb	r3, [r3, #1]
    15ce:	4283      	cmp	r3, r0
    15d0:	d010      	beq.n	15f4 <sercom_set_gclk_generator+0x3c>
    15d2:	201d      	movs	r0, #29
    15d4:	e00c      	b.n	15f0 <sercom_set_gclk_generator+0x38>
    15d6:	a901      	add	r1, sp, #4
    15d8:	700c      	strb	r4, [r1, #0]
    15da:	2013      	movs	r0, #19
    15dc:	4b07      	ldr	r3, [pc, #28]	; (15fc <sercom_set_gclk_generator+0x44>)
    15de:	4798      	blx	r3
    15e0:	2013      	movs	r0, #19
    15e2:	4b07      	ldr	r3, [pc, #28]	; (1600 <sercom_set_gclk_generator+0x48>)
    15e4:	4798      	blx	r3
    15e6:	4b04      	ldr	r3, [pc, #16]	; (15f8 <sercom_set_gclk_generator+0x40>)
    15e8:	705c      	strb	r4, [r3, #1]
    15ea:	2201      	movs	r2, #1
    15ec:	701a      	strb	r2, [r3, #0]
    15ee:	2000      	movs	r0, #0
    15f0:	b002      	add	sp, #8
    15f2:	bd10      	pop	{r4, pc}
    15f4:	2000      	movs	r0, #0
    15f6:	e7fb      	b.n	15f0 <sercom_set_gclk_generator+0x38>
    15f8:	20000270 	.word	0x20000270
    15fc:	00002385 	.word	0x00002385
    1600:	000022f9 	.word	0x000022f9

00001604 <_sercom_get_default_pad>:
    1604:	4b40      	ldr	r3, [pc, #256]	; (1708 <_sercom_get_default_pad+0x104>)
    1606:	4298      	cmp	r0, r3
    1608:	d031      	beq.n	166e <_sercom_get_default_pad+0x6a>
    160a:	d90a      	bls.n	1622 <_sercom_get_default_pad+0x1e>
    160c:	4b3f      	ldr	r3, [pc, #252]	; (170c <_sercom_get_default_pad+0x108>)
    160e:	4298      	cmp	r0, r3
    1610:	d04d      	beq.n	16ae <_sercom_get_default_pad+0xaa>
    1612:	4b3f      	ldr	r3, [pc, #252]	; (1710 <_sercom_get_default_pad+0x10c>)
    1614:	4298      	cmp	r0, r3
    1616:	d05a      	beq.n	16ce <_sercom_get_default_pad+0xca>
    1618:	4b3e      	ldr	r3, [pc, #248]	; (1714 <_sercom_get_default_pad+0x110>)
    161a:	4298      	cmp	r0, r3
    161c:	d037      	beq.n	168e <_sercom_get_default_pad+0x8a>
    161e:	2000      	movs	r0, #0
    1620:	4770      	bx	lr
    1622:	4b3d      	ldr	r3, [pc, #244]	; (1718 <_sercom_get_default_pad+0x114>)
    1624:	4298      	cmp	r0, r3
    1626:	d00c      	beq.n	1642 <_sercom_get_default_pad+0x3e>
    1628:	4b3c      	ldr	r3, [pc, #240]	; (171c <_sercom_get_default_pad+0x118>)
    162a:	4298      	cmp	r0, r3
    162c:	d1f7      	bne.n	161e <_sercom_get_default_pad+0x1a>
    162e:	2901      	cmp	r1, #1
    1630:	d017      	beq.n	1662 <_sercom_get_default_pad+0x5e>
    1632:	2900      	cmp	r1, #0
    1634:	d05d      	beq.n	16f2 <_sercom_get_default_pad+0xee>
    1636:	2902      	cmp	r1, #2
    1638:	d015      	beq.n	1666 <_sercom_get_default_pad+0x62>
    163a:	2903      	cmp	r1, #3
    163c:	d015      	beq.n	166a <_sercom_get_default_pad+0x66>
    163e:	2000      	movs	r0, #0
    1640:	e7ee      	b.n	1620 <_sercom_get_default_pad+0x1c>
    1642:	2901      	cmp	r1, #1
    1644:	d007      	beq.n	1656 <_sercom_get_default_pad+0x52>
    1646:	2900      	cmp	r1, #0
    1648:	d051      	beq.n	16ee <_sercom_get_default_pad+0xea>
    164a:	2902      	cmp	r1, #2
    164c:	d005      	beq.n	165a <_sercom_get_default_pad+0x56>
    164e:	2903      	cmp	r1, #3
    1650:	d005      	beq.n	165e <_sercom_get_default_pad+0x5a>
    1652:	2000      	movs	r0, #0
    1654:	e7e4      	b.n	1620 <_sercom_get_default_pad+0x1c>
    1656:	4832      	ldr	r0, [pc, #200]	; (1720 <_sercom_get_default_pad+0x11c>)
    1658:	e7e2      	b.n	1620 <_sercom_get_default_pad+0x1c>
    165a:	4832      	ldr	r0, [pc, #200]	; (1724 <_sercom_get_default_pad+0x120>)
    165c:	e7e0      	b.n	1620 <_sercom_get_default_pad+0x1c>
    165e:	4832      	ldr	r0, [pc, #200]	; (1728 <_sercom_get_default_pad+0x124>)
    1660:	e7de      	b.n	1620 <_sercom_get_default_pad+0x1c>
    1662:	4832      	ldr	r0, [pc, #200]	; (172c <_sercom_get_default_pad+0x128>)
    1664:	e7dc      	b.n	1620 <_sercom_get_default_pad+0x1c>
    1666:	4832      	ldr	r0, [pc, #200]	; (1730 <_sercom_get_default_pad+0x12c>)
    1668:	e7da      	b.n	1620 <_sercom_get_default_pad+0x1c>
    166a:	4832      	ldr	r0, [pc, #200]	; (1734 <_sercom_get_default_pad+0x130>)
    166c:	e7d8      	b.n	1620 <_sercom_get_default_pad+0x1c>
    166e:	2901      	cmp	r1, #1
    1670:	d007      	beq.n	1682 <_sercom_get_default_pad+0x7e>
    1672:	2900      	cmp	r1, #0
    1674:	d03f      	beq.n	16f6 <_sercom_get_default_pad+0xf2>
    1676:	2902      	cmp	r1, #2
    1678:	d005      	beq.n	1686 <_sercom_get_default_pad+0x82>
    167a:	2903      	cmp	r1, #3
    167c:	d005      	beq.n	168a <_sercom_get_default_pad+0x86>
    167e:	2000      	movs	r0, #0
    1680:	e7ce      	b.n	1620 <_sercom_get_default_pad+0x1c>
    1682:	482d      	ldr	r0, [pc, #180]	; (1738 <_sercom_get_default_pad+0x134>)
    1684:	e7cc      	b.n	1620 <_sercom_get_default_pad+0x1c>
    1686:	482d      	ldr	r0, [pc, #180]	; (173c <_sercom_get_default_pad+0x138>)
    1688:	e7ca      	b.n	1620 <_sercom_get_default_pad+0x1c>
    168a:	482d      	ldr	r0, [pc, #180]	; (1740 <_sercom_get_default_pad+0x13c>)
    168c:	e7c8      	b.n	1620 <_sercom_get_default_pad+0x1c>
    168e:	2901      	cmp	r1, #1
    1690:	d007      	beq.n	16a2 <_sercom_get_default_pad+0x9e>
    1692:	2900      	cmp	r1, #0
    1694:	d031      	beq.n	16fa <_sercom_get_default_pad+0xf6>
    1696:	2902      	cmp	r1, #2
    1698:	d005      	beq.n	16a6 <_sercom_get_default_pad+0xa2>
    169a:	2903      	cmp	r1, #3
    169c:	d005      	beq.n	16aa <_sercom_get_default_pad+0xa6>
    169e:	2000      	movs	r0, #0
    16a0:	e7be      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16a2:	4828      	ldr	r0, [pc, #160]	; (1744 <_sercom_get_default_pad+0x140>)
    16a4:	e7bc      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16a6:	4828      	ldr	r0, [pc, #160]	; (1748 <_sercom_get_default_pad+0x144>)
    16a8:	e7ba      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16aa:	4828      	ldr	r0, [pc, #160]	; (174c <_sercom_get_default_pad+0x148>)
    16ac:	e7b8      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16ae:	2901      	cmp	r1, #1
    16b0:	d007      	beq.n	16c2 <_sercom_get_default_pad+0xbe>
    16b2:	2900      	cmp	r1, #0
    16b4:	d023      	beq.n	16fe <_sercom_get_default_pad+0xfa>
    16b6:	2902      	cmp	r1, #2
    16b8:	d005      	beq.n	16c6 <_sercom_get_default_pad+0xc2>
    16ba:	2903      	cmp	r1, #3
    16bc:	d005      	beq.n	16ca <_sercom_get_default_pad+0xc6>
    16be:	2000      	movs	r0, #0
    16c0:	e7ae      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16c2:	4823      	ldr	r0, [pc, #140]	; (1750 <_sercom_get_default_pad+0x14c>)
    16c4:	e7ac      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16c6:	4823      	ldr	r0, [pc, #140]	; (1754 <_sercom_get_default_pad+0x150>)
    16c8:	e7aa      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16ca:	4823      	ldr	r0, [pc, #140]	; (1758 <_sercom_get_default_pad+0x154>)
    16cc:	e7a8      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16ce:	2901      	cmp	r1, #1
    16d0:	d007      	beq.n	16e2 <_sercom_get_default_pad+0xde>
    16d2:	2900      	cmp	r1, #0
    16d4:	d015      	beq.n	1702 <_sercom_get_default_pad+0xfe>
    16d6:	2902      	cmp	r1, #2
    16d8:	d005      	beq.n	16e6 <_sercom_get_default_pad+0xe2>
    16da:	2903      	cmp	r1, #3
    16dc:	d005      	beq.n	16ea <_sercom_get_default_pad+0xe6>
    16de:	2000      	movs	r0, #0
    16e0:	e79e      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16e2:	481e      	ldr	r0, [pc, #120]	; (175c <_sercom_get_default_pad+0x158>)
    16e4:	e79c      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16e6:	481e      	ldr	r0, [pc, #120]	; (1760 <_sercom_get_default_pad+0x15c>)
    16e8:	e79a      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16ea:	481e      	ldr	r0, [pc, #120]	; (1764 <_sercom_get_default_pad+0x160>)
    16ec:	e798      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16ee:	481e      	ldr	r0, [pc, #120]	; (1768 <_sercom_get_default_pad+0x164>)
    16f0:	e796      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16f2:	2003      	movs	r0, #3
    16f4:	e794      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16f6:	481d      	ldr	r0, [pc, #116]	; (176c <_sercom_get_default_pad+0x168>)
    16f8:	e792      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16fa:	481d      	ldr	r0, [pc, #116]	; (1770 <_sercom_get_default_pad+0x16c>)
    16fc:	e790      	b.n	1620 <_sercom_get_default_pad+0x1c>
    16fe:	481d      	ldr	r0, [pc, #116]	; (1774 <_sercom_get_default_pad+0x170>)
    1700:	e78e      	b.n	1620 <_sercom_get_default_pad+0x1c>
    1702:	481d      	ldr	r0, [pc, #116]	; (1778 <_sercom_get_default_pad+0x174>)
    1704:	e78c      	b.n	1620 <_sercom_get_default_pad+0x1c>
    1706:	46c0      	nop			; (mov r8, r8)
    1708:	42001000 	.word	0x42001000
    170c:	42001800 	.word	0x42001800
    1710:	42001c00 	.word	0x42001c00
    1714:	42001400 	.word	0x42001400
    1718:	42000800 	.word	0x42000800
    171c:	42000c00 	.word	0x42000c00
    1720:	00050003 	.word	0x00050003
    1724:	00060003 	.word	0x00060003
    1728:	00070003 	.word	0x00070003
    172c:	00010003 	.word	0x00010003
    1730:	001e0003 	.word	0x001e0003
    1734:	001f0003 	.word	0x001f0003
    1738:	00090003 	.word	0x00090003
    173c:	000a0003 	.word	0x000a0003
    1740:	000b0003 	.word	0x000b0003
    1744:	00110003 	.word	0x00110003
    1748:	00120003 	.word	0x00120003
    174c:	00130003 	.word	0x00130003
    1750:	000d0003 	.word	0x000d0003
    1754:	000e0003 	.word	0x000e0003
    1758:	000f0003 	.word	0x000f0003
    175c:	00170003 	.word	0x00170003
    1760:	00180003 	.word	0x00180003
    1764:	00190003 	.word	0x00190003
    1768:	00040003 	.word	0x00040003
    176c:	00080003 	.word	0x00080003
    1770:	00100003 	.word	0x00100003
    1774:	000c0003 	.word	0x000c0003
    1778:	00160003 	.word	0x00160003

0000177c <_sercom_get_sercom_inst_index>:
    177c:	b530      	push	{r4, r5, lr}
    177e:	b087      	sub	sp, #28
    1780:	4b0b      	ldr	r3, [pc, #44]	; (17b0 <_sercom_get_sercom_inst_index+0x34>)
    1782:	466a      	mov	r2, sp
    1784:	cb32      	ldmia	r3!, {r1, r4, r5}
    1786:	c232      	stmia	r2!, {r1, r4, r5}
    1788:	cb32      	ldmia	r3!, {r1, r4, r5}
    178a:	c232      	stmia	r2!, {r1, r4, r5}
    178c:	9b00      	ldr	r3, [sp, #0]
    178e:	4283      	cmp	r3, r0
    1790:	d00b      	beq.n	17aa <_sercom_get_sercom_inst_index+0x2e>
    1792:	2301      	movs	r3, #1
    1794:	009a      	lsls	r2, r3, #2
    1796:	4669      	mov	r1, sp
    1798:	5852      	ldr	r2, [r2, r1]
    179a:	4282      	cmp	r2, r0
    179c:	d006      	beq.n	17ac <_sercom_get_sercom_inst_index+0x30>
    179e:	3301      	adds	r3, #1
    17a0:	2b06      	cmp	r3, #6
    17a2:	d1f7      	bne.n	1794 <_sercom_get_sercom_inst_index+0x18>
    17a4:	2000      	movs	r0, #0
    17a6:	b007      	add	sp, #28
    17a8:	bd30      	pop	{r4, r5, pc}
    17aa:	2300      	movs	r3, #0
    17ac:	b2d8      	uxtb	r0, r3
    17ae:	e7fa      	b.n	17a6 <_sercom_get_sercom_inst_index+0x2a>
    17b0:	00004a00 	.word	0x00004a00

000017b4 <_sercom_default_handler>:
    17b4:	4770      	bx	lr
	...

000017b8 <_sercom_set_handler>:
    17b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    17ba:	4b0a      	ldr	r3, [pc, #40]	; (17e4 <_sercom_set_handler+0x2c>)
    17bc:	781b      	ldrb	r3, [r3, #0]
    17be:	2b00      	cmp	r3, #0
    17c0:	d10c      	bne.n	17dc <_sercom_set_handler+0x24>
    17c2:	4f09      	ldr	r7, [pc, #36]	; (17e8 <_sercom_set_handler+0x30>)
    17c4:	4e09      	ldr	r6, [pc, #36]	; (17ec <_sercom_set_handler+0x34>)
    17c6:	4d0a      	ldr	r5, [pc, #40]	; (17f0 <_sercom_set_handler+0x38>)
    17c8:	2400      	movs	r4, #0
    17ca:	51de      	str	r6, [r3, r7]
    17cc:	195a      	adds	r2, r3, r5
    17ce:	6014      	str	r4, [r2, #0]
    17d0:	3304      	adds	r3, #4
    17d2:	2b18      	cmp	r3, #24
    17d4:	d1f9      	bne.n	17ca <_sercom_set_handler+0x12>
    17d6:	2201      	movs	r2, #1
    17d8:	4b02      	ldr	r3, [pc, #8]	; (17e4 <_sercom_set_handler+0x2c>)
    17da:	701a      	strb	r2, [r3, #0]
    17dc:	0080      	lsls	r0, r0, #2
    17de:	4b02      	ldr	r3, [pc, #8]	; (17e8 <_sercom_set_handler+0x30>)
    17e0:	50c1      	str	r1, [r0, r3]
    17e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    17e4:	20000272 	.word	0x20000272
    17e8:	20000274 	.word	0x20000274
    17ec:	000017b5 	.word	0x000017b5
    17f0:	20000390 	.word	0x20000390

000017f4 <_sercom_get_interrupt_vector>:
    17f4:	b500      	push	{lr}
    17f6:	b083      	sub	sp, #12
    17f8:	2309      	movs	r3, #9
    17fa:	466a      	mov	r2, sp
    17fc:	7013      	strb	r3, [r2, #0]
    17fe:	3301      	adds	r3, #1
    1800:	7053      	strb	r3, [r2, #1]
    1802:	3301      	adds	r3, #1
    1804:	7093      	strb	r3, [r2, #2]
    1806:	3301      	adds	r3, #1
    1808:	70d3      	strb	r3, [r2, #3]
    180a:	3301      	adds	r3, #1
    180c:	7113      	strb	r3, [r2, #4]
    180e:	3301      	adds	r3, #1
    1810:	7153      	strb	r3, [r2, #5]
    1812:	4b03      	ldr	r3, [pc, #12]	; (1820 <_sercom_get_interrupt_vector+0x2c>)
    1814:	4798      	blx	r3
    1816:	466b      	mov	r3, sp
    1818:	5618      	ldrsb	r0, [r3, r0]
    181a:	b003      	add	sp, #12
    181c:	bd00      	pop	{pc}
    181e:	46c0      	nop			; (mov r8, r8)
    1820:	0000177d 	.word	0x0000177d

00001824 <SERCOM0_Handler>:
    1824:	b510      	push	{r4, lr}
    1826:	4b02      	ldr	r3, [pc, #8]	; (1830 <SERCOM0_Handler+0xc>)
    1828:	681b      	ldr	r3, [r3, #0]
    182a:	2000      	movs	r0, #0
    182c:	4798      	blx	r3
    182e:	bd10      	pop	{r4, pc}
    1830:	20000274 	.word	0x20000274

00001834 <SERCOM1_Handler>:
    1834:	b510      	push	{r4, lr}
    1836:	4b02      	ldr	r3, [pc, #8]	; (1840 <SERCOM1_Handler+0xc>)
    1838:	685b      	ldr	r3, [r3, #4]
    183a:	2001      	movs	r0, #1
    183c:	4798      	blx	r3
    183e:	bd10      	pop	{r4, pc}
    1840:	20000274 	.word	0x20000274

00001844 <SERCOM2_Handler>:
    1844:	b510      	push	{r4, lr}
    1846:	4b02      	ldr	r3, [pc, #8]	; (1850 <SERCOM2_Handler+0xc>)
    1848:	689b      	ldr	r3, [r3, #8]
    184a:	2002      	movs	r0, #2
    184c:	4798      	blx	r3
    184e:	bd10      	pop	{r4, pc}
    1850:	20000274 	.word	0x20000274

00001854 <SERCOM3_Handler>:
    1854:	b510      	push	{r4, lr}
    1856:	4b02      	ldr	r3, [pc, #8]	; (1860 <SERCOM3_Handler+0xc>)
    1858:	68db      	ldr	r3, [r3, #12]
    185a:	2003      	movs	r0, #3
    185c:	4798      	blx	r3
    185e:	bd10      	pop	{r4, pc}
    1860:	20000274 	.word	0x20000274

00001864 <SERCOM4_Handler>:
    1864:	b510      	push	{r4, lr}
    1866:	4b02      	ldr	r3, [pc, #8]	; (1870 <SERCOM4_Handler+0xc>)
    1868:	691b      	ldr	r3, [r3, #16]
    186a:	2004      	movs	r0, #4
    186c:	4798      	blx	r3
    186e:	bd10      	pop	{r4, pc}
    1870:	20000274 	.word	0x20000274

00001874 <SERCOM5_Handler>:
    1874:	b510      	push	{r4, lr}
    1876:	4b02      	ldr	r3, [pc, #8]	; (1880 <SERCOM5_Handler+0xc>)
    1878:	695b      	ldr	r3, [r3, #20]
    187a:	2005      	movs	r0, #5
    187c:	4798      	blx	r3
    187e:	bd10      	pop	{r4, pc}
    1880:	20000274 	.word	0x20000274

00001884 <usart_init>:
    1884:	b5f0      	push	{r4, r5, r6, r7, lr}
    1886:	46de      	mov	lr, fp
    1888:	4657      	mov	r7, sl
    188a:	464e      	mov	r6, r9
    188c:	4645      	mov	r5, r8
    188e:	b5e0      	push	{r5, r6, r7, lr}
    1890:	b091      	sub	sp, #68	; 0x44
    1892:	0005      	movs	r5, r0
    1894:	000c      	movs	r4, r1
    1896:	0016      	movs	r6, r2
    1898:	6029      	str	r1, [r5, #0]
    189a:	0008      	movs	r0, r1
    189c:	4bbc      	ldr	r3, [pc, #752]	; (1b90 <usart_init+0x30c>)
    189e:	4798      	blx	r3
    18a0:	0002      	movs	r2, r0
    18a2:	6823      	ldr	r3, [r4, #0]
    18a4:	2005      	movs	r0, #5
    18a6:	07db      	lsls	r3, r3, #31
    18a8:	d506      	bpl.n	18b8 <usart_init+0x34>
    18aa:	b011      	add	sp, #68	; 0x44
    18ac:	bc3c      	pop	{r2, r3, r4, r5}
    18ae:	4690      	mov	r8, r2
    18b0:	4699      	mov	r9, r3
    18b2:	46a2      	mov	sl, r4
    18b4:	46ab      	mov	fp, r5
    18b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    18b8:	6823      	ldr	r3, [r4, #0]
    18ba:	3017      	adds	r0, #23
    18bc:	079b      	lsls	r3, r3, #30
    18be:	d4f4      	bmi.n	18aa <usart_init+0x26>
    18c0:	49b4      	ldr	r1, [pc, #720]	; (1b94 <usart_init+0x310>)
    18c2:	6a08      	ldr	r0, [r1, #32]
    18c4:	1c97      	adds	r7, r2, #2
    18c6:	2301      	movs	r3, #1
    18c8:	40bb      	lsls	r3, r7
    18ca:	4303      	orrs	r3, r0
    18cc:	620b      	str	r3, [r1, #32]
    18ce:	a90f      	add	r1, sp, #60	; 0x3c
    18d0:	272d      	movs	r7, #45	; 0x2d
    18d2:	5df3      	ldrb	r3, [r6, r7]
    18d4:	700b      	strb	r3, [r1, #0]
    18d6:	3214      	adds	r2, #20
    18d8:	b2d3      	uxtb	r3, r2
    18da:	9302      	str	r3, [sp, #8]
    18dc:	0018      	movs	r0, r3
    18de:	4bae      	ldr	r3, [pc, #696]	; (1b98 <usart_init+0x314>)
    18e0:	4798      	blx	r3
    18e2:	9802      	ldr	r0, [sp, #8]
    18e4:	4bad      	ldr	r3, [pc, #692]	; (1b9c <usart_init+0x318>)
    18e6:	4798      	blx	r3
    18e8:	5df0      	ldrb	r0, [r6, r7]
    18ea:	2100      	movs	r1, #0
    18ec:	4bac      	ldr	r3, [pc, #688]	; (1ba0 <usart_init+0x31c>)
    18ee:	4798      	blx	r3
    18f0:	7af3      	ldrb	r3, [r6, #11]
    18f2:	716b      	strb	r3, [r5, #5]
    18f4:	2324      	movs	r3, #36	; 0x24
    18f6:	5cf3      	ldrb	r3, [r6, r3]
    18f8:	71ab      	strb	r3, [r5, #6]
    18fa:	2325      	movs	r3, #37	; 0x25
    18fc:	5cf3      	ldrb	r3, [r6, r3]
    18fe:	71eb      	strb	r3, [r5, #7]
    1900:	7ef3      	ldrb	r3, [r6, #27]
    1902:	722b      	strb	r3, [r5, #8]
    1904:	7f33      	ldrb	r3, [r6, #28]
    1906:	726b      	strb	r3, [r5, #9]
    1908:	682b      	ldr	r3, [r5, #0]
    190a:	4698      	mov	r8, r3
    190c:	0018      	movs	r0, r3
    190e:	4ba0      	ldr	r3, [pc, #640]	; (1b90 <usart_init+0x30c>)
    1910:	4798      	blx	r3
    1912:	3014      	adds	r0, #20
    1914:	2200      	movs	r2, #0
    1916:	230e      	movs	r3, #14
    1918:	a906      	add	r1, sp, #24
    191a:	468c      	mov	ip, r1
    191c:	4463      	add	r3, ip
    191e:	801a      	strh	r2, [r3, #0]
    1920:	8a32      	ldrh	r2, [r6, #16]
    1922:	9202      	str	r2, [sp, #8]
    1924:	2380      	movs	r3, #128	; 0x80
    1926:	01db      	lsls	r3, r3, #7
    1928:	429a      	cmp	r2, r3
    192a:	d100      	bne.n	192e <usart_init+0xaa>
    192c:	e09e      	b.n	1a6c <usart_init+0x1e8>
    192e:	d90f      	bls.n	1950 <usart_init+0xcc>
    1930:	23c0      	movs	r3, #192	; 0xc0
    1932:	01db      	lsls	r3, r3, #7
    1934:	9a02      	ldr	r2, [sp, #8]
    1936:	429a      	cmp	r2, r3
    1938:	d100      	bne.n	193c <usart_init+0xb8>
    193a:	e092      	b.n	1a62 <usart_init+0x1de>
    193c:	2380      	movs	r3, #128	; 0x80
    193e:	021b      	lsls	r3, r3, #8
    1940:	429a      	cmp	r2, r3
    1942:	d000      	beq.n	1946 <usart_init+0xc2>
    1944:	e11f      	b.n	1b86 <usart_init+0x302>
    1946:	2303      	movs	r3, #3
    1948:	9306      	str	r3, [sp, #24]
    194a:	2300      	movs	r3, #0
    194c:	9307      	str	r3, [sp, #28]
    194e:	e008      	b.n	1962 <usart_init+0xde>
    1950:	2380      	movs	r3, #128	; 0x80
    1952:	019b      	lsls	r3, r3, #6
    1954:	429a      	cmp	r2, r3
    1956:	d000      	beq.n	195a <usart_init+0xd6>
    1958:	e115      	b.n	1b86 <usart_init+0x302>
    195a:	2310      	movs	r3, #16
    195c:	9306      	str	r3, [sp, #24]
    195e:	3b0f      	subs	r3, #15
    1960:	9307      	str	r3, [sp, #28]
    1962:	6833      	ldr	r3, [r6, #0]
    1964:	9305      	str	r3, [sp, #20]
    1966:	68f3      	ldr	r3, [r6, #12]
    1968:	9303      	str	r3, [sp, #12]
    196a:	6973      	ldr	r3, [r6, #20]
    196c:	9304      	str	r3, [sp, #16]
    196e:	7e33      	ldrb	r3, [r6, #24]
    1970:	469b      	mov	fp, r3
    1972:	2326      	movs	r3, #38	; 0x26
    1974:	5cf3      	ldrb	r3, [r6, r3]
    1976:	469a      	mov	sl, r3
    1978:	6873      	ldr	r3, [r6, #4]
    197a:	4699      	mov	r9, r3
    197c:	2b00      	cmp	r3, #0
    197e:	d100      	bne.n	1982 <usart_init+0xfe>
    1980:	e0a0      	b.n	1ac4 <usart_init+0x240>
    1982:	2380      	movs	r3, #128	; 0x80
    1984:	055b      	lsls	r3, r3, #21
    1986:	4599      	cmp	r9, r3
    1988:	d100      	bne.n	198c <usart_init+0x108>
    198a:	e084      	b.n	1a96 <usart_init+0x212>
    198c:	7e73      	ldrb	r3, [r6, #25]
    198e:	2b00      	cmp	r3, #0
    1990:	d002      	beq.n	1998 <usart_init+0x114>
    1992:	7eb3      	ldrb	r3, [r6, #26]
    1994:	4642      	mov	r2, r8
    1996:	7393      	strb	r3, [r2, #14]
    1998:	682a      	ldr	r2, [r5, #0]
    199a:	9f02      	ldr	r7, [sp, #8]
    199c:	69d3      	ldr	r3, [r2, #28]
    199e:	2b00      	cmp	r3, #0
    19a0:	d1fc      	bne.n	199c <usart_init+0x118>
    19a2:	330e      	adds	r3, #14
    19a4:	aa06      	add	r2, sp, #24
    19a6:	4694      	mov	ip, r2
    19a8:	4463      	add	r3, ip
    19aa:	881b      	ldrh	r3, [r3, #0]
    19ac:	4642      	mov	r2, r8
    19ae:	8193      	strh	r3, [r2, #12]
    19b0:	9b05      	ldr	r3, [sp, #20]
    19b2:	9a03      	ldr	r2, [sp, #12]
    19b4:	4313      	orrs	r3, r2
    19b6:	9a04      	ldr	r2, [sp, #16]
    19b8:	4313      	orrs	r3, r2
    19ba:	464a      	mov	r2, r9
    19bc:	4313      	orrs	r3, r2
    19be:	431f      	orrs	r7, r3
    19c0:	465b      	mov	r3, fp
    19c2:	021b      	lsls	r3, r3, #8
    19c4:	431f      	orrs	r7, r3
    19c6:	4653      	mov	r3, sl
    19c8:	075b      	lsls	r3, r3, #29
    19ca:	431f      	orrs	r7, r3
    19cc:	2327      	movs	r3, #39	; 0x27
    19ce:	5cf3      	ldrb	r3, [r6, r3]
    19d0:	2b00      	cmp	r3, #0
    19d2:	d101      	bne.n	19d8 <usart_init+0x154>
    19d4:	3304      	adds	r3, #4
    19d6:	431f      	orrs	r7, r3
    19d8:	7e73      	ldrb	r3, [r6, #25]
    19da:	029b      	lsls	r3, r3, #10
    19dc:	7f32      	ldrb	r2, [r6, #28]
    19de:	0252      	lsls	r2, r2, #9
    19e0:	4313      	orrs	r3, r2
    19e2:	7f72      	ldrb	r2, [r6, #29]
    19e4:	0212      	lsls	r2, r2, #8
    19e6:	4313      	orrs	r3, r2
    19e8:	2224      	movs	r2, #36	; 0x24
    19ea:	5cb2      	ldrb	r2, [r6, r2]
    19ec:	0452      	lsls	r2, r2, #17
    19ee:	4313      	orrs	r3, r2
    19f0:	2225      	movs	r2, #37	; 0x25
    19f2:	5cb2      	ldrb	r2, [r6, r2]
    19f4:	0412      	lsls	r2, r2, #16
    19f6:	4313      	orrs	r3, r2
    19f8:	7ab1      	ldrb	r1, [r6, #10]
    19fa:	7af2      	ldrb	r2, [r6, #11]
    19fc:	4311      	orrs	r1, r2
    19fe:	4319      	orrs	r1, r3
    1a00:	8933      	ldrh	r3, [r6, #8]
    1a02:	2bff      	cmp	r3, #255	; 0xff
    1a04:	d100      	bne.n	1a08 <usart_init+0x184>
    1a06:	e081      	b.n	1b0c <usart_init+0x288>
    1a08:	2280      	movs	r2, #128	; 0x80
    1a0a:	0452      	lsls	r2, r2, #17
    1a0c:	4317      	orrs	r7, r2
    1a0e:	4319      	orrs	r1, r3
    1a10:	232c      	movs	r3, #44	; 0x2c
    1a12:	5cf3      	ldrb	r3, [r6, r3]
    1a14:	2b00      	cmp	r3, #0
    1a16:	d103      	bne.n	1a20 <usart_init+0x19c>
    1a18:	4b62      	ldr	r3, [pc, #392]	; (1ba4 <usart_init+0x320>)
    1a1a:	789b      	ldrb	r3, [r3, #2]
    1a1c:	079b      	lsls	r3, r3, #30
    1a1e:	d501      	bpl.n	1a24 <usart_init+0x1a0>
    1a20:	2380      	movs	r3, #128	; 0x80
    1a22:	431f      	orrs	r7, r3
    1a24:	682a      	ldr	r2, [r5, #0]
    1a26:	69d3      	ldr	r3, [r2, #28]
    1a28:	2b00      	cmp	r3, #0
    1a2a:	d1fc      	bne.n	1a26 <usart_init+0x1a2>
    1a2c:	4643      	mov	r3, r8
    1a2e:	6059      	str	r1, [r3, #4]
    1a30:	682a      	ldr	r2, [r5, #0]
    1a32:	69d3      	ldr	r3, [r2, #28]
    1a34:	2b00      	cmp	r3, #0
    1a36:	d1fc      	bne.n	1a32 <usart_init+0x1ae>
    1a38:	4643      	mov	r3, r8
    1a3a:	601f      	str	r7, [r3, #0]
    1a3c:	ab0e      	add	r3, sp, #56	; 0x38
    1a3e:	2280      	movs	r2, #128	; 0x80
    1a40:	701a      	strb	r2, [r3, #0]
    1a42:	2200      	movs	r2, #0
    1a44:	705a      	strb	r2, [r3, #1]
    1a46:	70da      	strb	r2, [r3, #3]
    1a48:	709a      	strb	r2, [r3, #2]
    1a4a:	6b33      	ldr	r3, [r6, #48]	; 0x30
    1a4c:	930a      	str	r3, [sp, #40]	; 0x28
    1a4e:	6b73      	ldr	r3, [r6, #52]	; 0x34
    1a50:	930b      	str	r3, [sp, #44]	; 0x2c
    1a52:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    1a54:	930c      	str	r3, [sp, #48]	; 0x30
    1a56:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
    1a58:	9302      	str	r3, [sp, #8]
    1a5a:	930d      	str	r3, [sp, #52]	; 0x34
    1a5c:	2700      	movs	r7, #0
    1a5e:	ae0a      	add	r6, sp, #40	; 0x28
    1a60:	e063      	b.n	1b2a <usart_init+0x2a6>
    1a62:	2308      	movs	r3, #8
    1a64:	9306      	str	r3, [sp, #24]
    1a66:	3b07      	subs	r3, #7
    1a68:	9307      	str	r3, [sp, #28]
    1a6a:	e77a      	b.n	1962 <usart_init+0xde>
    1a6c:	6833      	ldr	r3, [r6, #0]
    1a6e:	9305      	str	r3, [sp, #20]
    1a70:	68f3      	ldr	r3, [r6, #12]
    1a72:	9303      	str	r3, [sp, #12]
    1a74:	6973      	ldr	r3, [r6, #20]
    1a76:	9304      	str	r3, [sp, #16]
    1a78:	7e33      	ldrb	r3, [r6, #24]
    1a7a:	469b      	mov	fp, r3
    1a7c:	2326      	movs	r3, #38	; 0x26
    1a7e:	5cf3      	ldrb	r3, [r6, r3]
    1a80:	469a      	mov	sl, r3
    1a82:	6873      	ldr	r3, [r6, #4]
    1a84:	4699      	mov	r9, r3
    1a86:	2b00      	cmp	r3, #0
    1a88:	d018      	beq.n	1abc <usart_init+0x238>
    1a8a:	2380      	movs	r3, #128	; 0x80
    1a8c:	055b      	lsls	r3, r3, #21
    1a8e:	4599      	cmp	r9, r3
    1a90:	d001      	beq.n	1a96 <usart_init+0x212>
    1a92:	2000      	movs	r0, #0
    1a94:	e025      	b.n	1ae2 <usart_init+0x25e>
    1a96:	2327      	movs	r3, #39	; 0x27
    1a98:	5cf3      	ldrb	r3, [r6, r3]
    1a9a:	2b00      	cmp	r3, #0
    1a9c:	d000      	beq.n	1aa0 <usart_init+0x21c>
    1a9e:	e775      	b.n	198c <usart_init+0x108>
    1aa0:	6a33      	ldr	r3, [r6, #32]
    1aa2:	001f      	movs	r7, r3
    1aa4:	b2c0      	uxtb	r0, r0
    1aa6:	4b40      	ldr	r3, [pc, #256]	; (1ba8 <usart_init+0x324>)
    1aa8:	4798      	blx	r3
    1aaa:	0001      	movs	r1, r0
    1aac:	220e      	movs	r2, #14
    1aae:	ab06      	add	r3, sp, #24
    1ab0:	469c      	mov	ip, r3
    1ab2:	4462      	add	r2, ip
    1ab4:	0038      	movs	r0, r7
    1ab6:	4b3d      	ldr	r3, [pc, #244]	; (1bac <usart_init+0x328>)
    1ab8:	4798      	blx	r3
    1aba:	e012      	b.n	1ae2 <usart_init+0x25e>
    1abc:	2308      	movs	r3, #8
    1abe:	9306      	str	r3, [sp, #24]
    1ac0:	2300      	movs	r3, #0
    1ac2:	9307      	str	r3, [sp, #28]
    1ac4:	2327      	movs	r3, #39	; 0x27
    1ac6:	5cf3      	ldrb	r3, [r6, r3]
    1ac8:	2b00      	cmp	r3, #0
    1aca:	d00e      	beq.n	1aea <usart_init+0x266>
    1acc:	9b06      	ldr	r3, [sp, #24]
    1ace:	9300      	str	r3, [sp, #0]
    1ad0:	9b07      	ldr	r3, [sp, #28]
    1ad2:	220e      	movs	r2, #14
    1ad4:	a906      	add	r1, sp, #24
    1ad6:	468c      	mov	ip, r1
    1ad8:	4462      	add	r2, ip
    1ada:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    1adc:	6a30      	ldr	r0, [r6, #32]
    1ade:	4f34      	ldr	r7, [pc, #208]	; (1bb0 <usart_init+0x32c>)
    1ae0:	47b8      	blx	r7
    1ae2:	2800      	cmp	r0, #0
    1ae4:	d000      	beq.n	1ae8 <usart_init+0x264>
    1ae6:	e6e0      	b.n	18aa <usart_init+0x26>
    1ae8:	e750      	b.n	198c <usart_init+0x108>
    1aea:	6a33      	ldr	r3, [r6, #32]
    1aec:	001f      	movs	r7, r3
    1aee:	b2c0      	uxtb	r0, r0
    1af0:	4b2d      	ldr	r3, [pc, #180]	; (1ba8 <usart_init+0x324>)
    1af2:	4798      	blx	r3
    1af4:	0001      	movs	r1, r0
    1af6:	9b06      	ldr	r3, [sp, #24]
    1af8:	9300      	str	r3, [sp, #0]
    1afa:	9b07      	ldr	r3, [sp, #28]
    1afc:	220e      	movs	r2, #14
    1afe:	a806      	add	r0, sp, #24
    1b00:	4684      	mov	ip, r0
    1b02:	4462      	add	r2, ip
    1b04:	0038      	movs	r0, r7
    1b06:	4f2a      	ldr	r7, [pc, #168]	; (1bb0 <usart_init+0x32c>)
    1b08:	47b8      	blx	r7
    1b0a:	e7ea      	b.n	1ae2 <usart_init+0x25e>
    1b0c:	7ef3      	ldrb	r3, [r6, #27]
    1b0e:	2b00      	cmp	r3, #0
    1b10:	d100      	bne.n	1b14 <usart_init+0x290>
    1b12:	e77d      	b.n	1a10 <usart_init+0x18c>
    1b14:	2380      	movs	r3, #128	; 0x80
    1b16:	04db      	lsls	r3, r3, #19
    1b18:	431f      	orrs	r7, r3
    1b1a:	e779      	b.n	1a10 <usart_init+0x18c>
    1b1c:	0020      	movs	r0, r4
    1b1e:	4b25      	ldr	r3, [pc, #148]	; (1bb4 <usart_init+0x330>)
    1b20:	4798      	blx	r3
    1b22:	e007      	b.n	1b34 <usart_init+0x2b0>
    1b24:	3701      	adds	r7, #1
    1b26:	2f04      	cmp	r7, #4
    1b28:	d00d      	beq.n	1b46 <usart_init+0x2c2>
    1b2a:	b2f9      	uxtb	r1, r7
    1b2c:	00bb      	lsls	r3, r7, #2
    1b2e:	5998      	ldr	r0, [r3, r6]
    1b30:	2800      	cmp	r0, #0
    1b32:	d0f3      	beq.n	1b1c <usart_init+0x298>
    1b34:	1c43      	adds	r3, r0, #1
    1b36:	d0f5      	beq.n	1b24 <usart_init+0x2a0>
    1b38:	a90e      	add	r1, sp, #56	; 0x38
    1b3a:	7008      	strb	r0, [r1, #0]
    1b3c:	0c00      	lsrs	r0, r0, #16
    1b3e:	b2c0      	uxtb	r0, r0
    1b40:	4b1d      	ldr	r3, [pc, #116]	; (1bb8 <usart_init+0x334>)
    1b42:	4798      	blx	r3
    1b44:	e7ee      	b.n	1b24 <usart_init+0x2a0>
    1b46:	2300      	movs	r3, #0
    1b48:	60eb      	str	r3, [r5, #12]
    1b4a:	612b      	str	r3, [r5, #16]
    1b4c:	616b      	str	r3, [r5, #20]
    1b4e:	61ab      	str	r3, [r5, #24]
    1b50:	61eb      	str	r3, [r5, #28]
    1b52:	622b      	str	r3, [r5, #32]
    1b54:	62ab      	str	r3, [r5, #40]	; 0x28
    1b56:	626b      	str	r3, [r5, #36]	; 0x24
    1b58:	2200      	movs	r2, #0
    1b5a:	85eb      	strh	r3, [r5, #46]	; 0x2e
    1b5c:	85ab      	strh	r3, [r5, #44]	; 0x2c
    1b5e:	3330      	adds	r3, #48	; 0x30
    1b60:	54ea      	strb	r2, [r5, r3]
    1b62:	3301      	adds	r3, #1
    1b64:	54ea      	strb	r2, [r5, r3]
    1b66:	3301      	adds	r3, #1
    1b68:	54ea      	strb	r2, [r5, r3]
    1b6a:	3301      	adds	r3, #1
    1b6c:	54ea      	strb	r2, [r5, r3]
    1b6e:	6828      	ldr	r0, [r5, #0]
    1b70:	4b07      	ldr	r3, [pc, #28]	; (1b90 <usart_init+0x30c>)
    1b72:	4798      	blx	r3
    1b74:	0004      	movs	r4, r0
    1b76:	4911      	ldr	r1, [pc, #68]	; (1bbc <usart_init+0x338>)
    1b78:	4b11      	ldr	r3, [pc, #68]	; (1bc0 <usart_init+0x33c>)
    1b7a:	4798      	blx	r3
    1b7c:	00a4      	lsls	r4, r4, #2
    1b7e:	4b11      	ldr	r3, [pc, #68]	; (1bc4 <usart_init+0x340>)
    1b80:	50e5      	str	r5, [r4, r3]
    1b82:	2000      	movs	r0, #0
    1b84:	e691      	b.n	18aa <usart_init+0x26>
    1b86:	2310      	movs	r3, #16
    1b88:	9306      	str	r3, [sp, #24]
    1b8a:	2300      	movs	r3, #0
    1b8c:	9307      	str	r3, [sp, #28]
    1b8e:	e6e8      	b.n	1962 <usart_init+0xde>
    1b90:	0000177d 	.word	0x0000177d
    1b94:	40000400 	.word	0x40000400
    1b98:	00002385 	.word	0x00002385
    1b9c:	000022f9 	.word	0x000022f9
    1ba0:	000015b9 	.word	0x000015b9
    1ba4:	41002000 	.word	0x41002000
    1ba8:	000023a1 	.word	0x000023a1
    1bac:	000014fb 	.word	0x000014fb
    1bb0:	00001525 	.word	0x00001525
    1bb4:	00001605 	.word	0x00001605
    1bb8:	0000247d 	.word	0x0000247d
    1bbc:	00001cad 	.word	0x00001cad
    1bc0:	000017b9 	.word	0x000017b9
    1bc4:	20000390 	.word	0x20000390

00001bc8 <_usart_write_buffer>:
    1bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1bca:	0006      	movs	r6, r0
    1bcc:	000c      	movs	r4, r1
    1bce:	0015      	movs	r5, r2
    1bd0:	6807      	ldr	r7, [r0, #0]
    1bd2:	4b0a      	ldr	r3, [pc, #40]	; (1bfc <_usart_write_buffer+0x34>)
    1bd4:	4798      	blx	r3
    1bd6:	8df3      	ldrh	r3, [r6, #46]	; 0x2e
    1bd8:	b29b      	uxth	r3, r3
    1bda:	2b00      	cmp	r3, #0
    1bdc:	d003      	beq.n	1be6 <_usart_write_buffer+0x1e>
    1bde:	4b08      	ldr	r3, [pc, #32]	; (1c00 <_usart_write_buffer+0x38>)
    1be0:	4798      	blx	r3
    1be2:	2005      	movs	r0, #5
    1be4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1be6:	85f5      	strh	r5, [r6, #46]	; 0x2e
    1be8:	4b05      	ldr	r3, [pc, #20]	; (1c00 <_usart_write_buffer+0x38>)
    1bea:	4798      	blx	r3
    1bec:	62b4      	str	r4, [r6, #40]	; 0x28
    1bee:	2205      	movs	r2, #5
    1bf0:	2333      	movs	r3, #51	; 0x33
    1bf2:	54f2      	strb	r2, [r6, r3]
    1bf4:	3b32      	subs	r3, #50	; 0x32
    1bf6:	75bb      	strb	r3, [r7, #22]
    1bf8:	2000      	movs	r0, #0
    1bfa:	e7f3      	b.n	1be4 <_usart_write_buffer+0x1c>
    1bfc:	000011a5 	.word	0x000011a5
    1c00:	000011e5 	.word	0x000011e5

00001c04 <_usart_read_buffer>:
    1c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1c06:	0004      	movs	r4, r0
    1c08:	000d      	movs	r5, r1
    1c0a:	0016      	movs	r6, r2
    1c0c:	6807      	ldr	r7, [r0, #0]
    1c0e:	4b0f      	ldr	r3, [pc, #60]	; (1c4c <_usart_read_buffer+0x48>)
    1c10:	4798      	blx	r3
    1c12:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
    1c14:	b29b      	uxth	r3, r3
    1c16:	2b00      	cmp	r3, #0
    1c18:	d003      	beq.n	1c22 <_usart_read_buffer+0x1e>
    1c1a:	4b0d      	ldr	r3, [pc, #52]	; (1c50 <_usart_read_buffer+0x4c>)
    1c1c:	4798      	blx	r3
    1c1e:	2005      	movs	r0, #5
    1c20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1c22:	85a6      	strh	r6, [r4, #44]	; 0x2c
    1c24:	4b0a      	ldr	r3, [pc, #40]	; (1c50 <_usart_read_buffer+0x4c>)
    1c26:	4798      	blx	r3
    1c28:	6265      	str	r5, [r4, #36]	; 0x24
    1c2a:	2205      	movs	r2, #5
    1c2c:	2332      	movs	r3, #50	; 0x32
    1c2e:	54e2      	strb	r2, [r4, r3]
    1c30:	3b2e      	subs	r3, #46	; 0x2e
    1c32:	75bb      	strb	r3, [r7, #22]
    1c34:	7a23      	ldrb	r3, [r4, #8]
    1c36:	2b00      	cmp	r3, #0
    1c38:	d001      	beq.n	1c3e <_usart_read_buffer+0x3a>
    1c3a:	2320      	movs	r3, #32
    1c3c:	75bb      	strb	r3, [r7, #22]
    1c3e:	7a63      	ldrb	r3, [r4, #9]
    1c40:	2000      	movs	r0, #0
    1c42:	2b00      	cmp	r3, #0
    1c44:	d0ec      	beq.n	1c20 <_usart_read_buffer+0x1c>
    1c46:	2308      	movs	r3, #8
    1c48:	75bb      	strb	r3, [r7, #22]
    1c4a:	e7e9      	b.n	1c20 <_usart_read_buffer+0x1c>
    1c4c:	000011a5 	.word	0x000011a5
    1c50:	000011e5 	.word	0x000011e5

00001c54 <usart_register_callback>:
    1c54:	1c93      	adds	r3, r2, #2
    1c56:	009b      	lsls	r3, r3, #2
    1c58:	18c3      	adds	r3, r0, r3
    1c5a:	6059      	str	r1, [r3, #4]
    1c5c:	2130      	movs	r1, #48	; 0x30
    1c5e:	2301      	movs	r3, #1
    1c60:	4093      	lsls	r3, r2
    1c62:	001a      	movs	r2, r3
    1c64:	5c43      	ldrb	r3, [r0, r1]
    1c66:	4313      	orrs	r3, r2
    1c68:	5443      	strb	r3, [r0, r1]
    1c6a:	4770      	bx	lr

00001c6c <usart_write_buffer_job>:
    1c6c:	b510      	push	{r4, lr}
    1c6e:	2317      	movs	r3, #23
    1c70:	2a00      	cmp	r2, #0
    1c72:	d101      	bne.n	1c78 <usart_write_buffer_job+0xc>
    1c74:	0018      	movs	r0, r3
    1c76:	bd10      	pop	{r4, pc}
    1c78:	79c4      	ldrb	r4, [r0, #7]
    1c7a:	3305      	adds	r3, #5
    1c7c:	2c00      	cmp	r4, #0
    1c7e:	d0f9      	beq.n	1c74 <usart_write_buffer_job+0x8>
    1c80:	4b01      	ldr	r3, [pc, #4]	; (1c88 <usart_write_buffer_job+0x1c>)
    1c82:	4798      	blx	r3
    1c84:	0003      	movs	r3, r0
    1c86:	e7f5      	b.n	1c74 <usart_write_buffer_job+0x8>
    1c88:	00001bc9 	.word	0x00001bc9

00001c8c <usart_read_buffer_job>:
    1c8c:	b510      	push	{r4, lr}
    1c8e:	2317      	movs	r3, #23
    1c90:	2a00      	cmp	r2, #0
    1c92:	d101      	bne.n	1c98 <usart_read_buffer_job+0xc>
    1c94:	0018      	movs	r0, r3
    1c96:	bd10      	pop	{r4, pc}
    1c98:	7984      	ldrb	r4, [r0, #6]
    1c9a:	3305      	adds	r3, #5
    1c9c:	2c00      	cmp	r4, #0
    1c9e:	d0f9      	beq.n	1c94 <usart_read_buffer_job+0x8>
    1ca0:	4b01      	ldr	r3, [pc, #4]	; (1ca8 <usart_read_buffer_job+0x1c>)
    1ca2:	4798      	blx	r3
    1ca4:	0003      	movs	r3, r0
    1ca6:	e7f5      	b.n	1c94 <usart_read_buffer_job+0x8>
    1ca8:	00001c05 	.word	0x00001c05

00001cac <_usart_interrupt_handler>:
    1cac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1cae:	0080      	lsls	r0, r0, #2
    1cb0:	4b62      	ldr	r3, [pc, #392]	; (1e3c <_usart_interrupt_handler+0x190>)
    1cb2:	58c5      	ldr	r5, [r0, r3]
    1cb4:	682c      	ldr	r4, [r5, #0]
    1cb6:	69e3      	ldr	r3, [r4, #28]
    1cb8:	2b00      	cmp	r3, #0
    1cba:	d1fc      	bne.n	1cb6 <_usart_interrupt_handler+0xa>
    1cbc:	7e23      	ldrb	r3, [r4, #24]
    1cbe:	7da6      	ldrb	r6, [r4, #22]
    1cc0:	401e      	ands	r6, r3
    1cc2:	2330      	movs	r3, #48	; 0x30
    1cc4:	5ceb      	ldrb	r3, [r5, r3]
    1cc6:	2231      	movs	r2, #49	; 0x31
    1cc8:	5caf      	ldrb	r7, [r5, r2]
    1cca:	401f      	ands	r7, r3
    1ccc:	07f3      	lsls	r3, r6, #31
    1cce:	d522      	bpl.n	1d16 <_usart_interrupt_handler+0x6a>
    1cd0:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    1cd2:	b29b      	uxth	r3, r3
    1cd4:	2b00      	cmp	r3, #0
    1cd6:	d01c      	beq.n	1d12 <_usart_interrupt_handler+0x66>
    1cd8:	6aaa      	ldr	r2, [r5, #40]	; 0x28
    1cda:	7813      	ldrb	r3, [r2, #0]
    1cdc:	b2db      	uxtb	r3, r3
    1cde:	1c51      	adds	r1, r2, #1
    1ce0:	62a9      	str	r1, [r5, #40]	; 0x28
    1ce2:	7969      	ldrb	r1, [r5, #5]
    1ce4:	2901      	cmp	r1, #1
    1ce6:	d00e      	beq.n	1d06 <_usart_interrupt_handler+0x5a>
    1ce8:	b29b      	uxth	r3, r3
    1cea:	05db      	lsls	r3, r3, #23
    1cec:	0ddb      	lsrs	r3, r3, #23
    1cee:	8523      	strh	r3, [r4, #40]	; 0x28
    1cf0:	8deb      	ldrh	r3, [r5, #46]	; 0x2e
    1cf2:	3b01      	subs	r3, #1
    1cf4:	b29b      	uxth	r3, r3
    1cf6:	85eb      	strh	r3, [r5, #46]	; 0x2e
    1cf8:	2b00      	cmp	r3, #0
    1cfa:	d10c      	bne.n	1d16 <_usart_interrupt_handler+0x6a>
    1cfc:	3301      	adds	r3, #1
    1cfe:	7523      	strb	r3, [r4, #20]
    1d00:	3301      	adds	r3, #1
    1d02:	75a3      	strb	r3, [r4, #22]
    1d04:	e007      	b.n	1d16 <_usart_interrupt_handler+0x6a>
    1d06:	7851      	ldrb	r1, [r2, #1]
    1d08:	0209      	lsls	r1, r1, #8
    1d0a:	430b      	orrs	r3, r1
    1d0c:	3202      	adds	r2, #2
    1d0e:	62aa      	str	r2, [r5, #40]	; 0x28
    1d10:	e7eb      	b.n	1cea <_usart_interrupt_handler+0x3e>
    1d12:	2301      	movs	r3, #1
    1d14:	7523      	strb	r3, [r4, #20]
    1d16:	07b3      	lsls	r3, r6, #30
    1d18:	d506      	bpl.n	1d28 <_usart_interrupt_handler+0x7c>
    1d1a:	2302      	movs	r3, #2
    1d1c:	7523      	strb	r3, [r4, #20]
    1d1e:	2200      	movs	r2, #0
    1d20:	3331      	adds	r3, #49	; 0x31
    1d22:	54ea      	strb	r2, [r5, r3]
    1d24:	07fb      	lsls	r3, r7, #31
    1d26:	d41a      	bmi.n	1d5e <_usart_interrupt_handler+0xb2>
    1d28:	0773      	lsls	r3, r6, #29
    1d2a:	d565      	bpl.n	1df8 <_usart_interrupt_handler+0x14c>
    1d2c:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    1d2e:	b29b      	uxth	r3, r3
    1d30:	2b00      	cmp	r3, #0
    1d32:	d05f      	beq.n	1df4 <_usart_interrupt_handler+0x148>
    1d34:	8b63      	ldrh	r3, [r4, #26]
    1d36:	b2db      	uxtb	r3, r3
    1d38:	071a      	lsls	r2, r3, #28
    1d3a:	d414      	bmi.n	1d66 <_usart_interrupt_handler+0xba>
    1d3c:	223f      	movs	r2, #63	; 0x3f
    1d3e:	4013      	ands	r3, r2
    1d40:	2b00      	cmp	r3, #0
    1d42:	d034      	beq.n	1dae <_usart_interrupt_handler+0x102>
    1d44:	079a      	lsls	r2, r3, #30
    1d46:	d511      	bpl.n	1d6c <_usart_interrupt_handler+0xc0>
    1d48:	221a      	movs	r2, #26
    1d4a:	2332      	movs	r3, #50	; 0x32
    1d4c:	54ea      	strb	r2, [r5, r3]
    1d4e:	3b30      	subs	r3, #48	; 0x30
    1d50:	8363      	strh	r3, [r4, #26]
    1d52:	077b      	lsls	r3, r7, #29
    1d54:	d550      	bpl.n	1df8 <_usart_interrupt_handler+0x14c>
    1d56:	0028      	movs	r0, r5
    1d58:	696b      	ldr	r3, [r5, #20]
    1d5a:	4798      	blx	r3
    1d5c:	e04c      	b.n	1df8 <_usart_interrupt_handler+0x14c>
    1d5e:	0028      	movs	r0, r5
    1d60:	68eb      	ldr	r3, [r5, #12]
    1d62:	4798      	blx	r3
    1d64:	e7e0      	b.n	1d28 <_usart_interrupt_handler+0x7c>
    1d66:	2237      	movs	r2, #55	; 0x37
    1d68:	4013      	ands	r3, r2
    1d6a:	e7e9      	b.n	1d40 <_usart_interrupt_handler+0x94>
    1d6c:	075a      	lsls	r2, r3, #29
    1d6e:	d505      	bpl.n	1d7c <_usart_interrupt_handler+0xd0>
    1d70:	221e      	movs	r2, #30
    1d72:	2332      	movs	r3, #50	; 0x32
    1d74:	54ea      	strb	r2, [r5, r3]
    1d76:	3b2e      	subs	r3, #46	; 0x2e
    1d78:	8363      	strh	r3, [r4, #26]
    1d7a:	e7ea      	b.n	1d52 <_usart_interrupt_handler+0xa6>
    1d7c:	07da      	lsls	r2, r3, #31
    1d7e:	d505      	bpl.n	1d8c <_usart_interrupt_handler+0xe0>
    1d80:	2213      	movs	r2, #19
    1d82:	2332      	movs	r3, #50	; 0x32
    1d84:	54ea      	strb	r2, [r5, r3]
    1d86:	3b31      	subs	r3, #49	; 0x31
    1d88:	8363      	strh	r3, [r4, #26]
    1d8a:	e7e2      	b.n	1d52 <_usart_interrupt_handler+0xa6>
    1d8c:	06da      	lsls	r2, r3, #27
    1d8e:	d505      	bpl.n	1d9c <_usart_interrupt_handler+0xf0>
    1d90:	2242      	movs	r2, #66	; 0x42
    1d92:	2332      	movs	r3, #50	; 0x32
    1d94:	54ea      	strb	r2, [r5, r3]
    1d96:	3b22      	subs	r3, #34	; 0x22
    1d98:	8363      	strh	r3, [r4, #26]
    1d9a:	e7da      	b.n	1d52 <_usart_interrupt_handler+0xa6>
    1d9c:	2220      	movs	r2, #32
    1d9e:	421a      	tst	r2, r3
    1da0:	d0d7      	beq.n	1d52 <_usart_interrupt_handler+0xa6>
    1da2:	3221      	adds	r2, #33	; 0x21
    1da4:	2332      	movs	r3, #50	; 0x32
    1da6:	54ea      	strb	r2, [r5, r3]
    1da8:	3b12      	subs	r3, #18
    1daa:	8363      	strh	r3, [r4, #26]
    1dac:	e7d1      	b.n	1d52 <_usart_interrupt_handler+0xa6>
    1dae:	8d23      	ldrh	r3, [r4, #40]	; 0x28
    1db0:	05db      	lsls	r3, r3, #23
    1db2:	0ddb      	lsrs	r3, r3, #23
    1db4:	b2da      	uxtb	r2, r3
    1db6:	6a69      	ldr	r1, [r5, #36]	; 0x24
    1db8:	700a      	strb	r2, [r1, #0]
    1dba:	6a6a      	ldr	r2, [r5, #36]	; 0x24
    1dbc:	1c51      	adds	r1, r2, #1
    1dbe:	6269      	str	r1, [r5, #36]	; 0x24
    1dc0:	7969      	ldrb	r1, [r5, #5]
    1dc2:	2901      	cmp	r1, #1
    1dc4:	d010      	beq.n	1de8 <_usart_interrupt_handler+0x13c>
    1dc6:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
    1dc8:	3b01      	subs	r3, #1
    1dca:	b29b      	uxth	r3, r3
    1dcc:	85ab      	strh	r3, [r5, #44]	; 0x2c
    1dce:	2b00      	cmp	r3, #0
    1dd0:	d112      	bne.n	1df8 <_usart_interrupt_handler+0x14c>
    1dd2:	3304      	adds	r3, #4
    1dd4:	7523      	strb	r3, [r4, #20]
    1dd6:	2200      	movs	r2, #0
    1dd8:	332e      	adds	r3, #46	; 0x2e
    1dda:	54ea      	strb	r2, [r5, r3]
    1ddc:	07bb      	lsls	r3, r7, #30
    1dde:	d50b      	bpl.n	1df8 <_usart_interrupt_handler+0x14c>
    1de0:	0028      	movs	r0, r5
    1de2:	692b      	ldr	r3, [r5, #16]
    1de4:	4798      	blx	r3
    1de6:	e007      	b.n	1df8 <_usart_interrupt_handler+0x14c>
    1de8:	0a1b      	lsrs	r3, r3, #8
    1dea:	7053      	strb	r3, [r2, #1]
    1dec:	6a6b      	ldr	r3, [r5, #36]	; 0x24
    1dee:	3301      	adds	r3, #1
    1df0:	626b      	str	r3, [r5, #36]	; 0x24
    1df2:	e7e8      	b.n	1dc6 <_usart_interrupt_handler+0x11a>
    1df4:	2304      	movs	r3, #4
    1df6:	7523      	strb	r3, [r4, #20]
    1df8:	06f3      	lsls	r3, r6, #27
    1dfa:	d504      	bpl.n	1e06 <_usart_interrupt_handler+0x15a>
    1dfc:	2310      	movs	r3, #16
    1dfe:	7523      	strb	r3, [r4, #20]
    1e00:	7623      	strb	r3, [r4, #24]
    1e02:	06fb      	lsls	r3, r7, #27
    1e04:	d40e      	bmi.n	1e24 <_usart_interrupt_handler+0x178>
    1e06:	06b3      	lsls	r3, r6, #26
    1e08:	d504      	bpl.n	1e14 <_usart_interrupt_handler+0x168>
    1e0a:	2320      	movs	r3, #32
    1e0c:	7523      	strb	r3, [r4, #20]
    1e0e:	7623      	strb	r3, [r4, #24]
    1e10:	073b      	lsls	r3, r7, #28
    1e12:	d40b      	bmi.n	1e2c <_usart_interrupt_handler+0x180>
    1e14:	0733      	lsls	r3, r6, #28
    1e16:	d504      	bpl.n	1e22 <_usart_interrupt_handler+0x176>
    1e18:	2308      	movs	r3, #8
    1e1a:	7523      	strb	r3, [r4, #20]
    1e1c:	7623      	strb	r3, [r4, #24]
    1e1e:	06bb      	lsls	r3, r7, #26
    1e20:	d408      	bmi.n	1e34 <_usart_interrupt_handler+0x188>
    1e22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1e24:	0028      	movs	r0, r5
    1e26:	69eb      	ldr	r3, [r5, #28]
    1e28:	4798      	blx	r3
    1e2a:	e7ec      	b.n	1e06 <_usart_interrupt_handler+0x15a>
    1e2c:	0028      	movs	r0, r5
    1e2e:	69ab      	ldr	r3, [r5, #24]
    1e30:	4798      	blx	r3
    1e32:	e7ef      	b.n	1e14 <_usart_interrupt_handler+0x168>
    1e34:	6a2b      	ldr	r3, [r5, #32]
    1e36:	0028      	movs	r0, r5
    1e38:	4798      	blx	r3
    1e3a:	e7f2      	b.n	1e22 <_usart_interrupt_handler+0x176>
    1e3c:	20000390 	.word	0x20000390

00001e40 <system_clock_source_get_hz>:
    1e40:	b510      	push	{r4, lr}
    1e42:	2808      	cmp	r0, #8
    1e44:	d803      	bhi.n	1e4e <system_clock_source_get_hz+0xe>
    1e46:	0080      	lsls	r0, r0, #2
    1e48:	4b1b      	ldr	r3, [pc, #108]	; (1eb8 <system_clock_source_get_hz+0x78>)
    1e4a:	581b      	ldr	r3, [r3, r0]
    1e4c:	469f      	mov	pc, r3
    1e4e:	2000      	movs	r0, #0
    1e50:	e030      	b.n	1eb4 <system_clock_source_get_hz+0x74>
    1e52:	4b1a      	ldr	r3, [pc, #104]	; (1ebc <system_clock_source_get_hz+0x7c>)
    1e54:	6918      	ldr	r0, [r3, #16]
    1e56:	e02d      	b.n	1eb4 <system_clock_source_get_hz+0x74>
    1e58:	4b19      	ldr	r3, [pc, #100]	; (1ec0 <system_clock_source_get_hz+0x80>)
    1e5a:	6a1b      	ldr	r3, [r3, #32]
    1e5c:	059b      	lsls	r3, r3, #22
    1e5e:	0f9b      	lsrs	r3, r3, #30
    1e60:	4818      	ldr	r0, [pc, #96]	; (1ec4 <system_clock_source_get_hz+0x84>)
    1e62:	40d8      	lsrs	r0, r3
    1e64:	e026      	b.n	1eb4 <system_clock_source_get_hz+0x74>
    1e66:	4b15      	ldr	r3, [pc, #84]	; (1ebc <system_clock_source_get_hz+0x7c>)
    1e68:	6958      	ldr	r0, [r3, #20]
    1e6a:	e023      	b.n	1eb4 <system_clock_source_get_hz+0x74>
    1e6c:	4b13      	ldr	r3, [pc, #76]	; (1ebc <system_clock_source_get_hz+0x7c>)
    1e6e:	681b      	ldr	r3, [r3, #0]
    1e70:	2000      	movs	r0, #0
    1e72:	079b      	lsls	r3, r3, #30
    1e74:	d51e      	bpl.n	1eb4 <system_clock_source_get_hz+0x74>
    1e76:	4912      	ldr	r1, [pc, #72]	; (1ec0 <system_clock_source_get_hz+0x80>)
    1e78:	2210      	movs	r2, #16
    1e7a:	68cb      	ldr	r3, [r1, #12]
    1e7c:	421a      	tst	r2, r3
    1e7e:	d0fc      	beq.n	1e7a <system_clock_source_get_hz+0x3a>
    1e80:	4b0e      	ldr	r3, [pc, #56]	; (1ebc <system_clock_source_get_hz+0x7c>)
    1e82:	681b      	ldr	r3, [r3, #0]
    1e84:	075b      	lsls	r3, r3, #29
    1e86:	d401      	bmi.n	1e8c <system_clock_source_get_hz+0x4c>
    1e88:	480f      	ldr	r0, [pc, #60]	; (1ec8 <system_clock_source_get_hz+0x88>)
    1e8a:	e013      	b.n	1eb4 <system_clock_source_get_hz+0x74>
    1e8c:	2000      	movs	r0, #0
    1e8e:	4b0f      	ldr	r3, [pc, #60]	; (1ecc <system_clock_source_get_hz+0x8c>)
    1e90:	4798      	blx	r3
    1e92:	4b0a      	ldr	r3, [pc, #40]	; (1ebc <system_clock_source_get_hz+0x7c>)
    1e94:	689b      	ldr	r3, [r3, #8]
    1e96:	041b      	lsls	r3, r3, #16
    1e98:	0c1b      	lsrs	r3, r3, #16
    1e9a:	4358      	muls	r0, r3
    1e9c:	e00a      	b.n	1eb4 <system_clock_source_get_hz+0x74>
    1e9e:	2350      	movs	r3, #80	; 0x50
    1ea0:	4a07      	ldr	r2, [pc, #28]	; (1ec0 <system_clock_source_get_hz+0x80>)
    1ea2:	5cd3      	ldrb	r3, [r2, r3]
    1ea4:	2000      	movs	r0, #0
    1ea6:	075b      	lsls	r3, r3, #29
    1ea8:	d504      	bpl.n	1eb4 <system_clock_source_get_hz+0x74>
    1eaa:	4b04      	ldr	r3, [pc, #16]	; (1ebc <system_clock_source_get_hz+0x7c>)
    1eac:	68d8      	ldr	r0, [r3, #12]
    1eae:	e001      	b.n	1eb4 <system_clock_source_get_hz+0x74>
    1eb0:	2080      	movs	r0, #128	; 0x80
    1eb2:	0200      	lsls	r0, r0, #8
    1eb4:	bd10      	pop	{r4, pc}
    1eb6:	46c0      	nop			; (mov r8, r8)
    1eb8:	00004a18 	.word	0x00004a18
    1ebc:	2000028c 	.word	0x2000028c
    1ec0:	40000800 	.word	0x40000800
    1ec4:	007a1200 	.word	0x007a1200
    1ec8:	02dc6c00 	.word	0x02dc6c00
    1ecc:	000023a1 	.word	0x000023a1

00001ed0 <system_clock_source_osc8m_set_config>:
    1ed0:	b570      	push	{r4, r5, r6, lr}
    1ed2:	490c      	ldr	r1, [pc, #48]	; (1f04 <system_clock_source_osc8m_set_config+0x34>)
    1ed4:	6a0b      	ldr	r3, [r1, #32]
    1ed6:	7804      	ldrb	r4, [r0, #0]
    1ed8:	7885      	ldrb	r5, [r0, #2]
    1eda:	7840      	ldrb	r0, [r0, #1]
    1edc:	2201      	movs	r2, #1
    1ede:	4010      	ands	r0, r2
    1ee0:	0180      	lsls	r0, r0, #6
    1ee2:	2640      	movs	r6, #64	; 0x40
    1ee4:	43b3      	bics	r3, r6
    1ee6:	4303      	orrs	r3, r0
    1ee8:	402a      	ands	r2, r5
    1eea:	01d2      	lsls	r2, r2, #7
    1eec:	2080      	movs	r0, #128	; 0x80
    1eee:	4383      	bics	r3, r0
    1ef0:	4313      	orrs	r3, r2
    1ef2:	2203      	movs	r2, #3
    1ef4:	4022      	ands	r2, r4
    1ef6:	0212      	lsls	r2, r2, #8
    1ef8:	4803      	ldr	r0, [pc, #12]	; (1f08 <system_clock_source_osc8m_set_config+0x38>)
    1efa:	4003      	ands	r3, r0
    1efc:	4313      	orrs	r3, r2
    1efe:	620b      	str	r3, [r1, #32]
    1f00:	bd70      	pop	{r4, r5, r6, pc}
    1f02:	46c0      	nop			; (mov r8, r8)
    1f04:	40000800 	.word	0x40000800
    1f08:	fffffcff 	.word	0xfffffcff

00001f0c <system_clock_source_dfll_set_config>:
    1f0c:	b510      	push	{r4, lr}
    1f0e:	7a03      	ldrb	r3, [r0, #8]
    1f10:	069b      	lsls	r3, r3, #26
    1f12:	0c1b      	lsrs	r3, r3, #16
    1f14:	8942      	ldrh	r2, [r0, #10]
    1f16:	0592      	lsls	r2, r2, #22
    1f18:	0d92      	lsrs	r2, r2, #22
    1f1a:	4313      	orrs	r3, r2
    1f1c:	4918      	ldr	r1, [pc, #96]	; (1f80 <system_clock_source_dfll_set_config+0x74>)
    1f1e:	604b      	str	r3, [r1, #4]
    1f20:	7983      	ldrb	r3, [r0, #6]
    1f22:	79c2      	ldrb	r2, [r0, #7]
    1f24:	4313      	orrs	r3, r2
    1f26:	8842      	ldrh	r2, [r0, #2]
    1f28:	8884      	ldrh	r4, [r0, #4]
    1f2a:	4322      	orrs	r2, r4
    1f2c:	4313      	orrs	r3, r2
    1f2e:	7842      	ldrb	r2, [r0, #1]
    1f30:	01d2      	lsls	r2, r2, #7
    1f32:	4313      	orrs	r3, r2
    1f34:	600b      	str	r3, [r1, #0]
    1f36:	7803      	ldrb	r3, [r0, #0]
    1f38:	2b04      	cmp	r3, #4
    1f3a:	d011      	beq.n	1f60 <system_clock_source_dfll_set_config+0x54>
    1f3c:	2b20      	cmp	r3, #32
    1f3e:	d10e      	bne.n	1f5e <system_clock_source_dfll_set_config+0x52>
    1f40:	7b03      	ldrb	r3, [r0, #12]
    1f42:	069b      	lsls	r3, r3, #26
    1f44:	8a02      	ldrh	r2, [r0, #16]
    1f46:	4313      	orrs	r3, r2
    1f48:	89c2      	ldrh	r2, [r0, #14]
    1f4a:	0412      	lsls	r2, r2, #16
    1f4c:	490d      	ldr	r1, [pc, #52]	; (1f84 <system_clock_source_dfll_set_config+0x78>)
    1f4e:	400a      	ands	r2, r1
    1f50:	4313      	orrs	r3, r2
    1f52:	4a0b      	ldr	r2, [pc, #44]	; (1f80 <system_clock_source_dfll_set_config+0x74>)
    1f54:	6093      	str	r3, [r2, #8]
    1f56:	6811      	ldr	r1, [r2, #0]
    1f58:	4b0b      	ldr	r3, [pc, #44]	; (1f88 <system_clock_source_dfll_set_config+0x7c>)
    1f5a:	430b      	orrs	r3, r1
    1f5c:	6013      	str	r3, [r2, #0]
    1f5e:	bd10      	pop	{r4, pc}
    1f60:	7b03      	ldrb	r3, [r0, #12]
    1f62:	069b      	lsls	r3, r3, #26
    1f64:	8a02      	ldrh	r2, [r0, #16]
    1f66:	4313      	orrs	r3, r2
    1f68:	89c2      	ldrh	r2, [r0, #14]
    1f6a:	0412      	lsls	r2, r2, #16
    1f6c:	4905      	ldr	r1, [pc, #20]	; (1f84 <system_clock_source_dfll_set_config+0x78>)
    1f6e:	400a      	ands	r2, r1
    1f70:	4313      	orrs	r3, r2
    1f72:	4a03      	ldr	r2, [pc, #12]	; (1f80 <system_clock_source_dfll_set_config+0x74>)
    1f74:	6093      	str	r3, [r2, #8]
    1f76:	6813      	ldr	r3, [r2, #0]
    1f78:	2104      	movs	r1, #4
    1f7a:	430b      	orrs	r3, r1
    1f7c:	6013      	str	r3, [r2, #0]
    1f7e:	e7ee      	b.n	1f5e <system_clock_source_dfll_set_config+0x52>
    1f80:	2000028c 	.word	0x2000028c
    1f84:	03ff0000 	.word	0x03ff0000
    1f88:	00000424 	.word	0x00000424

00001f8c <system_clock_source_enable>:
    1f8c:	2808      	cmp	r0, #8
    1f8e:	d803      	bhi.n	1f98 <system_clock_source_enable+0xc>
    1f90:	0080      	lsls	r0, r0, #2
    1f92:	4b25      	ldr	r3, [pc, #148]	; (2028 <STACK_SIZE+0x28>)
    1f94:	581b      	ldr	r3, [r3, r0]
    1f96:	469f      	mov	pc, r3
    1f98:	2017      	movs	r0, #23
    1f9a:	e044      	b.n	2026 <STACK_SIZE+0x26>
    1f9c:	4a23      	ldr	r2, [pc, #140]	; (202c <STACK_SIZE+0x2c>)
    1f9e:	6a13      	ldr	r3, [r2, #32]
    1fa0:	2102      	movs	r1, #2
    1fa2:	430b      	orrs	r3, r1
    1fa4:	6213      	str	r3, [r2, #32]
    1fa6:	2000      	movs	r0, #0
    1fa8:	e03d      	b.n	2026 <STACK_SIZE+0x26>
    1faa:	4a20      	ldr	r2, [pc, #128]	; (202c <STACK_SIZE+0x2c>)
    1fac:	6993      	ldr	r3, [r2, #24]
    1fae:	2102      	movs	r1, #2
    1fb0:	430b      	orrs	r3, r1
    1fb2:	6193      	str	r3, [r2, #24]
    1fb4:	2000      	movs	r0, #0
    1fb6:	e036      	b.n	2026 <STACK_SIZE+0x26>
    1fb8:	4a1c      	ldr	r2, [pc, #112]	; (202c <STACK_SIZE+0x2c>)
    1fba:	8a13      	ldrh	r3, [r2, #16]
    1fbc:	2102      	movs	r1, #2
    1fbe:	430b      	orrs	r3, r1
    1fc0:	8213      	strh	r3, [r2, #16]
    1fc2:	2000      	movs	r0, #0
    1fc4:	e02f      	b.n	2026 <STACK_SIZE+0x26>
    1fc6:	4a19      	ldr	r2, [pc, #100]	; (202c <STACK_SIZE+0x2c>)
    1fc8:	8a93      	ldrh	r3, [r2, #20]
    1fca:	2102      	movs	r1, #2
    1fcc:	430b      	orrs	r3, r1
    1fce:	8293      	strh	r3, [r2, #20]
    1fd0:	2000      	movs	r0, #0
    1fd2:	e028      	b.n	2026 <STACK_SIZE+0x26>
    1fd4:	4916      	ldr	r1, [pc, #88]	; (2030 <STACK_SIZE+0x30>)
    1fd6:	680b      	ldr	r3, [r1, #0]
    1fd8:	2202      	movs	r2, #2
    1fda:	4313      	orrs	r3, r2
    1fdc:	600b      	str	r3, [r1, #0]
    1fde:	4b13      	ldr	r3, [pc, #76]	; (202c <STACK_SIZE+0x2c>)
    1fe0:	849a      	strh	r2, [r3, #36]	; 0x24
    1fe2:	0019      	movs	r1, r3
    1fe4:	320e      	adds	r2, #14
    1fe6:	68cb      	ldr	r3, [r1, #12]
    1fe8:	421a      	tst	r2, r3
    1fea:	d0fc      	beq.n	1fe6 <system_clock_source_enable+0x5a>
    1fec:	4a10      	ldr	r2, [pc, #64]	; (2030 <STACK_SIZE+0x30>)
    1fee:	6891      	ldr	r1, [r2, #8]
    1ff0:	4b0e      	ldr	r3, [pc, #56]	; (202c <STACK_SIZE+0x2c>)
    1ff2:	62d9      	str	r1, [r3, #44]	; 0x2c
    1ff4:	6852      	ldr	r2, [r2, #4]
    1ff6:	629a      	str	r2, [r3, #40]	; 0x28
    1ff8:	2200      	movs	r2, #0
    1ffa:	849a      	strh	r2, [r3, #36]	; 0x24
    1ffc:	0019      	movs	r1, r3
    1ffe:	3210      	adds	r2, #16
    2000:	68cb      	ldr	r3, [r1, #12]
    2002:	421a      	tst	r2, r3
    2004:	d0fc      	beq.n	2000 <STACK_SIZE>
    2006:	4b0a      	ldr	r3, [pc, #40]	; (2030 <STACK_SIZE+0x30>)
    2008:	681b      	ldr	r3, [r3, #0]
    200a:	b29b      	uxth	r3, r3
    200c:	4a07      	ldr	r2, [pc, #28]	; (202c <STACK_SIZE+0x2c>)
    200e:	8493      	strh	r3, [r2, #36]	; 0x24
    2010:	2000      	movs	r0, #0
    2012:	e008      	b.n	2026 <STACK_SIZE+0x26>
    2014:	4905      	ldr	r1, [pc, #20]	; (202c <STACK_SIZE+0x2c>)
    2016:	2244      	movs	r2, #68	; 0x44
    2018:	5c8b      	ldrb	r3, [r1, r2]
    201a:	2002      	movs	r0, #2
    201c:	4303      	orrs	r3, r0
    201e:	548b      	strb	r3, [r1, r2]
    2020:	2000      	movs	r0, #0
    2022:	e000      	b.n	2026 <STACK_SIZE+0x26>
    2024:	2000      	movs	r0, #0
    2026:	4770      	bx	lr
    2028:	00004a3c 	.word	0x00004a3c
    202c:	40000800 	.word	0x40000800
    2030:	2000028c 	.word	0x2000028c

00002034 <system_clock_init>:
    2034:	b570      	push	{r4, r5, r6, lr}
    2036:	b08a      	sub	sp, #40	; 0x28
    2038:	22c2      	movs	r2, #194	; 0xc2
    203a:	00d2      	lsls	r2, r2, #3
    203c:	4b36      	ldr	r3, [pc, #216]	; (2118 <system_clock_init+0xe4>)
    203e:	609a      	str	r2, [r3, #8]
    2040:	4a36      	ldr	r2, [pc, #216]	; (211c <system_clock_init+0xe8>)
    2042:	6853      	ldr	r3, [r2, #4]
    2044:	211e      	movs	r1, #30
    2046:	438b      	bics	r3, r1
    2048:	391a      	subs	r1, #26
    204a:	430b      	orrs	r3, r1
    204c:	6053      	str	r3, [r2, #4]
    204e:	2201      	movs	r2, #1
    2050:	ab01      	add	r3, sp, #4
    2052:	701a      	strb	r2, [r3, #0]
    2054:	2400      	movs	r4, #0
    2056:	4d32      	ldr	r5, [pc, #200]	; (2120 <system_clock_init+0xec>)
    2058:	b2e0      	uxtb	r0, r4
    205a:	a901      	add	r1, sp, #4
    205c:	47a8      	blx	r5
    205e:	3401      	adds	r4, #1
    2060:	2c25      	cmp	r4, #37	; 0x25
    2062:	d1f9      	bne.n	2058 <system_clock_init+0x24>
    2064:	ab05      	add	r3, sp, #20
    2066:	2200      	movs	r2, #0
    2068:	2100      	movs	r1, #0
    206a:	8059      	strh	r1, [r3, #2]
    206c:	719a      	strb	r2, [r3, #6]
    206e:	71da      	strb	r2, [r3, #7]
    2070:	3120      	adds	r1, #32
    2072:	7019      	strb	r1, [r3, #0]
    2074:	705a      	strb	r2, [r3, #1]
    2076:	4b2b      	ldr	r3, [pc, #172]	; (2124 <system_clock_init+0xf0>)
    2078:	681b      	ldr	r3, [r3, #0]
    207a:	0e9b      	lsrs	r3, r3, #26
    207c:	2b3f      	cmp	r3, #63	; 0x3f
    207e:	d049      	beq.n	2114 <system_clock_init+0xe0>
    2080:	a805      	add	r0, sp, #20
    2082:	7203      	strb	r3, [r0, #8]
    2084:	2307      	movs	r3, #7
    2086:	7303      	strb	r3, [r0, #12]
    2088:	3303      	adds	r3, #3
    208a:	81c3      	strh	r3, [r0, #14]
    208c:	4b26      	ldr	r3, [pc, #152]	; (2128 <system_clock_init+0xf4>)
    208e:	8143      	strh	r3, [r0, #10]
    2090:	3bff      	subs	r3, #255	; 0xff
    2092:	8083      	strh	r3, [r0, #4]
    2094:	4b25      	ldr	r3, [pc, #148]	; (212c <system_clock_init+0xf8>)
    2096:	8203      	strh	r3, [r0, #16]
    2098:	4b25      	ldr	r3, [pc, #148]	; (2130 <system_clock_init+0xfc>)
    209a:	4798      	blx	r3
    209c:	a804      	add	r0, sp, #16
    209e:	2400      	movs	r4, #0
    20a0:	7044      	strb	r4, [r0, #1]
    20a2:	2601      	movs	r6, #1
    20a4:	7086      	strb	r6, [r0, #2]
    20a6:	7004      	strb	r4, [r0, #0]
    20a8:	4b22      	ldr	r3, [pc, #136]	; (2134 <system_clock_init+0x100>)
    20aa:	4798      	blx	r3
    20ac:	2006      	movs	r0, #6
    20ae:	4d22      	ldr	r5, [pc, #136]	; (2138 <system_clock_init+0x104>)
    20b0:	47a8      	blx	r5
    20b2:	4b22      	ldr	r3, [pc, #136]	; (213c <system_clock_init+0x108>)
    20b4:	4798      	blx	r3
    20b6:	a901      	add	r1, sp, #4
    20b8:	604e      	str	r6, [r1, #4]
    20ba:	704c      	strb	r4, [r1, #1]
    20bc:	2306      	movs	r3, #6
    20be:	700b      	strb	r3, [r1, #0]
    20c0:	720c      	strb	r4, [r1, #8]
    20c2:	724c      	strb	r4, [r1, #9]
    20c4:	2003      	movs	r0, #3
    20c6:	4b1e      	ldr	r3, [pc, #120]	; (2140 <system_clock_init+0x10c>)
    20c8:	4798      	blx	r3
    20ca:	2003      	movs	r0, #3
    20cc:	4b1d      	ldr	r3, [pc, #116]	; (2144 <system_clock_init+0x110>)
    20ce:	4798      	blx	r3
    20d0:	2007      	movs	r0, #7
    20d2:	47a8      	blx	r5
    20d4:	4910      	ldr	r1, [pc, #64]	; (2118 <system_clock_init+0xe4>)
    20d6:	2210      	movs	r2, #16
    20d8:	68cb      	ldr	r3, [r1, #12]
    20da:	421a      	tst	r2, r3
    20dc:	d0fc      	beq.n	20d8 <system_clock_init+0xa4>
    20de:	4a0e      	ldr	r2, [pc, #56]	; (2118 <system_clock_init+0xe4>)
    20e0:	8c93      	ldrh	r3, [r2, #36]	; 0x24
    20e2:	2180      	movs	r1, #128	; 0x80
    20e4:	430b      	orrs	r3, r1
    20e6:	8493      	strh	r3, [r2, #36]	; 0x24
    20e8:	4a17      	ldr	r2, [pc, #92]	; (2148 <system_clock_init+0x114>)
    20ea:	2300      	movs	r3, #0
    20ec:	7213      	strb	r3, [r2, #8]
    20ee:	7253      	strb	r3, [r2, #9]
    20f0:	7293      	strb	r3, [r2, #10]
    20f2:	72d3      	strb	r3, [r2, #11]
    20f4:	a901      	add	r1, sp, #4
    20f6:	2201      	movs	r2, #1
    20f8:	604a      	str	r2, [r1, #4]
    20fa:	704b      	strb	r3, [r1, #1]
    20fc:	724b      	strb	r3, [r1, #9]
    20fe:	3307      	adds	r3, #7
    2100:	700b      	strb	r3, [r1, #0]
    2102:	720a      	strb	r2, [r1, #8]
    2104:	2000      	movs	r0, #0
    2106:	4b0e      	ldr	r3, [pc, #56]	; (2140 <system_clock_init+0x10c>)
    2108:	4798      	blx	r3
    210a:	2000      	movs	r0, #0
    210c:	4b0d      	ldr	r3, [pc, #52]	; (2144 <system_clock_init+0x110>)
    210e:	4798      	blx	r3
    2110:	b00a      	add	sp, #40	; 0x28
    2112:	bd70      	pop	{r4, r5, r6, pc}
    2114:	3b20      	subs	r3, #32
    2116:	e7b3      	b.n	2080 <system_clock_init+0x4c>
    2118:	40000800 	.word	0x40000800
    211c:	41004000 	.word	0x41004000
    2120:	00002385 	.word	0x00002385
    2124:	00806024 	.word	0x00806024
    2128:	000001ff 	.word	0x000001ff
    212c:	ffffbb80 	.word	0xffffbb80
    2130:	00001f0d 	.word	0x00001f0d
    2134:	00001ed1 	.word	0x00001ed1
    2138:	00001f8d 	.word	0x00001f8d
    213c:	0000214d 	.word	0x0000214d
    2140:	00002171 	.word	0x00002171
    2144:	00002229 	.word	0x00002229
    2148:	40000400 	.word	0x40000400

0000214c <system_gclk_init>:
    214c:	4a06      	ldr	r2, [pc, #24]	; (2168 <system_gclk_init+0x1c>)
    214e:	6993      	ldr	r3, [r2, #24]
    2150:	2108      	movs	r1, #8
    2152:	430b      	orrs	r3, r1
    2154:	6193      	str	r3, [r2, #24]
    2156:	2201      	movs	r2, #1
    2158:	4b04      	ldr	r3, [pc, #16]	; (216c <system_gclk_init+0x20>)
    215a:	701a      	strb	r2, [r3, #0]
    215c:	0019      	movs	r1, r3
    215e:	780b      	ldrb	r3, [r1, #0]
    2160:	4213      	tst	r3, r2
    2162:	d1fc      	bne.n	215e <system_gclk_init+0x12>
    2164:	4770      	bx	lr
    2166:	46c0      	nop			; (mov r8, r8)
    2168:	40000400 	.word	0x40000400
    216c:	40000c00 	.word	0x40000c00

00002170 <system_gclk_gen_set_config>:
    2170:	b570      	push	{r4, r5, r6, lr}
    2172:	0006      	movs	r6, r0
    2174:	0004      	movs	r4, r0
    2176:	780d      	ldrb	r5, [r1, #0]
    2178:	022d      	lsls	r5, r5, #8
    217a:	4305      	orrs	r5, r0
    217c:	784b      	ldrb	r3, [r1, #1]
    217e:	2b00      	cmp	r3, #0
    2180:	d002      	beq.n	2188 <system_gclk_gen_set_config+0x18>
    2182:	2380      	movs	r3, #128	; 0x80
    2184:	02db      	lsls	r3, r3, #11
    2186:	431d      	orrs	r5, r3
    2188:	7a4b      	ldrb	r3, [r1, #9]
    218a:	2b00      	cmp	r3, #0
    218c:	d002      	beq.n	2194 <system_gclk_gen_set_config+0x24>
    218e:	2380      	movs	r3, #128	; 0x80
    2190:	031b      	lsls	r3, r3, #12
    2192:	431d      	orrs	r5, r3
    2194:	6848      	ldr	r0, [r1, #4]
    2196:	2801      	cmp	r0, #1
    2198:	d910      	bls.n	21bc <system_gclk_gen_set_config+0x4c>
    219a:	1e43      	subs	r3, r0, #1
    219c:	4218      	tst	r0, r3
    219e:	d134      	bne.n	220a <system_gclk_gen_set_config+0x9a>
    21a0:	2802      	cmp	r0, #2
    21a2:	d930      	bls.n	2206 <system_gclk_gen_set_config+0x96>
    21a4:	2302      	movs	r3, #2
    21a6:	2200      	movs	r2, #0
    21a8:	3201      	adds	r2, #1
    21aa:	005b      	lsls	r3, r3, #1
    21ac:	4298      	cmp	r0, r3
    21ae:	d8fb      	bhi.n	21a8 <system_gclk_gen_set_config+0x38>
    21b0:	0212      	lsls	r2, r2, #8
    21b2:	4332      	orrs	r2, r6
    21b4:	0014      	movs	r4, r2
    21b6:	2380      	movs	r3, #128	; 0x80
    21b8:	035b      	lsls	r3, r3, #13
    21ba:	431d      	orrs	r5, r3
    21bc:	7a0b      	ldrb	r3, [r1, #8]
    21be:	2b00      	cmp	r3, #0
    21c0:	d002      	beq.n	21c8 <system_gclk_gen_set_config+0x58>
    21c2:	2380      	movs	r3, #128	; 0x80
    21c4:	039b      	lsls	r3, r3, #14
    21c6:	431d      	orrs	r5, r3
    21c8:	4a13      	ldr	r2, [pc, #76]	; (2218 <system_gclk_gen_set_config+0xa8>)
    21ca:	7853      	ldrb	r3, [r2, #1]
    21cc:	b25b      	sxtb	r3, r3
    21ce:	2b00      	cmp	r3, #0
    21d0:	dbfb      	blt.n	21ca <system_gclk_gen_set_config+0x5a>
    21d2:	4b12      	ldr	r3, [pc, #72]	; (221c <system_gclk_gen_set_config+0xac>)
    21d4:	4798      	blx	r3
    21d6:	4b12      	ldr	r3, [pc, #72]	; (2220 <system_gclk_gen_set_config+0xb0>)
    21d8:	701e      	strb	r6, [r3, #0]
    21da:	4a0f      	ldr	r2, [pc, #60]	; (2218 <system_gclk_gen_set_config+0xa8>)
    21dc:	7853      	ldrb	r3, [r2, #1]
    21de:	b25b      	sxtb	r3, r3
    21e0:	2b00      	cmp	r3, #0
    21e2:	dbfb      	blt.n	21dc <system_gclk_gen_set_config+0x6c>
    21e4:	4b0c      	ldr	r3, [pc, #48]	; (2218 <system_gclk_gen_set_config+0xa8>)
    21e6:	609c      	str	r4, [r3, #8]
    21e8:	001a      	movs	r2, r3
    21ea:	7853      	ldrb	r3, [r2, #1]
    21ec:	b25b      	sxtb	r3, r3
    21ee:	2b00      	cmp	r3, #0
    21f0:	dbfb      	blt.n	21ea <system_gclk_gen_set_config+0x7a>
    21f2:	4a09      	ldr	r2, [pc, #36]	; (2218 <system_gclk_gen_set_config+0xa8>)
    21f4:	6853      	ldr	r3, [r2, #4]
    21f6:	2180      	movs	r1, #128	; 0x80
    21f8:	0249      	lsls	r1, r1, #9
    21fa:	400b      	ands	r3, r1
    21fc:	431d      	orrs	r5, r3
    21fe:	6055      	str	r5, [r2, #4]
    2200:	4b08      	ldr	r3, [pc, #32]	; (2224 <system_gclk_gen_set_config+0xb4>)
    2202:	4798      	blx	r3
    2204:	bd70      	pop	{r4, r5, r6, pc}
    2206:	2200      	movs	r2, #0
    2208:	e7d2      	b.n	21b0 <system_gclk_gen_set_config+0x40>
    220a:	0204      	lsls	r4, r0, #8
    220c:	4334      	orrs	r4, r6
    220e:	2380      	movs	r3, #128	; 0x80
    2210:	029b      	lsls	r3, r3, #10
    2212:	431d      	orrs	r5, r3
    2214:	e7d2      	b.n	21bc <system_gclk_gen_set_config+0x4c>
    2216:	46c0      	nop			; (mov r8, r8)
    2218:	40000c00 	.word	0x40000c00
    221c:	000011a5 	.word	0x000011a5
    2220:	40000c08 	.word	0x40000c08
    2224:	000011e5 	.word	0x000011e5

00002228 <system_gclk_gen_enable>:
    2228:	b510      	push	{r4, lr}
    222a:	0004      	movs	r4, r0
    222c:	4a0b      	ldr	r2, [pc, #44]	; (225c <system_gclk_gen_enable+0x34>)
    222e:	7853      	ldrb	r3, [r2, #1]
    2230:	b25b      	sxtb	r3, r3
    2232:	2b00      	cmp	r3, #0
    2234:	dbfb      	blt.n	222e <system_gclk_gen_enable+0x6>
    2236:	4b0a      	ldr	r3, [pc, #40]	; (2260 <system_gclk_gen_enable+0x38>)
    2238:	4798      	blx	r3
    223a:	4b0a      	ldr	r3, [pc, #40]	; (2264 <system_gclk_gen_enable+0x3c>)
    223c:	701c      	strb	r4, [r3, #0]
    223e:	4a07      	ldr	r2, [pc, #28]	; (225c <system_gclk_gen_enable+0x34>)
    2240:	7853      	ldrb	r3, [r2, #1]
    2242:	b25b      	sxtb	r3, r3
    2244:	2b00      	cmp	r3, #0
    2246:	dbfb      	blt.n	2240 <system_gclk_gen_enable+0x18>
    2248:	4a04      	ldr	r2, [pc, #16]	; (225c <system_gclk_gen_enable+0x34>)
    224a:	6851      	ldr	r1, [r2, #4]
    224c:	2380      	movs	r3, #128	; 0x80
    224e:	025b      	lsls	r3, r3, #9
    2250:	430b      	orrs	r3, r1
    2252:	6053      	str	r3, [r2, #4]
    2254:	4b04      	ldr	r3, [pc, #16]	; (2268 <system_gclk_gen_enable+0x40>)
    2256:	4798      	blx	r3
    2258:	bd10      	pop	{r4, pc}
    225a:	46c0      	nop			; (mov r8, r8)
    225c:	40000c00 	.word	0x40000c00
    2260:	000011a5 	.word	0x000011a5
    2264:	40000c04 	.word	0x40000c04
    2268:	000011e5 	.word	0x000011e5

0000226c <system_gclk_gen_get_hz>:
    226c:	b570      	push	{r4, r5, r6, lr}
    226e:	0004      	movs	r4, r0
    2270:	4a1a      	ldr	r2, [pc, #104]	; (22dc <system_gclk_gen_get_hz+0x70>)
    2272:	7853      	ldrb	r3, [r2, #1]
    2274:	b25b      	sxtb	r3, r3
    2276:	2b00      	cmp	r3, #0
    2278:	dbfb      	blt.n	2272 <system_gclk_gen_get_hz+0x6>
    227a:	4b19      	ldr	r3, [pc, #100]	; (22e0 <system_gclk_gen_get_hz+0x74>)
    227c:	4798      	blx	r3
    227e:	4b19      	ldr	r3, [pc, #100]	; (22e4 <system_gclk_gen_get_hz+0x78>)
    2280:	701c      	strb	r4, [r3, #0]
    2282:	4a16      	ldr	r2, [pc, #88]	; (22dc <system_gclk_gen_get_hz+0x70>)
    2284:	7853      	ldrb	r3, [r2, #1]
    2286:	b25b      	sxtb	r3, r3
    2288:	2b00      	cmp	r3, #0
    228a:	dbfb      	blt.n	2284 <system_gclk_gen_get_hz+0x18>
    228c:	4e13      	ldr	r6, [pc, #76]	; (22dc <system_gclk_gen_get_hz+0x70>)
    228e:	6870      	ldr	r0, [r6, #4]
    2290:	04c0      	lsls	r0, r0, #19
    2292:	0ec0      	lsrs	r0, r0, #27
    2294:	4b14      	ldr	r3, [pc, #80]	; (22e8 <system_gclk_gen_get_hz+0x7c>)
    2296:	4798      	blx	r3
    2298:	0005      	movs	r5, r0
    229a:	4b12      	ldr	r3, [pc, #72]	; (22e4 <system_gclk_gen_get_hz+0x78>)
    229c:	701c      	strb	r4, [r3, #0]
    229e:	6876      	ldr	r6, [r6, #4]
    22a0:	02f6      	lsls	r6, r6, #11
    22a2:	0ff6      	lsrs	r6, r6, #31
    22a4:	4b11      	ldr	r3, [pc, #68]	; (22ec <system_gclk_gen_get_hz+0x80>)
    22a6:	701c      	strb	r4, [r3, #0]
    22a8:	4a0c      	ldr	r2, [pc, #48]	; (22dc <system_gclk_gen_get_hz+0x70>)
    22aa:	7853      	ldrb	r3, [r2, #1]
    22ac:	b25b      	sxtb	r3, r3
    22ae:	2b00      	cmp	r3, #0
    22b0:	dbfb      	blt.n	22aa <system_gclk_gen_get_hz+0x3e>
    22b2:	4b0a      	ldr	r3, [pc, #40]	; (22dc <system_gclk_gen_get_hz+0x70>)
    22b4:	689c      	ldr	r4, [r3, #8]
    22b6:	0224      	lsls	r4, r4, #8
    22b8:	0c24      	lsrs	r4, r4, #16
    22ba:	4b0d      	ldr	r3, [pc, #52]	; (22f0 <system_gclk_gen_get_hz+0x84>)
    22bc:	4798      	blx	r3
    22be:	2e00      	cmp	r6, #0
    22c0:	d107      	bne.n	22d2 <system_gclk_gen_get_hz+0x66>
    22c2:	2c01      	cmp	r4, #1
    22c4:	d907      	bls.n	22d6 <system_gclk_gen_get_hz+0x6a>
    22c6:	0021      	movs	r1, r4
    22c8:	0028      	movs	r0, r5
    22ca:	4b0a      	ldr	r3, [pc, #40]	; (22f4 <system_gclk_gen_get_hz+0x88>)
    22cc:	4798      	blx	r3
    22ce:	0005      	movs	r5, r0
    22d0:	e001      	b.n	22d6 <system_gclk_gen_get_hz+0x6a>
    22d2:	3401      	adds	r4, #1
    22d4:	40e5      	lsrs	r5, r4
    22d6:	0028      	movs	r0, r5
    22d8:	bd70      	pop	{r4, r5, r6, pc}
    22da:	46c0      	nop			; (mov r8, r8)
    22dc:	40000c00 	.word	0x40000c00
    22e0:	000011a5 	.word	0x000011a5
    22e4:	40000c04 	.word	0x40000c04
    22e8:	00001e41 	.word	0x00001e41
    22ec:	40000c08 	.word	0x40000c08
    22f0:	000011e5 	.word	0x000011e5
    22f4:	00004615 	.word	0x00004615

000022f8 <system_gclk_chan_enable>:
    22f8:	b510      	push	{r4, lr}
    22fa:	0004      	movs	r4, r0
    22fc:	4b06      	ldr	r3, [pc, #24]	; (2318 <system_gclk_chan_enable+0x20>)
    22fe:	4798      	blx	r3
    2300:	4b06      	ldr	r3, [pc, #24]	; (231c <system_gclk_chan_enable+0x24>)
    2302:	701c      	strb	r4, [r3, #0]
    2304:	4a06      	ldr	r2, [pc, #24]	; (2320 <system_gclk_chan_enable+0x28>)
    2306:	8853      	ldrh	r3, [r2, #2]
    2308:	2180      	movs	r1, #128	; 0x80
    230a:	01c9      	lsls	r1, r1, #7
    230c:	430b      	orrs	r3, r1
    230e:	8053      	strh	r3, [r2, #2]
    2310:	4b04      	ldr	r3, [pc, #16]	; (2324 <system_gclk_chan_enable+0x2c>)
    2312:	4798      	blx	r3
    2314:	bd10      	pop	{r4, pc}
    2316:	46c0      	nop			; (mov r8, r8)
    2318:	000011a5 	.word	0x000011a5
    231c:	40000c02 	.word	0x40000c02
    2320:	40000c00 	.word	0x40000c00
    2324:	000011e5 	.word	0x000011e5

00002328 <system_gclk_chan_disable>:
    2328:	b510      	push	{r4, lr}
    232a:	0004      	movs	r4, r0
    232c:	4b0f      	ldr	r3, [pc, #60]	; (236c <system_gclk_chan_disable+0x44>)
    232e:	4798      	blx	r3
    2330:	4b0f      	ldr	r3, [pc, #60]	; (2370 <system_gclk_chan_disable+0x48>)
    2332:	701c      	strb	r4, [r3, #0]
    2334:	4a0f      	ldr	r2, [pc, #60]	; (2374 <system_gclk_chan_disable+0x4c>)
    2336:	8853      	ldrh	r3, [r2, #2]
    2338:	051b      	lsls	r3, r3, #20
    233a:	0f18      	lsrs	r0, r3, #28
    233c:	8853      	ldrh	r3, [r2, #2]
    233e:	490e      	ldr	r1, [pc, #56]	; (2378 <system_gclk_chan_disable+0x50>)
    2340:	400b      	ands	r3, r1
    2342:	8053      	strh	r3, [r2, #2]
    2344:	8853      	ldrh	r3, [r2, #2]
    2346:	490d      	ldr	r1, [pc, #52]	; (237c <system_gclk_chan_disable+0x54>)
    2348:	400b      	ands	r3, r1
    234a:	8053      	strh	r3, [r2, #2]
    234c:	0011      	movs	r1, r2
    234e:	2280      	movs	r2, #128	; 0x80
    2350:	01d2      	lsls	r2, r2, #7
    2352:	884b      	ldrh	r3, [r1, #2]
    2354:	4213      	tst	r3, r2
    2356:	d1fc      	bne.n	2352 <system_gclk_chan_disable+0x2a>
    2358:	4906      	ldr	r1, [pc, #24]	; (2374 <system_gclk_chan_disable+0x4c>)
    235a:	884a      	ldrh	r2, [r1, #2]
    235c:	0203      	lsls	r3, r0, #8
    235e:	4806      	ldr	r0, [pc, #24]	; (2378 <system_gclk_chan_disable+0x50>)
    2360:	4002      	ands	r2, r0
    2362:	4313      	orrs	r3, r2
    2364:	804b      	strh	r3, [r1, #2]
    2366:	4b06      	ldr	r3, [pc, #24]	; (2380 <system_gclk_chan_disable+0x58>)
    2368:	4798      	blx	r3
    236a:	bd10      	pop	{r4, pc}
    236c:	000011a5 	.word	0x000011a5
    2370:	40000c02 	.word	0x40000c02
    2374:	40000c00 	.word	0x40000c00
    2378:	fffff0ff 	.word	0xfffff0ff
    237c:	ffffbfff 	.word	0xffffbfff
    2380:	000011e5 	.word	0x000011e5

00002384 <system_gclk_chan_set_config>:
    2384:	b510      	push	{r4, lr}
    2386:	780c      	ldrb	r4, [r1, #0]
    2388:	0224      	lsls	r4, r4, #8
    238a:	4304      	orrs	r4, r0
    238c:	4b02      	ldr	r3, [pc, #8]	; (2398 <system_gclk_chan_set_config+0x14>)
    238e:	4798      	blx	r3
    2390:	b2a4      	uxth	r4, r4
    2392:	4b02      	ldr	r3, [pc, #8]	; (239c <system_gclk_chan_set_config+0x18>)
    2394:	805c      	strh	r4, [r3, #2]
    2396:	bd10      	pop	{r4, pc}
    2398:	00002329 	.word	0x00002329
    239c:	40000c00 	.word	0x40000c00

000023a0 <system_gclk_chan_get_hz>:
    23a0:	b510      	push	{r4, lr}
    23a2:	0004      	movs	r4, r0
    23a4:	4b06      	ldr	r3, [pc, #24]	; (23c0 <system_gclk_chan_get_hz+0x20>)
    23a6:	4798      	blx	r3
    23a8:	4b06      	ldr	r3, [pc, #24]	; (23c4 <system_gclk_chan_get_hz+0x24>)
    23aa:	701c      	strb	r4, [r3, #0]
    23ac:	4b06      	ldr	r3, [pc, #24]	; (23c8 <system_gclk_chan_get_hz+0x28>)
    23ae:	885c      	ldrh	r4, [r3, #2]
    23b0:	0524      	lsls	r4, r4, #20
    23b2:	0f24      	lsrs	r4, r4, #28
    23b4:	4b05      	ldr	r3, [pc, #20]	; (23cc <system_gclk_chan_get_hz+0x2c>)
    23b6:	4798      	blx	r3
    23b8:	0020      	movs	r0, r4
    23ba:	4b05      	ldr	r3, [pc, #20]	; (23d0 <system_gclk_chan_get_hz+0x30>)
    23bc:	4798      	blx	r3
    23be:	bd10      	pop	{r4, pc}
    23c0:	000011a5 	.word	0x000011a5
    23c4:	40000c02 	.word	0x40000c02
    23c8:	40000c00 	.word	0x40000c00
    23cc:	000011e5 	.word	0x000011e5
    23d0:	0000226d 	.word	0x0000226d

000023d4 <_system_pinmux_config>:
    23d4:	b530      	push	{r4, r5, lr}
    23d6:	78d3      	ldrb	r3, [r2, #3]
    23d8:	2b00      	cmp	r3, #0
    23da:	d135      	bne.n	2448 <_system_pinmux_config+0x74>
    23dc:	7813      	ldrb	r3, [r2, #0]
    23de:	2b80      	cmp	r3, #128	; 0x80
    23e0:	d029      	beq.n	2436 <_system_pinmux_config+0x62>
    23e2:	061b      	lsls	r3, r3, #24
    23e4:	2480      	movs	r4, #128	; 0x80
    23e6:	0264      	lsls	r4, r4, #9
    23e8:	4323      	orrs	r3, r4
    23ea:	7854      	ldrb	r4, [r2, #1]
    23ec:	2502      	movs	r5, #2
    23ee:	43ac      	bics	r4, r5
    23f0:	d106      	bne.n	2400 <_system_pinmux_config+0x2c>
    23f2:	7894      	ldrb	r4, [r2, #2]
    23f4:	2c00      	cmp	r4, #0
    23f6:	d120      	bne.n	243a <_system_pinmux_config+0x66>
    23f8:	2480      	movs	r4, #128	; 0x80
    23fa:	02a4      	lsls	r4, r4, #10
    23fc:	4323      	orrs	r3, r4
    23fe:	6041      	str	r1, [r0, #4]
    2400:	7854      	ldrb	r4, [r2, #1]
    2402:	3c01      	subs	r4, #1
    2404:	2c01      	cmp	r4, #1
    2406:	d91c      	bls.n	2442 <_system_pinmux_config+0x6e>
    2408:	040d      	lsls	r5, r1, #16
    240a:	0c2d      	lsrs	r5, r5, #16
    240c:	24a0      	movs	r4, #160	; 0xa0
    240e:	05e4      	lsls	r4, r4, #23
    2410:	432c      	orrs	r4, r5
    2412:	431c      	orrs	r4, r3
    2414:	6284      	str	r4, [r0, #40]	; 0x28
    2416:	0c0d      	lsrs	r5, r1, #16
    2418:	24d0      	movs	r4, #208	; 0xd0
    241a:	0624      	lsls	r4, r4, #24
    241c:	432c      	orrs	r4, r5
    241e:	431c      	orrs	r4, r3
    2420:	6284      	str	r4, [r0, #40]	; 0x28
    2422:	78d4      	ldrb	r4, [r2, #3]
    2424:	2c00      	cmp	r4, #0
    2426:	d122      	bne.n	246e <_system_pinmux_config+0x9a>
    2428:	035b      	lsls	r3, r3, #13
    242a:	d51c      	bpl.n	2466 <_system_pinmux_config+0x92>
    242c:	7893      	ldrb	r3, [r2, #2]
    242e:	2b01      	cmp	r3, #1
    2430:	d01e      	beq.n	2470 <_system_pinmux_config+0x9c>
    2432:	6141      	str	r1, [r0, #20]
    2434:	e017      	b.n	2466 <_system_pinmux_config+0x92>
    2436:	2300      	movs	r3, #0
    2438:	e7d7      	b.n	23ea <_system_pinmux_config+0x16>
    243a:	24c0      	movs	r4, #192	; 0xc0
    243c:	02e4      	lsls	r4, r4, #11
    243e:	4323      	orrs	r3, r4
    2440:	e7dd      	b.n	23fe <_system_pinmux_config+0x2a>
    2442:	4c0d      	ldr	r4, [pc, #52]	; (2478 <_system_pinmux_config+0xa4>)
    2444:	4023      	ands	r3, r4
    2446:	e7df      	b.n	2408 <_system_pinmux_config+0x34>
    2448:	6041      	str	r1, [r0, #4]
    244a:	040c      	lsls	r4, r1, #16
    244c:	0c24      	lsrs	r4, r4, #16
    244e:	23a0      	movs	r3, #160	; 0xa0
    2450:	05db      	lsls	r3, r3, #23
    2452:	4323      	orrs	r3, r4
    2454:	6283      	str	r3, [r0, #40]	; 0x28
    2456:	0c0c      	lsrs	r4, r1, #16
    2458:	23d0      	movs	r3, #208	; 0xd0
    245a:	061b      	lsls	r3, r3, #24
    245c:	4323      	orrs	r3, r4
    245e:	6283      	str	r3, [r0, #40]	; 0x28
    2460:	78d3      	ldrb	r3, [r2, #3]
    2462:	2b00      	cmp	r3, #0
    2464:	d103      	bne.n	246e <_system_pinmux_config+0x9a>
    2466:	7853      	ldrb	r3, [r2, #1]
    2468:	3b01      	subs	r3, #1
    246a:	2b01      	cmp	r3, #1
    246c:	d902      	bls.n	2474 <_system_pinmux_config+0xa0>
    246e:	bd30      	pop	{r4, r5, pc}
    2470:	6181      	str	r1, [r0, #24]
    2472:	e7f8      	b.n	2466 <_system_pinmux_config+0x92>
    2474:	6081      	str	r1, [r0, #8]
    2476:	e7fa      	b.n	246e <_system_pinmux_config+0x9a>
    2478:	fffbffff 	.word	0xfffbffff

0000247c <system_pinmux_pin_set_config>:
    247c:	b510      	push	{r4, lr}
    247e:	000a      	movs	r2, r1
    2480:	09c1      	lsrs	r1, r0, #7
    2482:	2300      	movs	r3, #0
    2484:	2900      	cmp	r1, #0
    2486:	d104      	bne.n	2492 <system_pinmux_pin_set_config+0x16>
    2488:	0943      	lsrs	r3, r0, #5
    248a:	01db      	lsls	r3, r3, #7
    248c:	4905      	ldr	r1, [pc, #20]	; (24a4 <system_pinmux_pin_set_config+0x28>)
    248e:	468c      	mov	ip, r1
    2490:	4463      	add	r3, ip
    2492:	241f      	movs	r4, #31
    2494:	4020      	ands	r0, r4
    2496:	2101      	movs	r1, #1
    2498:	4081      	lsls	r1, r0
    249a:	0018      	movs	r0, r3
    249c:	4b02      	ldr	r3, [pc, #8]	; (24a8 <system_pinmux_pin_set_config+0x2c>)
    249e:	4798      	blx	r3
    24a0:	bd10      	pop	{r4, pc}
    24a2:	46c0      	nop			; (mov r8, r8)
    24a4:	41004400 	.word	0x41004400
    24a8:	000023d5 	.word	0x000023d5

000024ac <_system_dummy_init>:
    24ac:	4770      	bx	lr
	...

000024b0 <system_init>:
    24b0:	b510      	push	{r4, lr}
    24b2:	4b05      	ldr	r3, [pc, #20]	; (24c8 <system_init+0x18>)
    24b4:	4798      	blx	r3
    24b6:	4b05      	ldr	r3, [pc, #20]	; (24cc <system_init+0x1c>)
    24b8:	4798      	blx	r3
    24ba:	4b05      	ldr	r3, [pc, #20]	; (24d0 <system_init+0x20>)
    24bc:	4798      	blx	r3
    24be:	4b05      	ldr	r3, [pc, #20]	; (24d4 <system_init+0x24>)
    24c0:	4798      	blx	r3
    24c2:	4b05      	ldr	r3, [pc, #20]	; (24d8 <system_init+0x28>)
    24c4:	4798      	blx	r3
    24c6:	bd10      	pop	{r4, pc}
    24c8:	00002035 	.word	0x00002035
    24cc:	00001215 	.word	0x00001215
    24d0:	000024ad 	.word	0x000024ad
    24d4:	00001325 	.word	0x00001325
    24d8:	000024ad 	.word	0x000024ad

000024dc <udd_sleep_mode>:
/** \brief Manages the sleep mode following the USB state
 *
 * \param new_state  New USB state
 */
static void udd_sleep_mode(enum udd_usb_state_enum new_state)
{
    24dc:	b510      	push	{r4, lr}
    24de:	b084      	sub	sp, #16
	enum sleepmgr_mode sleep_mode[] = {
    24e0:	ab03      	add	r3, sp, #12
    24e2:	2200      	movs	r2, #0
    24e4:	701a      	strb	r2, [r3, #0]
    24e6:	3203      	adds	r2, #3
    24e8:	705a      	strb	r2, [r3, #1]
    24ea:	3a01      	subs	r2, #1
    24ec:	709a      	strb	r2, [r3, #2]
    24ee:	3a01      	subs	r2, #1
    24f0:	70da      	strb	r2, [r3, #3]
	#endif	
	};

	static enum udd_usb_state_enum udd_state = UDD_STATE_OFF;

	if (udd_state == new_state) {
    24f2:	4b27      	ldr	r3, [pc, #156]	; (2590 <udd_sleep_mode+0xb4>)
    24f4:	781b      	ldrb	r3, [r3, #0]
    24f6:	4283      	cmp	r3, r0
    24f8:	d007      	beq.n	250a <udd_sleep_mode+0x2e>
		return; // No change
	}
	if (new_state != UDD_STATE_OFF) {
    24fa:	2800      	cmp	r0, #0
    24fc:	d107      	bne.n	250e <udd_sleep_mode+0x32>
		/* Lock new limit */
		sleepmgr_lock_mode(sleep_mode[new_state]);
	}
	if (udd_state != UDD_STATE_OFF) {
    24fe:	4b24      	ldr	r3, [pc, #144]	; (2590 <udd_sleep_mode+0xb4>)
    2500:	781b      	ldrb	r3, [r3, #0]
    2502:	2b00      	cmp	r3, #0
    2504:	d123      	bne.n	254e <udd_sleep_mode+0x72>
		/* Unlock old limit */
		sleepmgr_unlock_mode(sleep_mode[udd_state]);
	}
	udd_state = new_state;
    2506:	4b22      	ldr	r3, [pc, #136]	; (2590 <udd_sleep_mode+0xb4>)
    2508:	7018      	strb	r0, [r3, #0]
}
    250a:	b004      	add	sp, #16
    250c:	bd10      	pop	{r4, pc}
		sleepmgr_lock_mode(sleep_mode[new_state]);
    250e:	ab03      	add	r3, sp, #12
static inline void sleepmgr_lock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] >= 0xff) {
    2510:	5c1b      	ldrb	r3, [r3, r0]
    2512:	4a20      	ldr	r2, [pc, #128]	; (2594 <udd_sleep_mode+0xb8>)
    2514:	5cd2      	ldrb	r2, [r2, r3]
    2516:	2aff      	cmp	r2, #255	; 0xff
    2518:	d100      	bne.n	251c <udd_sleep_mode+0x40>
    251a:	e7fe      	b.n	251a <udd_sleep_mode+0x3e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    251c:	f3ef 8210 	mrs	r2, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    2520:	4251      	negs	r1, r2
    2522:	414a      	adcs	r2, r1
    2524:	9201      	str	r2, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    2526:	b672      	cpsid	i
    2528:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    252c:	2100      	movs	r1, #0
    252e:	4a1a      	ldr	r2, [pc, #104]	; (2598 <udd_sleep_mode+0xbc>)
    2530:	7011      	strb	r1, [r2, #0]
	return flags;
    2532:	9c01      	ldr	r4, [sp, #4]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
    2534:	4917      	ldr	r1, [pc, #92]	; (2594 <udd_sleep_mode+0xb8>)
    2536:	5cca      	ldrb	r2, [r1, r3]
    2538:	3201      	adds	r2, #1
    253a:	54ca      	strb	r2, [r1, r3]
	if (cpu_irq_is_enabled_flags(flags))
    253c:	2c00      	cmp	r4, #0
    253e:	d0de      	beq.n	24fe <udd_sleep_mode+0x22>
		cpu_irq_enable();
    2540:	2201      	movs	r2, #1
    2542:	4b15      	ldr	r3, [pc, #84]	; (2598 <udd_sleep_mode+0xbc>)
    2544:	701a      	strb	r2, [r3, #0]
    2546:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    254a:	b662      	cpsie	i
    254c:	e7d7      	b.n	24fe <udd_sleep_mode+0x22>
		sleepmgr_unlock_mode(sleep_mode[udd_state]);
    254e:	aa03      	add	r2, sp, #12
static inline void sleepmgr_unlock_mode(enum sleepmgr_mode mode)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	irqflags_t flags;

	if(sleepmgr_locks[mode] == 0) {
    2550:	5cd3      	ldrb	r3, [r2, r3]
    2552:	4a10      	ldr	r2, [pc, #64]	; (2594 <udd_sleep_mode+0xb8>)
    2554:	5cd2      	ldrb	r2, [r2, r3]
    2556:	2a00      	cmp	r2, #0
    2558:	d100      	bne.n	255c <udd_sleep_mode+0x80>
    255a:	e7fe      	b.n	255a <udd_sleep_mode+0x7e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    255c:	f3ef 8210 	mrs	r2, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    2560:	4251      	negs	r1, r2
    2562:	414a      	adcs	r2, r1
    2564:	9202      	str	r2, [sp, #8]
  __ASM volatile ("cpsid i" : : : "memory");
    2566:	b672      	cpsid	i
    2568:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    256c:	2100      	movs	r1, #0
    256e:	4a0a      	ldr	r2, [pc, #40]	; (2598 <udd_sleep_mode+0xbc>)
    2570:	7011      	strb	r1, [r2, #0]
	return flags;
    2572:	9c02      	ldr	r4, [sp, #8]
	}

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
    2574:	4907      	ldr	r1, [pc, #28]	; (2594 <udd_sleep_mode+0xb8>)
    2576:	5cca      	ldrb	r2, [r1, r3]
    2578:	3a01      	subs	r2, #1
    257a:	54ca      	strb	r2, [r1, r3]
	if (cpu_irq_is_enabled_flags(flags))
    257c:	2c00      	cmp	r4, #0
    257e:	d0c2      	beq.n	2506 <udd_sleep_mode+0x2a>
		cpu_irq_enable();
    2580:	2201      	movs	r2, #1
    2582:	4b05      	ldr	r3, [pc, #20]	; (2598 <udd_sleep_mode+0xbc>)
    2584:	701a      	strb	r2, [r3, #0]
    2586:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    258a:	b662      	cpsie	i
    258c:	e7bb      	b.n	2506 <udd_sleep_mode+0x2a>
    258e:	46c0      	nop			; (mov r8, r8)
    2590:	20000324 	.word	0x20000324
    2594:	20000348 	.word	0x20000348
    2598:	200000e8 	.word	0x200000e8

0000259c <udd_ep_get_job>:
 * \param[in] ep  Endpoint Address
 * \retval    pointer to an udd_ep_job_t structure instance
 */
static udd_ep_job_t* udd_ep_get_job(udd_ep_id_t ep)
{
	if ((ep == 0) || (ep == 0x80)) {
    259c:	0643      	lsls	r3, r0, #25
    259e:	d00b      	beq.n	25b8 <udd_ep_get_job+0x1c>
		return NULL;
	} else {
		return &udd_ep_job[(2 * (ep & USB_EP_ADDR_MASK) + ((ep & USB_EP_DIR_IN) ? 1 : 0)) - 2];
    25a0:	230f      	movs	r3, #15
    25a2:	4003      	ands	r3, r0
    25a4:	005b      	lsls	r3, r3, #1
    25a6:	09c0      	lsrs	r0, r0, #7
    25a8:	1818      	adds	r0, r3, r0
    25aa:	3802      	subs	r0, #2
    25ac:	0083      	lsls	r3, r0, #2
    25ae:	1818      	adds	r0, r3, r0
    25b0:	0080      	lsls	r0, r0, #2
    25b2:	4b02      	ldr	r3, [pc, #8]	; (25bc <udd_ep_get_job+0x20>)
    25b4:	1818      	adds	r0, r3, r0
	}
}
    25b6:	4770      	bx	lr
		return NULL;
    25b8:	2000      	movs	r0, #0
    25ba:	e7fc      	b.n	25b6 <udd_ep_get_job+0x1a>
    25bc:	200002ac 	.word	0x200002ac

000025c0 <udd_ep_transfer_process>:
 * \brief     Endpoint Transfer Complete callback function, to do the next transfer depends on the direction(IN or OUT)
 * \param[in] module_inst Pointer to USB module instance
 * \param[in] pointer Pointer to the endpoint transfer status parameter struct from driver layer.
 */
static void udd_ep_transfer_process(struct usb_module *module_inst, void* pointer)
{
    25c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    25c2:	46d6      	mov	lr, sl
    25c4:	464f      	mov	r7, r9
    25c6:	4646      	mov	r6, r8
    25c8:	b5c0      	push	{r6, r7, lr}
    25ca:	4689      	mov	r9, r1
	struct usb_endpoint_callback_parameter *ep_callback_para = (struct usb_endpoint_callback_parameter*)pointer;
	udd_ep_id_t ep = ep_callback_para->endpoint_address;
    25cc:	798d      	ldrb	r5, [r1, #6]

	if (ep & USB_EP_DIR_IN) {
    25ce:	b26b      	sxtb	r3, r5
    25d0:	2b00      	cmp	r3, #0
    25d2:	db26      	blt.n	2622 <udd_ep_transfer_process+0x62>
	ptr_job = udd_ep_get_job(ep);
    25d4:	0028      	movs	r0, r5
    25d6:	4b5e      	ldr	r3, [pc, #376]	; (2750 <udd_ep_transfer_process+0x190>)
    25d8:	4798      	blx	r3
    25da:	0004      	movs	r4, r0
	ep_num = ep & USB_EP_ADDR_MASK;
    25dc:	270f      	movs	r7, #15
    25de:	402f      	ands	r7, r5
	ep_size = ptr_job->ep_size;
    25e0:	8a03      	ldrh	r3, [r0, #16]
    25e2:	4698      	mov	r8, r3
	nb_trans = ep_callback_para->received_bytes;
    25e4:	464b      	mov	r3, r9
    25e6:	881b      	ldrh	r3, [r3, #0]
    25e8:	469a      	mov	sl, r3
	if (ptr_job->b_use_out_cache_buffer) {
    25ea:	7c83      	ldrb	r3, [r0, #18]
    25ec:	075b      	lsls	r3, r3, #29
    25ee:	d46a      	bmi.n	26c6 <udd_ep_transfer_process+0x106>
	ptr_job->nb_trans += nb_trans;
    25f0:	68e3      	ldr	r3, [r4, #12]
    25f2:	4453      	add	r3, sl
    25f4:	001e      	movs	r6, r3
    25f6:	60e3      	str	r3, [r4, #12]
	if (ptr_job->nb_trans > ptr_job->buf_size) {
    25f8:	68a3      	ldr	r3, [r4, #8]
    25fa:	429e      	cmp	r6, r3
    25fc:	d800      	bhi.n	2600 <udd_ep_transfer_process+0x40>
    25fe:	e074      	b.n	26ea <udd_ep_transfer_process+0x12a>
		ptr_job->nb_trans = ptr_job->buf_size;
    2600:	60e3      	str	r3, [r4, #12]
	ptr_job->busy = false;
    2602:	7ca3      	ldrb	r3, [r4, #18]
    2604:	2201      	movs	r2, #1
    2606:	4393      	bics	r3, r2
    2608:	74a3      	strb	r3, [r4, #18]
	if (NULL != ptr_job->call_trans) {
    260a:	6823      	ldr	r3, [r4, #0]
    260c:	2b00      	cmp	r3, #0
    260e:	d003      	beq.n	2618 <udd_ep_transfer_process+0x58>
		ptr_job->call_trans(UDD_EP_TRANSFER_OK, ptr_job->nb_trans, ep);
    2610:	68e1      	ldr	r1, [r4, #12]
    2612:	002a      	movs	r2, r5
    2614:	2000      	movs	r0, #0
    2616:	4798      	blx	r3
		udd_ep_trans_in_next(pointer);
	} else {
		udd_ep_trans_out_next(pointer);
	}
}
    2618:	bc1c      	pop	{r2, r3, r4}
    261a:	4690      	mov	r8, r2
    261c:	4699      	mov	r9, r3
    261e:	46a2      	mov	sl, r4
    2620:	bdf0      	pop	{r4, r5, r6, r7, pc}
	ptr_job = udd_ep_get_job(ep);
    2622:	0028      	movs	r0, r5
    2624:	4b4a      	ldr	r3, [pc, #296]	; (2750 <udd_ep_transfer_process+0x190>)
    2626:	4798      	blx	r3
    2628:	0004      	movs	r4, r0
	ep_num = ep & USB_EP_ADDR_MASK;
    262a:	270f      	movs	r7, #15
    262c:	402f      	ands	r7, r5
	ep_size = ptr_job->ep_size;
    262e:	8a03      	ldrh	r3, [r0, #16]
    2630:	4698      	mov	r8, r3
	ptr_job->nb_trans += nb_trans;
    2632:	464b      	mov	r3, r9
    2634:	885e      	ldrh	r6, [r3, #2]
    2636:	68c3      	ldr	r3, [r0, #12]
    2638:	469c      	mov	ip, r3
    263a:	4466      	add	r6, ip
    263c:	60c6      	str	r6, [r0, #12]
	if (ptr_job->nb_trans != ptr_job->buf_size) {
    263e:	6881      	ldr	r1, [r0, #8]
    2640:	428e      	cmp	r6, r1
    2642:	d025      	beq.n	2690 <udd_ep_transfer_process+0xd0>
		next_trans = ptr_job->buf_size - ptr_job->nb_trans;
    2644:	1b8d      	subs	r5, r1, r6
    2646:	b2ad      	uxth	r5, r5
		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    2648:	4b42      	ldr	r3, [pc, #264]	; (2754 <udd_ep_transfer_process+0x194>)
    264a:	429d      	cmp	r5, r3
    264c:	d906      	bls.n	265c <udd_ep_transfer_process+0x9c>
			next_trans = UDD_ENDPOINT_MAX_TRANS -(UDD_ENDPOINT_MAX_TRANS % ep_size);
    264e:	001d      	movs	r5, r3
    2650:	4641      	mov	r1, r8
    2652:	0018      	movs	r0, r3
    2654:	4b40      	ldr	r3, [pc, #256]	; (2758 <udd_ep_transfer_process+0x198>)
    2656:	4798      	blx	r3
    2658:	1a6d      	subs	r5, r5, r1
    265a:	b2ad      	uxth	r5, r5
		ptr_job->b_shortpacket = ptr_job->b_shortpacket && (0 == (next_trans % ep_size));
    265c:	7ca2      	ldrb	r2, [r4, #18]
    265e:	2300      	movs	r3, #0
    2660:	0792      	lsls	r2, r2, #30
    2662:	d507      	bpl.n	2674 <udd_ep_transfer_process+0xb4>
    2664:	4641      	mov	r1, r8
    2666:	0028      	movs	r0, r5
    2668:	4b3c      	ldr	r3, [pc, #240]	; (275c <udd_ep_transfer_process+0x19c>)
    266a:	4798      	blx	r3
    266c:	b289      	uxth	r1, r1
    266e:	424b      	negs	r3, r1
    2670:	414b      	adcs	r3, r1
    2672:	b2db      	uxtb	r3, r3
    2674:	005b      	lsls	r3, r3, #1
    2676:	7ca2      	ldrb	r2, [r4, #18]
    2678:	2102      	movs	r1, #2
    267a:	438a      	bics	r2, r1
    267c:	4313      	orrs	r3, r2
    267e:	74a3      	strb	r3, [r4, #18]
		usb_device_endpoint_write_buffer_job(&usb_device,ep_num,&ptr_job->buf[ptr_job->nb_trans],next_trans);
    2680:	6862      	ldr	r2, [r4, #4]
    2682:	1992      	adds	r2, r2, r6
    2684:	002b      	movs	r3, r5
    2686:	0039      	movs	r1, r7
    2688:	4835      	ldr	r0, [pc, #212]	; (2760 <udd_ep_transfer_process+0x1a0>)
    268a:	4c36      	ldr	r4, [pc, #216]	; (2764 <udd_ep_transfer_process+0x1a4>)
    268c:	47a0      	blx	r4
    268e:	e7c3      	b.n	2618 <udd_ep_transfer_process+0x58>
	if (ptr_job->b_shortpacket) {
    2690:	7c83      	ldrb	r3, [r0, #18]
    2692:	079b      	lsls	r3, r3, #30
    2694:	d40b      	bmi.n	26ae <udd_ep_transfer_process+0xee>
	ptr_job->busy = false;
    2696:	7c83      	ldrb	r3, [r0, #18]
    2698:	2201      	movs	r2, #1
    269a:	4393      	bics	r3, r2
    269c:	7483      	strb	r3, [r0, #18]
	if (NULL != ptr_job->call_trans) {
    269e:	6803      	ldr	r3, [r0, #0]
    26a0:	2b00      	cmp	r3, #0
    26a2:	d0b9      	beq.n	2618 <udd_ep_transfer_process+0x58>
		ptr_job->call_trans(UDD_EP_TRANSFER_OK, ptr_job->nb_trans, ep);
    26a4:	002a      	movs	r2, r5
    26a6:	0031      	movs	r1, r6
    26a8:	2000      	movs	r0, #0
    26aa:	4798      	blx	r3
    26ac:	e7b4      	b.n	2618 <udd_ep_transfer_process+0x58>
		ptr_job->b_shortpacket = false;
    26ae:	7c83      	ldrb	r3, [r0, #18]
    26b0:	2202      	movs	r2, #2
    26b2:	4393      	bics	r3, r2
    26b4:	7483      	strb	r3, [r0, #18]
		usb_device_endpoint_write_buffer_job(&usb_device,ep_num,&ptr_job->buf[ptr_job->nb_trans],0);
    26b6:	6842      	ldr	r2, [r0, #4]
    26b8:	1992      	adds	r2, r2, r6
    26ba:	2300      	movs	r3, #0
    26bc:	0039      	movs	r1, r7
    26be:	4828      	ldr	r0, [pc, #160]	; (2760 <udd_ep_transfer_process+0x1a0>)
    26c0:	4c28      	ldr	r4, [pc, #160]	; (2764 <udd_ep_transfer_process+0x1a4>)
    26c2:	47a0      	blx	r4
    26c4:	e7a8      	b.n	2618 <udd_ep_transfer_process+0x58>
		memcpy(&ptr_job->buf[ptr_job->nb_trans], udd_ep_out_cache_buffer[ep_num - 1], ptr_job->buf_size % ep_size);
    26c6:	6843      	ldr	r3, [r0, #4]
    26c8:	68c2      	ldr	r2, [r0, #12]
    26ca:	4694      	mov	ip, r2
    26cc:	4463      	add	r3, ip
    26ce:	001e      	movs	r6, r3
    26d0:	4641      	mov	r1, r8
    26d2:	6880      	ldr	r0, [r0, #8]
    26d4:	4b21      	ldr	r3, [pc, #132]	; (275c <udd_ep_transfer_process+0x19c>)
    26d6:	4798      	blx	r3
    26d8:	000a      	movs	r2, r1
    26da:	1e7b      	subs	r3, r7, #1
    26dc:	019b      	lsls	r3, r3, #6
    26de:	4922      	ldr	r1, [pc, #136]	; (2768 <udd_ep_transfer_process+0x1a8>)
    26e0:	1859      	adds	r1, r3, r1
    26e2:	0030      	movs	r0, r6
    26e4:	4b21      	ldr	r3, [pc, #132]	; (276c <udd_ep_transfer_process+0x1ac>)
    26e6:	4798      	blx	r3
    26e8:	e782      	b.n	25f0 <udd_ep_transfer_process+0x30>
	if ((nb_trans == ep_callback_para->out_buffer_size) && (ptr_job->nb_trans != ptr_job->buf_size)) {
    26ea:	464a      	mov	r2, r9
    26ec:	8892      	ldrh	r2, [r2, #4]
    26ee:	4552      	cmp	r2, sl
    26f0:	d000      	beq.n	26f4 <udd_ep_transfer_process+0x134>
    26f2:	e786      	b.n	2602 <udd_ep_transfer_process+0x42>
    26f4:	429e      	cmp	r6, r3
    26f6:	d100      	bne.n	26fa <udd_ep_transfer_process+0x13a>
    26f8:	e783      	b.n	2602 <udd_ep_transfer_process+0x42>
		next_trans = ptr_job->buf_size - ptr_job->nb_trans;
    26fa:	1b9b      	subs	r3, r3, r6
    26fc:	b29d      	uxth	r5, r3
		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    26fe:	4b15      	ldr	r3, [pc, #84]	; (2754 <udd_ep_transfer_process+0x194>)
    2700:	429d      	cmp	r5, r3
    2702:	d916      	bls.n	2732 <udd_ep_transfer_process+0x172>
		next_trans = UDD_ENDPOINT_MAX_TRANS - (UDD_ENDPOINT_MAX_TRANS % ep_size);
    2704:	001d      	movs	r5, r3
    2706:	4641      	mov	r1, r8
    2708:	0018      	movs	r0, r3
    270a:	4b13      	ldr	r3, [pc, #76]	; (2758 <udd_ep_transfer_process+0x198>)
    270c:	4798      	blx	r3
    270e:	1a6b      	subs	r3, r5, r1
    2710:	b29b      	uxth	r3, r3
		if (next_trans < ep_size) {
    2712:	4598      	cmp	r8, r3
    2714:	d914      	bls.n	2740 <udd_ep_transfer_process+0x180>
			ptr_job->b_use_out_cache_buffer = true;
    2716:	7ca3      	ldrb	r3, [r4, #18]
    2718:	2204      	movs	r2, #4
    271a:	4313      	orrs	r3, r2
    271c:	74a3      	strb	r3, [r4, #18]
			usb_device_endpoint_read_buffer_job(&usb_device,ep_num,udd_ep_out_cache_buffer[ep_num - 1],ep_size);
    271e:	1e7a      	subs	r2, r7, #1
    2720:	0192      	lsls	r2, r2, #6
    2722:	4b11      	ldr	r3, [pc, #68]	; (2768 <udd_ep_transfer_process+0x1a8>)
    2724:	18d2      	adds	r2, r2, r3
    2726:	4643      	mov	r3, r8
    2728:	0039      	movs	r1, r7
    272a:	480d      	ldr	r0, [pc, #52]	; (2760 <udd_ep_transfer_process+0x1a0>)
    272c:	4c10      	ldr	r4, [pc, #64]	; (2770 <udd_ep_transfer_process+0x1b0>)
    272e:	47a0      	blx	r4
    2730:	e772      	b.n	2618 <udd_ep_transfer_process+0x58>
			next_trans -= next_trans % ep_size;
    2732:	4641      	mov	r1, r8
    2734:	0028      	movs	r0, r5
    2736:	4b09      	ldr	r3, [pc, #36]	; (275c <udd_ep_transfer_process+0x19c>)
    2738:	4798      	blx	r3
    273a:	1a6b      	subs	r3, r5, r1
    273c:	b29b      	uxth	r3, r3
    273e:	e7e8      	b.n	2712 <udd_ep_transfer_process+0x152>
			usb_device_endpoint_read_buffer_job(&usb_device,ep_num,&ptr_job->buf[ptr_job->nb_trans],next_trans);
    2740:	6862      	ldr	r2, [r4, #4]
    2742:	1992      	adds	r2, r2, r6
    2744:	0039      	movs	r1, r7
    2746:	4806      	ldr	r0, [pc, #24]	; (2760 <udd_ep_transfer_process+0x1a0>)
    2748:	4c09      	ldr	r4, [pc, #36]	; (2770 <udd_ep_transfer_process+0x1b0>)
    274a:	47a0      	blx	r4
    274c:	e764      	b.n	2618 <udd_ep_transfer_process+0x58>
    274e:	46c0      	nop			; (mov r8, r8)
    2750:	0000259d 	.word	0x0000259d
    2754:	00001fff 	.word	0x00001fff
    2758:	000048f5 	.word	0x000048f5
    275c:	00004721 	.word	0x00004721
    2760:	20000468 	.word	0x20000468
    2764:	000038ad 	.word	0x000038ad
    2768:	200003a8 	.word	0x200003a8
    276c:	000049dd 	.word	0x000049dd
    2770:	00003901 	.word	0x00003901

00002774 <udd_ctrl_stall_data>:

/**
 * \brief Control Endpoint stall sending data
 */
static void udd_ctrl_stall_data(void)
{
    2774:	b510      	push	{r4, lr}
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    2776:	2205      	movs	r2, #5
    2778:	4b05      	ldr	r3, [pc, #20]	; (2790 <udd_ctrl_stall_data+0x1c>)
    277a:	701a      	strb	r2, [r3, #0]

	usb_device_endpoint_set_halt(&usb_device, USB_EP_DIR_IN);
    277c:	4c05      	ldr	r4, [pc, #20]	; (2794 <udd_ctrl_stall_data+0x20>)
    277e:	2180      	movs	r1, #128	; 0x80
    2780:	0020      	movs	r0, r4
    2782:	4b05      	ldr	r3, [pc, #20]	; (2798 <udd_ctrl_stall_data+0x24>)
    2784:	4798      	blx	r3
	usb_device_endpoint_clear_halt(&usb_device, USB_EP_DIR_OUT);
    2786:	2100      	movs	r1, #0
    2788:	0020      	movs	r0, r4
    278a:	4b04      	ldr	r3, [pc, #16]	; (279c <udd_ctrl_stall_data+0x28>)
    278c:	4798      	blx	r3
}
    278e:	bd10      	pop	{r4, pc}
    2790:	200002aa 	.word	0x200002aa
    2794:	20000468 	.word	0x20000468
    2798:	00003801 	.word	0x00003801
    279c:	00003827 	.word	0x00003827

000027a0 <_usb_device_lpm_suspend>:
#endif
}

#ifdef  USB_DEVICE_LPM_SUPPORT
static void _usb_device_lpm_suspend(struct usb_module *module_inst, void *pointer)
{
    27a0:	b570      	push	{r4, r5, r6, lr}
    27a2:	000e      	movs	r6, r1
	dbg_print("LPM_SUSP\n");

	uint32_t *lpm_wakeup_enable;
	lpm_wakeup_enable = (uint32_t *)pointer;

	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP);
    27a4:	4c0e      	ldr	r4, [pc, #56]	; (27e0 <_usb_device_lpm_suspend+0x40>)
    27a6:	2106      	movs	r1, #6
    27a8:	0020      	movs	r0, r4
    27aa:	4d0e      	ldr	r5, [pc, #56]	; (27e4 <_usb_device_lpm_suspend+0x44>)
    27ac:	47a8      	blx	r5
	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    27ae:	2104      	movs	r1, #4
    27b0:	0020      	movs	r0, r4
    27b2:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    27b4:	2102      	movs	r1, #2
    27b6:	0020      	movs	r0, r4
    27b8:	4b0b      	ldr	r3, [pc, #44]	; (27e8 <_usb_device_lpm_suspend+0x48>)
    27ba:	4798      	blx	r3

//#warning Here the sleep mode must be choose to have a DFLL startup time < bmAttribut.HIRD
	udd_sleep_mode(UDD_STATE_SUSPEND_LPM);  // Enter in LPM SUSPEND mode
    27bc:	2002      	movs	r0, #2
    27be:	4b0b      	ldr	r3, [pc, #44]	; (27ec <_usb_device_lpm_suspend+0x4c>)
    27c0:	4798      	blx	r3
	if ((*lpm_wakeup_enable)) {
    27c2:	6833      	ldr	r3, [r6, #0]
    27c4:	2b00      	cmp	r3, #0
    27c6:	d104      	bne.n	27d2 <_usb_device_lpm_suspend+0x32>
		UDC_REMOTEWAKEUP_LPM_ENABLE();
	}
	if (!(*lpm_wakeup_enable)) {
		UDC_REMOTEWAKEUP_LPM_DISABLE();
    27c8:	4b09      	ldr	r3, [pc, #36]	; (27f0 <_usb_device_lpm_suspend+0x50>)
    27ca:	4798      	blx	r3
	}
	UDC_SUSPEND_LPM_EVENT();
    27cc:	4b09      	ldr	r3, [pc, #36]	; (27f4 <_usb_device_lpm_suspend+0x54>)
    27ce:	4798      	blx	r3
}
    27d0:	bd70      	pop	{r4, r5, r6, pc}
		UDC_REMOTEWAKEUP_LPM_ENABLE();
    27d2:	4b09      	ldr	r3, [pc, #36]	; (27f8 <_usb_device_lpm_suspend+0x58>)
    27d4:	4798      	blx	r3
	if (!(*lpm_wakeup_enable)) {
    27d6:	6833      	ldr	r3, [r6, #0]
    27d8:	2b00      	cmp	r3, #0
    27da:	d1f7      	bne.n	27cc <_usb_device_lpm_suspend+0x2c>
    27dc:	e7f4      	b.n	27c8 <_usb_device_lpm_suspend+0x28>
    27de:	46c0      	nop			; (mov r8, r8)
    27e0:	20000468 	.word	0x20000468
    27e4:	00003341 	.word	0x00003341
    27e8:	00003321 	.word	0x00003321
    27ec:	000024dd 	.word	0x000024dd
    27f0:	00000179 	.word	0x00000179
    27f4:	0000016d 	.word	0x0000016d
    27f8:	00000185 	.word	0x00000185

000027fc <_usb_on_wakeup>:
 * \brief Control endpoint Wakeup callback function
 * \param[in] module_inst Pointer to USB module instance
 * \param[in] pointer Pointer to the callback parameter from driver layer.
 */
static void _usb_on_wakeup(struct usb_module *module_inst, void *pointer)
{
    27fc:	b570      	push	{r4, r5, r6, lr}
		if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    27fe:	4b13      	ldr	r3, [pc, #76]	; (284c <_usb_on_wakeup+0x50>)
    2800:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    2802:	069b      	lsls	r3, r3, #26
    2804:	d41c      	bmi.n	2840 <_usb_on_wakeup+0x44>
			while((SYSCTRL->PCLKSR.reg & DFLL_READY_FLAG) != DFLL_READY_FLAG);
    2806:	4911      	ldr	r1, [pc, #68]	; (284c <_usb_on_wakeup+0x50>)
    2808:	22d0      	movs	r2, #208	; 0xd0
    280a:	68cb      	ldr	r3, [r1, #12]
    280c:	4013      	ands	r3, r2
    280e:	2bd0      	cmp	r3, #208	; 0xd0
    2810:	d1fb      	bne.n	280a <_usb_on_wakeup+0xe>
	udd_wait_clock_ready();

	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    2812:	4c0f      	ldr	r4, [pc, #60]	; (2850 <_usb_on_wakeup+0x54>)
    2814:	2102      	movs	r1, #2
    2816:	0020      	movs	r0, r4
    2818:	4b0e      	ldr	r3, [pc, #56]	; (2854 <_usb_on_wakeup+0x58>)
    281a:	4798      	blx	r3
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    281c:	2104      	movs	r1, #4
    281e:	0020      	movs	r0, r4
    2820:	4d0d      	ldr	r5, [pc, #52]	; (2858 <_usb_on_wakeup+0x5c>)
    2822:	47a8      	blx	r5
#ifdef  USB_DEVICE_LPM_SUPPORT
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP, _usb_device_lpm_suspend);
    2824:	4a0d      	ldr	r2, [pc, #52]	; (285c <_usb_on_wakeup+0x60>)
    2826:	2106      	movs	r1, #6
    2828:	0020      	movs	r0, r4
    282a:	4b0d      	ldr	r3, [pc, #52]	; (2860 <_usb_on_wakeup+0x64>)
    282c:	4798      	blx	r3
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP);
    282e:	2106      	movs	r1, #6
    2830:	0020      	movs	r0, r4
    2832:	47a8      	blx	r5
#endif
	udd_sleep_mode(UDD_STATE_IDLE);
    2834:	2003      	movs	r0, #3
    2836:	4b0b      	ldr	r3, [pc, #44]	; (2864 <_usb_on_wakeup+0x68>)
    2838:	4798      	blx	r3
#ifdef UDC_RESUME_EVENT
	UDC_RESUME_EVENT();
    283a:	4b0b      	ldr	r3, [pc, #44]	; (2868 <_usb_on_wakeup+0x6c>)
    283c:	4798      	blx	r3
#endif
}
    283e:	bd70      	pop	{r4, r5, r6, pc}
			while((SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY);
    2840:	4902      	ldr	r1, [pc, #8]	; (284c <_usb_on_wakeup+0x50>)
    2842:	2210      	movs	r2, #16
    2844:	68cb      	ldr	r3, [r1, #12]
    2846:	421a      	tst	r2, r3
    2848:	d0fc      	beq.n	2844 <_usb_on_wakeup+0x48>
    284a:	e7e2      	b.n	2812 <_usb_on_wakeup+0x16>
    284c:	40000800 	.word	0x40000800
    2850:	20000468 	.word	0x20000468
    2854:	00003341 	.word	0x00003341
    2858:	00003321 	.word	0x00003321
    285c:	000027a1 	.word	0x000027a1
    2860:	000032fd 	.word	0x000032fd
    2864:	000024dd 	.word	0x000024dd
    2868:	00000121 	.word	0x00000121

0000286c <_usb_on_bus_reset>:
{
    286c:	b530      	push	{r4, r5, lr}
    286e:	b083      	sub	sp, #12
    2870:	0004      	movs	r4, r0
	udc_reset();
    2872:	4b1e      	ldr	r3, [pc, #120]	; (28ec <_usb_on_bus_reset+0x80>)
    2874:	4798      	blx	r3
 * \param module_inst Pointer to USB device module instance
 * \param address     USB device address value
 */
static inline void usb_device_set_address(struct usb_module *module_inst, uint8_t address)
{
	module_inst->hw->DEVICE.DADD.reg = USB_DEVICE_DADD_ADDEN | address;
    2876:	2380      	movs	r3, #128	; 0x80
    2878:	6822      	ldr	r2, [r4, #0]
    287a:	7293      	strb	r3, [r2, #10]
	 usb_device_endpoint_get_config_defaults(&config_ep0);
    287c:	ad01      	add	r5, sp, #4
    287e:	0028      	movs	r0, r5
    2880:	4b1b      	ldr	r3, [pc, #108]	; (28f0 <_usb_on_bus_reset+0x84>)
    2882:	4798      	blx	r3
	 config_ep0.ep_size = (enum usb_endpoint_size)(32 - clz(((uint32_t)Min(Max(USB_DEVICE_EP_CTRL_SIZE, 8), 1024) << 1) - 1) - 1 - 3);
    2884:	2303      	movs	r3, #3
    2886:	706b      	strb	r3, [r5, #1]
	 usb_device_endpoint_set_config(module_inst,&config_ep0);
    2888:	0029      	movs	r1, r5
    288a:	0020      	movs	r0, r4
    288c:	4b19      	ldr	r3, [pc, #100]	; (28f4 <_usb_on_bus_reset+0x88>)
    288e:	4798      	blx	r3
	 usb_device_endpoint_setup_buffer_job(module_inst,udd_ctrl_buffer);
    2890:	4919      	ldr	r1, [pc, #100]	; (28f8 <_usb_on_bus_reset+0x8c>)
    2892:	0020      	movs	r0, r4
    2894:	4b19      	ldr	r3, [pc, #100]	; (28fc <_usb_on_bus_reset+0x90>)
    2896:	4798      	blx	r3
	 usb_device_endpoint_register_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_RXSTP, _usb_ep0_on_setup );
    2898:	4b19      	ldr	r3, [pc, #100]	; (2900 <_usb_on_bus_reset+0x94>)
    289a:	2202      	movs	r2, #2
    289c:	2100      	movs	r1, #0
    289e:	0020      	movs	r0, r4
    28a0:	4d18      	ldr	r5, [pc, #96]	; (2904 <_usb_on_bus_reset+0x98>)
    28a2:	47a8      	blx	r5
	 usb_device_endpoint_register_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT,_usb_ep0_on_tansfer_ok );
    28a4:	4b18      	ldr	r3, [pc, #96]	; (2908 <_usb_on_bus_reset+0x9c>)
    28a6:	2200      	movs	r2, #0
    28a8:	2100      	movs	r1, #0
    28aa:	0020      	movs	r0, r4
    28ac:	47a8      	blx	r5
	 usb_device_endpoint_register_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRFAIL,_usb_ep0_on_tansfer_fail );
    28ae:	4b17      	ldr	r3, [pc, #92]	; (290c <_usb_on_bus_reset+0xa0>)
    28b0:	2201      	movs	r2, #1
    28b2:	2100      	movs	r1, #0
    28b4:	0020      	movs	r0, r4
    28b6:	47a8      	blx	r5
	 usb_device_endpoint_enable_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_RXSTP);
    28b8:	2202      	movs	r2, #2
    28ba:	2100      	movs	r1, #0
    28bc:	0020      	movs	r0, r4
    28be:	4d14      	ldr	r5, [pc, #80]	; (2910 <_usb_on_bus_reset+0xa4>)
    28c0:	47a8      	blx	r5
	 usb_device_endpoint_enable_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    28c2:	2200      	movs	r2, #0
    28c4:	2100      	movs	r1, #0
    28c6:	0020      	movs	r0, r4
    28c8:	47a8      	blx	r5
	 usb_device_endpoint_enable_callback(module_inst,0,USB_DEVICE_ENDPOINT_CALLBACK_TRFAIL);
    28ca:	2201      	movs	r2, #1
    28cc:	2100      	movs	r1, #0
    28ce:	0020      	movs	r0, r4
    28d0:	47a8      	blx	r5
 * \param lpm_mode    LPM mode
 */
static inline void usb_device_set_lpm_mode(struct usb_module *module_inst,
		enum usb_device_lpm_mode lpm_mode)
{
	module_inst->hw->DEVICE.CTRLB.bit.LPMHDSK = lpm_mode;
    28d2:	6821      	ldr	r1, [r4, #0]
    28d4:	890b      	ldrh	r3, [r1, #8]
    28d6:	4a0f      	ldr	r2, [pc, #60]	; (2914 <_usb_on_bus_reset+0xa8>)
    28d8:	401a      	ands	r2, r3
    28da:	2380      	movs	r3, #128	; 0x80
    28dc:	00db      	lsls	r3, r3, #3
    28de:	4313      	orrs	r3, r2
    28e0:	810b      	strh	r3, [r1, #8]
	 udd_ep_control_state = UDD_EPCTRL_SETUP;
    28e2:	2200      	movs	r2, #0
    28e4:	4b0c      	ldr	r3, [pc, #48]	; (2918 <_usb_on_bus_reset+0xac>)
    28e6:	701a      	strb	r2, [r3, #0]
}
    28e8:	b003      	add	sp, #12
    28ea:	bd30      	pop	{r4, r5, pc}
    28ec:	00000cd5 	.word	0x00000cd5
    28f0:	0000354d 	.word	0x0000354d
    28f4:	0000355d 	.word	0x0000355d
    28f8:	200005e8 	.word	0x200005e8
    28fc:	00003951 	.word	0x00003951
    2900:	00002a55 	.word	0x00002a55
    2904:	0000335d 	.word	0x0000335d
    2908:	00002d85 	.word	0x00002d85
    290c:	00002959 	.word	0x00002959
    2910:	000033ad 	.word	0x000033ad
    2914:	fffff3ff 	.word	0xfffff3ff
    2918:	200002aa 	.word	0x200002aa

0000291c <udd_ctrl_send_zlp_in>:
{
    291c:	b510      	push	{r4, lr}
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
    291e:	2203      	movs	r2, #3
    2920:	4b07      	ldr	r3, [pc, #28]	; (2940 <udd_ctrl_send_zlp_in+0x24>)
    2922:	701a      	strb	r2, [r3, #0]
	usb_device_endpoint_setup_buffer_job(&usb_device,udd_ctrl_buffer);
    2924:	4c07      	ldr	r4, [pc, #28]	; (2944 <udd_ctrl_send_zlp_in+0x28>)
    2926:	4908      	ldr	r1, [pc, #32]	; (2948 <udd_ctrl_send_zlp_in+0x2c>)
    2928:	0020      	movs	r0, r4
    292a:	4b08      	ldr	r3, [pc, #32]	; (294c <udd_ctrl_send_zlp_in+0x30>)
    292c:	4798      	blx	r3
	usb_device_endpoint_write_buffer_job(&usb_device,0,udd_g_ctrlreq.payload,0);
    292e:	4b08      	ldr	r3, [pc, #32]	; (2950 <udd_ctrl_send_zlp_in+0x34>)
    2930:	689a      	ldr	r2, [r3, #8]
    2932:	2300      	movs	r3, #0
    2934:	2100      	movs	r1, #0
    2936:	0020      	movs	r0, r4
    2938:	4c06      	ldr	r4, [pc, #24]	; (2954 <udd_ctrl_send_zlp_in+0x38>)
    293a:	47a0      	blx	r4
}
    293c:	bd10      	pop	{r4, pc}
    293e:	46c0      	nop			; (mov r8, r8)
    2940:	200002aa 	.word	0x200002aa
    2944:	20000468 	.word	0x20000468
    2948:	200005e8 	.word	0x200005e8
    294c:	00003951 	.word	0x00003951
    2950:	200005d0 	.word	0x200005d0
    2954:	000038ad 	.word	0x000038ad

00002958 <_usb_ep0_on_tansfer_fail>:
{
    2958:	b510      	push	{r4, lr}
	if(ep_callback_para->endpoint_address & USB_EP_DIR_IN) {
    295a:	7989      	ldrb	r1, [r1, #6]
    295c:	b24b      	sxtb	r3, r1
    295e:	2b00      	cmp	r3, #0
    2960:	db06      	blt.n	2970 <_usb_ep0_on_tansfer_fail+0x18>
	if (UDD_EPCTRL_DATA_IN == udd_ep_control_state) {
    2962:	4b0e      	ldr	r3, [pc, #56]	; (299c <_usb_ep0_on_tansfer_fail+0x44>)
    2964:	781b      	ldrb	r3, [r3, #0]
    2966:	2b02      	cmp	r3, #2
    2968:	d00f      	beq.n	298a <_usb_ep0_on_tansfer_fail+0x32>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
    296a:	2b03      	cmp	r3, #3
    296c:	d011      	beq.n	2992 <_usb_ep0_on_tansfer_fail+0x3a>
}
    296e:	bd10      	pop	{r4, pc}
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
    2970:	4b0a      	ldr	r3, [pc, #40]	; (299c <_usb_ep0_on_tansfer_fail+0x44>)
    2972:	781b      	ldrb	r3, [r3, #0]
    2974:	2b01      	cmp	r3, #1
    2976:	d005      	beq.n	2984 <_usb_ep0_on_tansfer_fail+0x2c>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
    2978:	2b04      	cmp	r3, #4
    297a:	d1f8      	bne.n	296e <_usb_ep0_on_tansfer_fail+0x16>
		usb_device_endpoint_set_halt(&usb_device, ep_callback_para->endpoint_address);
    297c:	4808      	ldr	r0, [pc, #32]	; (29a0 <_usb_ep0_on_tansfer_fail+0x48>)
    297e:	4b09      	ldr	r3, [pc, #36]	; (29a4 <_usb_ep0_on_tansfer_fail+0x4c>)
    2980:	4798      	blx	r3
    2982:	e7f4      	b.n	296e <_usb_ep0_on_tansfer_fail+0x16>
		udd_ctrl_send_zlp_in();
    2984:	4b08      	ldr	r3, [pc, #32]	; (29a8 <_usb_ep0_on_tansfer_fail+0x50>)
    2986:	4798      	blx	r3
    2988:	e7f1      	b.n	296e <_usb_ep0_on_tansfer_fail+0x16>
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
    298a:	2204      	movs	r2, #4
    298c:	4b03      	ldr	r3, [pc, #12]	; (299c <_usb_ep0_on_tansfer_fail+0x44>)
    298e:	701a      	strb	r2, [r3, #0]
    2990:	e7ed      	b.n	296e <_usb_ep0_on_tansfer_fail+0x16>
		usb_device_endpoint_set_halt(&usb_device, ep_callback_para->endpoint_address);
    2992:	4803      	ldr	r0, [pc, #12]	; (29a0 <_usb_ep0_on_tansfer_fail+0x48>)
    2994:	4b03      	ldr	r3, [pc, #12]	; (29a4 <_usb_ep0_on_tansfer_fail+0x4c>)
    2996:	4798      	blx	r3
}
    2998:	e7e9      	b.n	296e <_usb_ep0_on_tansfer_fail+0x16>
    299a:	46c0      	nop			; (mov r8, r8)
    299c:	200002aa 	.word	0x200002aa
    29a0:	20000468 	.word	0x20000468
    29a4:	00003801 	.word	0x00003801
    29a8:	0000291d 	.word	0x0000291d

000029ac <udd_ctrl_in_sent>:
{
    29ac:	b570      	push	{r4, r5, r6, lr}
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
    29ae:	4b20      	ldr	r3, [pc, #128]	; (2a30 <udd_ctrl_in_sent+0x84>)
    29b0:	881b      	ldrh	r3, [r3, #0]
    29b2:	4a20      	ldr	r2, [pc, #128]	; (2a34 <udd_ctrl_in_sent+0x88>)
    29b4:	8994      	ldrh	r4, [r2, #12]
    29b6:	1ae4      	subs	r4, r4, r3
    29b8:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
    29ba:	2c00      	cmp	r4, #0
    29bc:	d118      	bne.n	29f0 <udd_ctrl_in_sent+0x44>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
    29be:	4a1e      	ldr	r2, [pc, #120]	; (2a38 <udd_ctrl_in_sent+0x8c>)
    29c0:	8811      	ldrh	r1, [r2, #0]
    29c2:	185b      	adds	r3, r3, r1
    29c4:	b29b      	uxth	r3, r3
    29c6:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_nb_trans) || b_shortpacket) {
    29c8:	4a1a      	ldr	r2, [pc, #104]	; (2a34 <udd_ctrl_in_sent+0x88>)
    29ca:	88d2      	ldrh	r2, [r2, #6]
    29cc:	429a      	cmp	r2, r3
    29ce:	d023      	beq.n	2a18 <udd_ctrl_in_sent+0x6c>
    29d0:	4b1a      	ldr	r3, [pc, #104]	; (2a3c <udd_ctrl_in_sent+0x90>)
    29d2:	781b      	ldrb	r3, [r3, #0]
    29d4:	2b00      	cmp	r3, #0
    29d6:	d11f      	bne.n	2a18 <udd_ctrl_in_sent+0x6c>
		if ((!udd_g_ctrlreq.over_under_run) || (!udd_g_ctrlreq.over_under_run())) {
    29d8:	4b16      	ldr	r3, [pc, #88]	; (2a34 <udd_ctrl_in_sent+0x88>)
    29da:	695b      	ldr	r3, [r3, #20]
    29dc:	2b00      	cmp	r3, #0
    29de:	d023      	beq.n	2a28 <udd_ctrl_in_sent+0x7c>
    29e0:	4798      	blx	r3
    29e2:	2800      	cmp	r0, #0
    29e4:	d020      	beq.n	2a28 <udd_ctrl_in_sent+0x7c>
			udd_ctrl_payload_nb_trans = 0;
    29e6:	2200      	movs	r2, #0
    29e8:	4b11      	ldr	r3, [pc, #68]	; (2a30 <udd_ctrl_in_sent+0x84>)
    29ea:	801a      	strh	r2, [r3, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
    29ec:	4b11      	ldr	r3, [pc, #68]	; (2a34 <udd_ctrl_in_sent+0x88>)
    29ee:	899c      	ldrh	r4, [r3, #12]
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
    29f0:	2c3f      	cmp	r4, #63	; 0x3f
    29f2:	d919      	bls.n	2a28 <udd_ctrl_in_sent+0x7c>
		b_shortpacket = false;
    29f4:	2200      	movs	r2, #0
    29f6:	4b11      	ldr	r3, [pc, #68]	; (2a3c <udd_ctrl_in_sent+0x90>)
    29f8:	701a      	strb	r2, [r3, #0]
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
    29fa:	2440      	movs	r4, #64	; 0x40
	usb_device_endpoint_write_buffer_job(&usb_device,0,udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans,nb_remain);
    29fc:	4d0c      	ldr	r5, [pc, #48]	; (2a30 <udd_ctrl_in_sent+0x84>)
    29fe:	882b      	ldrh	r3, [r5, #0]
    2a00:	4a0c      	ldr	r2, [pc, #48]	; (2a34 <udd_ctrl_in_sent+0x88>)
    2a02:	6892      	ldr	r2, [r2, #8]
    2a04:	18d2      	adds	r2, r2, r3
    2a06:	0023      	movs	r3, r4
    2a08:	2100      	movs	r1, #0
    2a0a:	480d      	ldr	r0, [pc, #52]	; (2a40 <udd_ctrl_in_sent+0x94>)
    2a0c:	4e0d      	ldr	r6, [pc, #52]	; (2a44 <udd_ctrl_in_sent+0x98>)
    2a0e:	47b0      	blx	r6
	udd_ctrl_payload_nb_trans += nb_remain;
    2a10:	882b      	ldrh	r3, [r5, #0]
    2a12:	18e4      	adds	r4, r4, r3
    2a14:	802c      	strh	r4, [r5, #0]
}
    2a16:	bd70      	pop	{r4, r5, r6, pc}
			udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
    2a18:	2204      	movs	r2, #4
    2a1a:	4b0b      	ldr	r3, [pc, #44]	; (2a48 <udd_ctrl_in_sent+0x9c>)
    2a1c:	701a      	strb	r2, [r3, #0]
			usb_device_endpoint_setup_buffer_job(&usb_device,udd_ctrl_buffer);
    2a1e:	490b      	ldr	r1, [pc, #44]	; (2a4c <udd_ctrl_in_sent+0xa0>)
    2a20:	4807      	ldr	r0, [pc, #28]	; (2a40 <udd_ctrl_in_sent+0x94>)
    2a22:	4b0b      	ldr	r3, [pc, #44]	; (2a50 <udd_ctrl_in_sent+0xa4>)
    2a24:	4798      	blx	r3
			return;
    2a26:	e7f6      	b.n	2a16 <udd_ctrl_in_sent+0x6a>
		b_shortpacket = true;
    2a28:	2201      	movs	r2, #1
    2a2a:	4b04      	ldr	r3, [pc, #16]	; (2a3c <udd_ctrl_in_sent+0x90>)
    2a2c:	701a      	strb	r2, [r3, #0]
    2a2e:	e7e5      	b.n	29fc <udd_ctrl_in_sent+0x50>
    2a30:	200002a6 	.word	0x200002a6
    2a34:	200005d0 	.word	0x200005d0
    2a38:	200002a8 	.word	0x200002a8
    2a3c:	200002a4 	.word	0x200002a4
    2a40:	20000468 	.word	0x20000468
    2a44:	000038ad 	.word	0x000038ad
    2a48:	200002aa 	.word	0x200002aa
    2a4c:	200005e8 	.word	0x200005e8
    2a50:	00003951 	.word	0x00003951

00002a54 <_usb_ep0_on_setup>:
{
    2a54:	b510      	push	{r4, lr}
    2a56:	000c      	movs	r4, r1
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
    2a58:	4b2c      	ldr	r3, [pc, #176]	; (2b0c <_usb_ep0_on_setup+0xb8>)
    2a5a:	781b      	ldrb	r3, [r3, #0]
    2a5c:	2b00      	cmp	r3, #0
    2a5e:	d007      	beq.n	2a70 <_usb_ep0_on_setup+0x1c>
		if (NULL != udd_g_ctrlreq.callback) {
    2a60:	4b2b      	ldr	r3, [pc, #172]	; (2b10 <_usb_ep0_on_setup+0xbc>)
    2a62:	691b      	ldr	r3, [r3, #16]
    2a64:	2b00      	cmp	r3, #0
    2a66:	d000      	beq.n	2a6a <_usb_ep0_on_setup+0x16>
			udd_g_ctrlreq.callback();
    2a68:	4798      	blx	r3
		udd_ep_control_state = UDD_EPCTRL_SETUP;
    2a6a:	2200      	movs	r2, #0
    2a6c:	4b27      	ldr	r3, [pc, #156]	; (2b0c <_usb_ep0_on_setup+0xb8>)
    2a6e:	701a      	strb	r2, [r3, #0]
	if ( 8 != ep_callback_para->received_bytes) {
    2a70:	8823      	ldrh	r3, [r4, #0]
    2a72:	2b08      	cmp	r3, #8
    2a74:	d002      	beq.n	2a7c <_usb_ep0_on_setup+0x28>
		udd_ctrl_stall_data();
    2a76:	4b27      	ldr	r3, [pc, #156]	; (2b14 <_usb_ep0_on_setup+0xc0>)
    2a78:	4798      	blx	r3
}
    2a7a:	bd10      	pop	{r4, pc}
	udd_g_ctrlreq.req.bmRequestType = udd_ctrl_buffer[0];
    2a7c:	4a24      	ldr	r2, [pc, #144]	; (2b10 <_usb_ep0_on_setup+0xbc>)
    2a7e:	4b26      	ldr	r3, [pc, #152]	; (2b18 <_usb_ep0_on_setup+0xc4>)
    2a80:	7819      	ldrb	r1, [r3, #0]
    2a82:	7011      	strb	r1, [r2, #0]
	udd_g_ctrlreq.req.bRequest = udd_ctrl_buffer[1];
    2a84:	7859      	ldrb	r1, [r3, #1]
    2a86:	7051      	strb	r1, [r2, #1]
	udd_g_ctrlreq.req.wValue = ((uint16_t)(udd_ctrl_buffer[3]) << 8) + udd_ctrl_buffer[2];
    2a88:	78d8      	ldrb	r0, [r3, #3]
    2a8a:	0200      	lsls	r0, r0, #8
    2a8c:	7899      	ldrb	r1, [r3, #2]
    2a8e:	1809      	adds	r1, r1, r0
    2a90:	8051      	strh	r1, [r2, #2]
	udd_g_ctrlreq.req.wIndex = ((uint16_t)(udd_ctrl_buffer[5]) << 8) + udd_ctrl_buffer[4];
    2a92:	7958      	ldrb	r0, [r3, #5]
    2a94:	0200      	lsls	r0, r0, #8
    2a96:	7919      	ldrb	r1, [r3, #4]
    2a98:	1809      	adds	r1, r1, r0
    2a9a:	8091      	strh	r1, [r2, #4]
	udd_g_ctrlreq.req.wLength = ((uint16_t)(udd_ctrl_buffer[7]) << 8) + udd_ctrl_buffer[6];
    2a9c:	79d9      	ldrb	r1, [r3, #7]
    2a9e:	0209      	lsls	r1, r1, #8
    2aa0:	799b      	ldrb	r3, [r3, #6]
    2aa2:	185b      	adds	r3, r3, r1
    2aa4:	80d3      	strh	r3, [r2, #6]
		if (false == udc_process_setup()) {
    2aa6:	4b1d      	ldr	r3, [pc, #116]	; (2b1c <_usb_ep0_on_setup+0xc8>)
    2aa8:	4798      	blx	r3
    2aaa:	2800      	cmp	r0, #0
    2aac:	d016      	beq.n	2adc <_usb_ep0_on_setup+0x88>
		} else if (Udd_setup_is_in()) {
    2aae:	4b18      	ldr	r3, [pc, #96]	; (2b10 <_usb_ep0_on_setup+0xbc>)
    2ab0:	781b      	ldrb	r3, [r3, #0]
    2ab2:	2b7f      	cmp	r3, #127	; 0x7f
    2ab4:	d815      	bhi.n	2ae2 <_usb_ep0_on_setup+0x8e>
			if(0 == udd_g_ctrlreq.req.wLength) {
    2ab6:	4b16      	ldr	r3, [pc, #88]	; (2b10 <_usb_ep0_on_setup+0xbc>)
    2ab8:	88db      	ldrh	r3, [r3, #6]
    2aba:	2b00      	cmp	r3, #0
    2abc:	d022      	beq.n	2b04 <_usb_ep0_on_setup+0xb0>
				udd_ctrl_prev_payload_nb_trans = 0;
    2abe:	2300      	movs	r3, #0
    2ac0:	4a17      	ldr	r2, [pc, #92]	; (2b20 <_usb_ep0_on_setup+0xcc>)
    2ac2:	8013      	strh	r3, [r2, #0]
				udd_ctrl_payload_nb_trans = 0;
    2ac4:	4a17      	ldr	r2, [pc, #92]	; (2b24 <_usb_ep0_on_setup+0xd0>)
    2ac6:	8013      	strh	r3, [r2, #0]
				udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
    2ac8:	2201      	movs	r2, #1
    2aca:	4b10      	ldr	r3, [pc, #64]	; (2b0c <_usb_ep0_on_setup+0xb8>)
    2acc:	701a      	strb	r2, [r3, #0]
				usb_device_endpoint_read_buffer_job(&usb_device,0,udd_ctrl_buffer,USB_DEVICE_EP_CTRL_SIZE);
    2ace:	2340      	movs	r3, #64	; 0x40
    2ad0:	4a11      	ldr	r2, [pc, #68]	; (2b18 <_usb_ep0_on_setup+0xc4>)
    2ad2:	2100      	movs	r1, #0
    2ad4:	4814      	ldr	r0, [pc, #80]	; (2b28 <_usb_ep0_on_setup+0xd4>)
    2ad6:	4c15      	ldr	r4, [pc, #84]	; (2b2c <_usb_ep0_on_setup+0xd8>)
    2ad8:	47a0      	blx	r4
    2ada:	e7ce      	b.n	2a7a <_usb_ep0_on_setup+0x26>
			udd_ctrl_stall_data();
    2adc:	4b0d      	ldr	r3, [pc, #52]	; (2b14 <_usb_ep0_on_setup+0xc0>)
    2ade:	4798      	blx	r3
			return;
    2ae0:	e7cb      	b.n	2a7a <_usb_ep0_on_setup+0x26>
			udd_ctrl_prev_payload_nb_trans = 0;
    2ae2:	2300      	movs	r3, #0
    2ae4:	4a0e      	ldr	r2, [pc, #56]	; (2b20 <_usb_ep0_on_setup+0xcc>)
    2ae6:	8013      	strh	r3, [r2, #0]
			udd_ctrl_payload_nb_trans = 0;
    2ae8:	4a0e      	ldr	r2, [pc, #56]	; (2b24 <_usb_ep0_on_setup+0xd0>)
    2aea:	8013      	strh	r3, [r2, #0]
			udd_ep_control_state = UDD_EPCTRL_DATA_IN;
    2aec:	2202      	movs	r2, #2
    2aee:	4b07      	ldr	r3, [pc, #28]	; (2b0c <_usb_ep0_on_setup+0xb8>)
    2af0:	701a      	strb	r2, [r3, #0]
			usb_device_endpoint_read_buffer_job(&usb_device,0,udd_ctrl_buffer,USB_DEVICE_EP_CTRL_SIZE);
    2af2:	2340      	movs	r3, #64	; 0x40
    2af4:	4a08      	ldr	r2, [pc, #32]	; (2b18 <_usb_ep0_on_setup+0xc4>)
    2af6:	2100      	movs	r1, #0
    2af8:	480b      	ldr	r0, [pc, #44]	; (2b28 <_usb_ep0_on_setup+0xd4>)
    2afa:	4c0c      	ldr	r4, [pc, #48]	; (2b2c <_usb_ep0_on_setup+0xd8>)
    2afc:	47a0      	blx	r4
			udd_ctrl_in_sent();
    2afe:	4b0c      	ldr	r3, [pc, #48]	; (2b30 <_usb_ep0_on_setup+0xdc>)
    2b00:	4798      	blx	r3
    2b02:	e7ba      	b.n	2a7a <_usb_ep0_on_setup+0x26>
				udd_ctrl_send_zlp_in();
    2b04:	4b0b      	ldr	r3, [pc, #44]	; (2b34 <_usb_ep0_on_setup+0xe0>)
    2b06:	4798      	blx	r3
				return;
    2b08:	e7b7      	b.n	2a7a <_usb_ep0_on_setup+0x26>
    2b0a:	46c0      	nop			; (mov r8, r8)
    2b0c:	200002aa 	.word	0x200002aa
    2b10:	200005d0 	.word	0x200005d0
    2b14:	00002775 	.word	0x00002775
    2b18:	200005e8 	.word	0x200005e8
    2b1c:	00000d65 	.word	0x00000d65
    2b20:	200002a8 	.word	0x200002a8
    2b24:	200002a6 	.word	0x200002a6
    2b28:	20000468 	.word	0x20000468
    2b2c:	00003901 	.word	0x00003901
    2b30:	000029ad 	.word	0x000029ad
    2b34:	0000291d 	.word	0x0000291d

00002b38 <_usb_on_sof_notify>:
{
    2b38:	b510      	push	{r4, lr}
	udc_sof_notify();
    2b3a:	4b02      	ldr	r3, [pc, #8]	; (2b44 <_usb_on_sof_notify+0xc>)
    2b3c:	4798      	blx	r3
	UDC_SOF_EVENT();
    2b3e:	4b02      	ldr	r3, [pc, #8]	; (2b48 <_usb_on_sof_notify+0x10>)
    2b40:	4798      	blx	r3
}
    2b42:	bd10      	pop	{r4, pc}
    2b44:	00000d21 	.word	0x00000d21
    2b48:	0000012d 	.word	0x0000012d

00002b4c <_usb_on_suspend>:
{
    2b4c:	b510      	push	{r4, lr}
	usb_device_disable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    2b4e:	4c07      	ldr	r4, [pc, #28]	; (2b6c <_usb_on_suspend+0x20>)
    2b50:	2104      	movs	r1, #4
    2b52:	0020      	movs	r0, r4
    2b54:	4b06      	ldr	r3, [pc, #24]	; (2b70 <_usb_on_suspend+0x24>)
    2b56:	4798      	blx	r3
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    2b58:	2102      	movs	r1, #2
    2b5a:	0020      	movs	r0, r4
    2b5c:	4b05      	ldr	r3, [pc, #20]	; (2b74 <_usb_on_suspend+0x28>)
    2b5e:	4798      	blx	r3
	udd_sleep_mode(UDD_STATE_SUSPEND);
    2b60:	2001      	movs	r0, #1
    2b62:	4b05      	ldr	r3, [pc, #20]	; (2b78 <_usb_on_suspend+0x2c>)
    2b64:	4798      	blx	r3
	UDC_SUSPEND_EVENT();
    2b66:	4b05      	ldr	r3, [pc, #20]	; (2b7c <_usb_on_suspend+0x30>)
    2b68:	4798      	blx	r3
}
    2b6a:	bd10      	pop	{r4, pc}
    2b6c:	20000468 	.word	0x20000468
    2b70:	00003341 	.word	0x00003341
    2b74:	00003321 	.word	0x00003321
    2b78:	000024dd 	.word	0x000024dd
    2b7c:	00000115 	.word	0x00000115

00002b80 <udd_ep_abort>:
{
    2b80:	b510      	push	{r4, lr}
    2b82:	0004      	movs	r4, r0
	usb_device_endpoint_abort_job(&usb_device, ep);
    2b84:	0001      	movs	r1, r0
    2b86:	480a      	ldr	r0, [pc, #40]	; (2bb0 <udd_ep_abort+0x30>)
    2b88:	4b0a      	ldr	r3, [pc, #40]	; (2bb4 <udd_ep_abort+0x34>)
    2b8a:	4798      	blx	r3
	ptr_job = udd_ep_get_job(ep);
    2b8c:	0020      	movs	r0, r4
    2b8e:	4b0a      	ldr	r3, [pc, #40]	; (2bb8 <udd_ep_abort+0x38>)
    2b90:	4798      	blx	r3
	if (!ptr_job->busy) {
    2b92:	7c83      	ldrb	r3, [r0, #18]
    2b94:	07db      	lsls	r3, r3, #31
    2b96:	d50a      	bpl.n	2bae <udd_ep_abort+0x2e>
	ptr_job->busy = false;
    2b98:	7c83      	ldrb	r3, [r0, #18]
    2b9a:	2201      	movs	r2, #1
    2b9c:	4393      	bics	r3, r2
    2b9e:	7483      	strb	r3, [r0, #18]
	if (NULL != ptr_job->call_trans) {
    2ba0:	6803      	ldr	r3, [r0, #0]
    2ba2:	2b00      	cmp	r3, #0
    2ba4:	d003      	beq.n	2bae <udd_ep_abort+0x2e>
		ptr_job->call_trans(UDD_EP_TRANSFER_ABORT, ptr_job->nb_trans, ep);
    2ba6:	68c1      	ldr	r1, [r0, #12]
    2ba8:	0022      	movs	r2, r4
    2baa:	2001      	movs	r0, #1
    2bac:	4798      	blx	r3
}
    2bae:	bd10      	pop	{r4, pc}
    2bb0:	20000468 	.word	0x20000468
    2bb4:	000037a1 	.word	0x000037a1
    2bb8:	0000259d 	.word	0x0000259d

00002bbc <udd_is_high_speed>:
}
    2bbc:	2000      	movs	r0, #0
    2bbe:	4770      	bx	lr

00002bc0 <udd_get_frame_number>:
	return ((uint16_t)(module_inst->hw->DEVICE.FNUM.bit.FNUM));
    2bc0:	4b02      	ldr	r3, [pc, #8]	; (2bcc <udd_get_frame_number+0xc>)
    2bc2:	681b      	ldr	r3, [r3, #0]
    2bc4:	8a18      	ldrh	r0, [r3, #16]
    2bc6:	0480      	lsls	r0, r0, #18
    2bc8:	0d40      	lsrs	r0, r0, #21
}
    2bca:	4770      	bx	lr
    2bcc:	20000468 	.word	0x20000468

00002bd0 <udd_get_micro_frame_number>:
	return ((uint16_t)(module_inst->hw->DEVICE.FNUM.reg));
    2bd0:	4b02      	ldr	r3, [pc, #8]	; (2bdc <udd_get_micro_frame_number+0xc>)
    2bd2:	681b      	ldr	r3, [r3, #0]
    2bd4:	8a18      	ldrh	r0, [r3, #16]
    2bd6:	b280      	uxth	r0, r0
}
    2bd8:	4770      	bx	lr
    2bda:	46c0      	nop			; (mov r8, r8)
    2bdc:	20000468 	.word	0x20000468

00002be0 <udd_ep_free>:
{
    2be0:	b570      	push	{r4, r5, r6, lr}
    2be2:	b082      	sub	sp, #8
    2be4:	0004      	movs	r4, r0
	usb_device_endpoint_get_config_defaults(&config_ep);
    2be6:	ad01      	add	r5, sp, #4
    2be8:	0028      	movs	r0, r5
    2bea:	4b0d      	ldr	r3, [pc, #52]	; (2c20 <udd_ep_free+0x40>)
    2bec:	4798      	blx	r3
	udd_ep_abort(ep);
    2bee:	0020      	movs	r0, r4
    2bf0:	4b0c      	ldr	r3, [pc, #48]	; (2c24 <udd_ep_free+0x44>)
    2bf2:	4798      	blx	r3
	config_ep.ep_address = ep;
    2bf4:	702c      	strb	r4, [r5, #0]
	config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_DISABLE;
    2bf6:	2300      	movs	r3, #0
    2bf8:	70eb      	strb	r3, [r5, #3]
	usb_device_endpoint_set_config(&usb_device, &config_ep);
    2bfa:	4e0b      	ldr	r6, [pc, #44]	; (2c28 <udd_ep_free+0x48>)
    2bfc:	0029      	movs	r1, r5
    2bfe:	0030      	movs	r0, r6
    2c00:	4b0a      	ldr	r3, [pc, #40]	; (2c2c <udd_ep_free+0x4c>)
    2c02:	4798      	blx	r3
	usb_device_endpoint_unregister_callback(&usb_device,ep_num,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    2c04:	210f      	movs	r1, #15
    2c06:	4021      	ands	r1, r4
    2c08:	2200      	movs	r2, #0
    2c0a:	0030      	movs	r0, r6
    2c0c:	4b08      	ldr	r3, [pc, #32]	; (2c30 <udd_ep_free+0x50>)
    2c0e:	4798      	blx	r3
	usb_device_endpoint_disable_callback(&usb_device,ep,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    2c10:	2200      	movs	r2, #0
    2c12:	0021      	movs	r1, r4
    2c14:	0030      	movs	r0, r6
    2c16:	4b07      	ldr	r3, [pc, #28]	; (2c34 <udd_ep_free+0x54>)
    2c18:	4798      	blx	r3
}
    2c1a:	b002      	add	sp, #8
    2c1c:	bd70      	pop	{r4, r5, r6, pc}
    2c1e:	46c0      	nop			; (mov r8, r8)
    2c20:	0000354d 	.word	0x0000354d
    2c24:	00002b81 	.word	0x00002b81
    2c28:	20000468 	.word	0x20000468
    2c2c:	0000355d 	.word	0x0000355d
    2c30:	00003385 	.word	0x00003385
    2c34:	0000347d 	.word	0x0000347d

00002c38 <udd_ep_alloc>:
{
    2c38:	b5f0      	push	{r4, r5, r6, r7, lr}
    2c3a:	b083      	sub	sp, #12
    2c3c:	0005      	movs	r5, r0
    2c3e:	000f      	movs	r7, r1
    2c40:	0014      	movs	r4, r2
	usb_device_endpoint_get_config_defaults(&config_ep);
    2c42:	ae01      	add	r6, sp, #4
    2c44:	0030      	movs	r0, r6
    2c46:	4b36      	ldr	r3, [pc, #216]	; (2d20 <udd_ep_alloc+0xe8>)
    2c48:	4798      	blx	r3
	config_ep.ep_address = ep;
    2c4a:	7035      	strb	r5, [r6, #0]
	if(MaxEndpointSize <= 8) {
    2c4c:	2c08      	cmp	r4, #8
    2c4e:	d813      	bhi.n	2c78 <udd_ep_alloc+0x40>
		config_ep.ep_size = USB_ENDPOINT_8_BYTE;
    2c50:	2200      	movs	r2, #0
    2c52:	ab01      	add	r3, sp, #4
    2c54:	705a      	strb	r2, [r3, #1]
	udd_ep_job_t *ptr_job = udd_ep_get_job(ep);
    2c56:	0028      	movs	r0, r5
    2c58:	4b32      	ldr	r3, [pc, #200]	; (2d24 <udd_ep_alloc+0xec>)
    2c5a:	4798      	blx	r3
	ptr_job->ep_size = MaxEndpointSize;
    2c5c:	8204      	strh	r4, [r0, #16]
	bmAttributes = bmAttributes & USB_EP_TYPE_MASK;
    2c5e:	2103      	movs	r1, #3
    2c60:	4039      	ands	r1, r7
	if(USB_EP_TYPE_ISOCHRONOUS == bmAttributes) {
    2c62:	2901      	cmp	r1, #1
    2c64:	d038      	beq.n	2cd8 <udd_ep_alloc+0xa0>
	} else if (USB_EP_TYPE_BULK == bmAttributes) {
    2c66:	2902      	cmp	r1, #2
    2c68:	d043      	beq.n	2cf2 <udd_ep_alloc+0xba>
		return false;
    2c6a:	2300      	movs	r3, #0
	} else if (USB_EP_TYPE_INTERRUPT == bmAttributes) {
    2c6c:	2903      	cmp	r1, #3
    2c6e:	d13d      	bne.n	2cec <udd_ep_alloc+0xb4>
		config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_INTERRUPT;
    2c70:	2204      	movs	r2, #4
    2c72:	ab01      	add	r3, sp, #4
    2c74:	70da      	strb	r2, [r3, #3]
    2c76:	e032      	b.n	2cde <udd_ep_alloc+0xa6>
	} else if(MaxEndpointSize <= 16) {
    2c78:	2c10      	cmp	r4, #16
    2c7a:	d803      	bhi.n	2c84 <udd_ep_alloc+0x4c>
		config_ep.ep_size = USB_ENDPOINT_16_BYTE;
    2c7c:	2201      	movs	r2, #1
    2c7e:	ab01      	add	r3, sp, #4
    2c80:	705a      	strb	r2, [r3, #1]
    2c82:	e7e8      	b.n	2c56 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 32) {
    2c84:	2c20      	cmp	r4, #32
    2c86:	d803      	bhi.n	2c90 <udd_ep_alloc+0x58>
		config_ep.ep_size = USB_ENDPOINT_32_BYTE;
    2c88:	2202      	movs	r2, #2
    2c8a:	ab01      	add	r3, sp, #4
    2c8c:	705a      	strb	r2, [r3, #1]
    2c8e:	e7e2      	b.n	2c56 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 64) {
    2c90:	2c40      	cmp	r4, #64	; 0x40
    2c92:	d803      	bhi.n	2c9c <udd_ep_alloc+0x64>
		config_ep.ep_size = USB_ENDPOINT_64_BYTE;
    2c94:	2203      	movs	r2, #3
    2c96:	ab01      	add	r3, sp, #4
    2c98:	705a      	strb	r2, [r3, #1]
    2c9a:	e7dc      	b.n	2c56 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 128) {
    2c9c:	2c80      	cmp	r4, #128	; 0x80
    2c9e:	d803      	bhi.n	2ca8 <udd_ep_alloc+0x70>
		config_ep.ep_size = USB_ENDPOINT_128_BYTE;
    2ca0:	2204      	movs	r2, #4
    2ca2:	ab01      	add	r3, sp, #4
    2ca4:	705a      	strb	r2, [r3, #1]
    2ca6:	e7d6      	b.n	2c56 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 256) {
    2ca8:	2380      	movs	r3, #128	; 0x80
    2caa:	005b      	lsls	r3, r3, #1
    2cac:	429c      	cmp	r4, r3
    2cae:	d803      	bhi.n	2cb8 <udd_ep_alloc+0x80>
		config_ep.ep_size = USB_ENDPOINT_256_BYTE;
    2cb0:	2205      	movs	r2, #5
    2cb2:	ab01      	add	r3, sp, #4
    2cb4:	705a      	strb	r2, [r3, #1]
    2cb6:	e7ce      	b.n	2c56 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 512) {
    2cb8:	2380      	movs	r3, #128	; 0x80
    2cba:	009b      	lsls	r3, r3, #2
    2cbc:	429c      	cmp	r4, r3
    2cbe:	d803      	bhi.n	2cc8 <udd_ep_alloc+0x90>
		config_ep.ep_size = USB_ENDPOINT_512_BYTE;
    2cc0:	2206      	movs	r2, #6
    2cc2:	ab01      	add	r3, sp, #4
    2cc4:	705a      	strb	r2, [r3, #1]
    2cc6:	e7c6      	b.n	2c56 <udd_ep_alloc+0x1e>
	} else if(MaxEndpointSize <= 1023) {
    2cc8:	4a17      	ldr	r2, [pc, #92]	; (2d28 <udd_ep_alloc+0xf0>)
		return false;
    2cca:	2300      	movs	r3, #0
	} else if(MaxEndpointSize <= 1023) {
    2ccc:	4294      	cmp	r4, r2
    2cce:	d80d      	bhi.n	2cec <udd_ep_alloc+0xb4>
		config_ep.ep_size = USB_ENDPOINT_1023_BYTE;
    2cd0:	2207      	movs	r2, #7
    2cd2:	ab01      	add	r3, sp, #4
    2cd4:	705a      	strb	r2, [r3, #1]
    2cd6:	e7be      	b.n	2c56 <udd_ep_alloc+0x1e>
		config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_ISOCHRONOUS;
    2cd8:	2202      	movs	r2, #2
    2cda:	ab01      	add	r3, sp, #4
    2cdc:	70da      	strb	r2, [r3, #3]
	if (STATUS_OK != usb_device_endpoint_set_config(&usb_device, &config_ep)) {
    2cde:	a901      	add	r1, sp, #4
    2ce0:	4812      	ldr	r0, [pc, #72]	; (2d2c <udd_ep_alloc+0xf4>)
    2ce2:	4b13      	ldr	r3, [pc, #76]	; (2d30 <udd_ep_alloc+0xf8>)
    2ce4:	4798      	blx	r3
		return false;
    2ce6:	2300      	movs	r3, #0
	if (STATUS_OK != usb_device_endpoint_set_config(&usb_device, &config_ep)) {
    2ce8:	2800      	cmp	r0, #0
    2cea:	d006      	beq.n	2cfa <udd_ep_alloc+0xc2>
}
    2cec:	0018      	movs	r0, r3
    2cee:	b003      	add	sp, #12
    2cf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
		config_ep.ep_type = USB_DEVICE_ENDPOINT_TYPE_BULK;
    2cf2:	2203      	movs	r2, #3
    2cf4:	ab01      	add	r3, sp, #4
    2cf6:	70da      	strb	r2, [r3, #3]
    2cf8:	e7f1      	b.n	2cde <udd_ep_alloc+0xa6>
	usb_device_endpoint_register_callback(&usb_device,ep_num,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT,udd_ep_transfer_process);
    2cfa:	210f      	movs	r1, #15
    2cfc:	4029      	ands	r1, r5
    2cfe:	4c0b      	ldr	r4, [pc, #44]	; (2d2c <udd_ep_alloc+0xf4>)
    2d00:	4b0c      	ldr	r3, [pc, #48]	; (2d34 <udd_ep_alloc+0xfc>)
    2d02:	2200      	movs	r2, #0
    2d04:	0020      	movs	r0, r4
    2d06:	4e0c      	ldr	r6, [pc, #48]	; (2d38 <udd_ep_alloc+0x100>)
    2d08:	47b0      	blx	r6
	usb_device_endpoint_enable_callback(&usb_device,ep,USB_DEVICE_ENDPOINT_CALLBACK_TRCPT);
    2d0a:	2200      	movs	r2, #0
    2d0c:	0029      	movs	r1, r5
    2d0e:	0020      	movs	r0, r4
    2d10:	4e0a      	ldr	r6, [pc, #40]	; (2d3c <udd_ep_alloc+0x104>)
    2d12:	47b0      	blx	r6
	usb_device_endpoint_enable_callback(&usb_device,ep,USB_DEVICE_ENDPOINT_CALLBACK_TRFAIL);
    2d14:	2201      	movs	r2, #1
    2d16:	0029      	movs	r1, r5
    2d18:	0020      	movs	r0, r4
    2d1a:	47b0      	blx	r6
	return true;
    2d1c:	2301      	movs	r3, #1
    2d1e:	e7e5      	b.n	2cec <udd_ep_alloc+0xb4>
    2d20:	0000354d 	.word	0x0000354d
    2d24:	0000259d 	.word	0x0000259d
    2d28:	000003ff 	.word	0x000003ff
    2d2c:	20000468 	.word	0x20000468
    2d30:	0000355d 	.word	0x0000355d
    2d34:	000025c1 	.word	0x000025c1
    2d38:	0000335d 	.word	0x0000335d
    2d3c:	000033ad 	.word	0x000033ad

00002d40 <udd_ep_is_halted>:
{
    2d40:	b510      	push	{r4, lr}
    2d42:	0001      	movs	r1, r0
	return usb_device_endpoint_is_halted(&usb_device, ep);
    2d44:	4801      	ldr	r0, [pc, #4]	; (2d4c <udd_ep_is_halted+0xc>)
    2d46:	4b02      	ldr	r3, [pc, #8]	; (2d50 <udd_ep_is_halted+0x10>)
    2d48:	4798      	blx	r3
}
    2d4a:	bd10      	pop	{r4, pc}
    2d4c:	20000468 	.word	0x20000468
    2d50:	000037d7 	.word	0x000037d7

00002d54 <udd_ep_set_halt>:
{
    2d54:	b510      	push	{r4, lr}
    2d56:	0004      	movs	r4, r0
	if (USB_DEVICE_MAX_EP < ep_num) {
    2d58:	230f      	movs	r3, #15
    2d5a:	4003      	ands	r3, r0
		return false;
    2d5c:	2000      	movs	r0, #0
	if (USB_DEVICE_MAX_EP < ep_num) {
    2d5e:	2b03      	cmp	r3, #3
    2d60:	d900      	bls.n	2d64 <udd_ep_set_halt+0x10>
}
    2d62:	bd10      	pop	{r4, pc}
	usb_device_endpoint_set_halt(&usb_device, ep);
    2d64:	0021      	movs	r1, r4
    2d66:	4804      	ldr	r0, [pc, #16]	; (2d78 <udd_ep_set_halt+0x24>)
    2d68:	4b04      	ldr	r3, [pc, #16]	; (2d7c <udd_ep_set_halt+0x28>)
    2d6a:	4798      	blx	r3
	udd_ep_abort(ep);
    2d6c:	0020      	movs	r0, r4
    2d6e:	4b04      	ldr	r3, [pc, #16]	; (2d80 <udd_ep_set_halt+0x2c>)
    2d70:	4798      	blx	r3
	return true;
    2d72:	2001      	movs	r0, #1
    2d74:	e7f5      	b.n	2d62 <udd_ep_set_halt+0xe>
    2d76:	46c0      	nop			; (mov r8, r8)
    2d78:	20000468 	.word	0x20000468
    2d7c:	00003801 	.word	0x00003801
    2d80:	00002b81 	.word	0x00002b81

00002d84 <_usb_ep0_on_tansfer_ok>:
{
    2d84:	b570      	push	{r4, r5, r6, lr}
		if (UDD_EPCTRL_DATA_OUT  == udd_ep_control_state) { /* handshake Out for status stage */
    2d86:	4b34      	ldr	r3, [pc, #208]	; (2e58 <_usb_ep0_on_tansfer_ok+0xd4>)
    2d88:	781b      	ldrb	r3, [r3, #0]
    2d8a:	2b01      	cmp	r3, #1
    2d8c:	d00a      	beq.n	2da4 <_usb_ep0_on_tansfer_ok+0x20>
		} else if (UDD_EPCTRL_DATA_IN == udd_ep_control_state) { /* handshake In for status stage */
    2d8e:	2b02      	cmp	r3, #2
    2d90:	d05f      	beq.n	2e52 <_usb_ep0_on_tansfer_ok+0xce>
			if (NULL != udd_g_ctrlreq.callback) {
    2d92:	4b32      	ldr	r3, [pc, #200]	; (2e5c <_usb_ep0_on_tansfer_ok+0xd8>)
    2d94:	691b      	ldr	r3, [r3, #16]
    2d96:	2b00      	cmp	r3, #0
    2d98:	d000      	beq.n	2d9c <_usb_ep0_on_tansfer_ok+0x18>
				udd_g_ctrlreq.callback();
    2d9a:	4798      	blx	r3
			udd_ep_control_state = UDD_EPCTRL_SETUP;
    2d9c:	2200      	movs	r2, #0
    2d9e:	4b2e      	ldr	r3, [pc, #184]	; (2e58 <_usb_ep0_on_tansfer_ok+0xd4>)
    2da0:	701a      	strb	r2, [r3, #0]
}
    2da2:	bd70      	pop	{r4, r5, r6, pc}
	nb_data = ep_callback_para->received_bytes; /* Read data received during OUT phase */
    2da4:	880d      	ldrh	r5, [r1, #0]
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_nb_trans + nb_data)) {
    2da6:	4b2d      	ldr	r3, [pc, #180]	; (2e5c <_usb_ep0_on_tansfer_ok+0xd8>)
    2da8:	899b      	ldrh	r3, [r3, #12]
    2daa:	4a2d      	ldr	r2, [pc, #180]	; (2e60 <_usb_ep0_on_tansfer_ok+0xdc>)
    2dac:	8814      	ldrh	r4, [r2, #0]
    2dae:	1962      	adds	r2, r4, r5
    2db0:	4293      	cmp	r3, r2
    2db2:	da01      	bge.n	2db8 <_usb_ep0_on_tansfer_ok+0x34>
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_nb_trans;
    2db4:	1b1d      	subs	r5, r3, r4
    2db6:	b2ad      	uxth	r5, r5
	memcpy((uint8_t *) (udd_g_ctrlreq.payload + udd_ctrl_payload_nb_trans), udd_ctrl_buffer, nb_data);
    2db8:	4b28      	ldr	r3, [pc, #160]	; (2e5c <_usb_ep0_on_tansfer_ok+0xd8>)
    2dba:	6898      	ldr	r0, [r3, #8]
    2dbc:	1900      	adds	r0, r0, r4
    2dbe:	002a      	movs	r2, r5
    2dc0:	4928      	ldr	r1, [pc, #160]	; (2e64 <_usb_ep0_on_tansfer_ok+0xe0>)
    2dc2:	4b29      	ldr	r3, [pc, #164]	; (2e68 <_usb_ep0_on_tansfer_ok+0xe4>)
    2dc4:	4798      	blx	r3
	udd_ctrl_payload_nb_trans += nb_data;
    2dc6:	1964      	adds	r4, r4, r5
    2dc8:	b2a4      	uxth	r4, r4
    2dca:	4b25      	ldr	r3, [pc, #148]	; (2e60 <_usb_ep0_on_tansfer_ok+0xdc>)
    2dcc:	801c      	strh	r4, [r3, #0]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data) || \
    2dce:	2d40      	cmp	r5, #64	; 0x40
    2dd0:	d00a      	beq.n	2de8 <_usb_ep0_on_tansfer_ok+0x64>
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_nb_trans;
    2dd2:	4b22      	ldr	r3, [pc, #136]	; (2e5c <_usb_ep0_on_tansfer_ok+0xd8>)
    2dd4:	819c      	strh	r4, [r3, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
    2dd6:	695b      	ldr	r3, [r3, #20]
    2dd8:	2b00      	cmp	r3, #0
    2dda:	d002      	beq.n	2de2 <_usb_ep0_on_tansfer_ok+0x5e>
			if (!udd_g_ctrlreq.over_under_run()) {
    2ddc:	4798      	blx	r3
    2dde:	2800      	cmp	r0, #0
    2de0:	d014      	beq.n	2e0c <_usb_ep0_on_tansfer_ok+0x88>
		udd_ctrl_send_zlp_in();
    2de2:	4b22      	ldr	r3, [pc, #136]	; (2e6c <_usb_ep0_on_tansfer_ok+0xe8>)
    2de4:	4798      	blx	r3
    2de6:	e7dc      	b.n	2da2 <_usb_ep0_on_tansfer_ok+0x1e>
	(udd_g_ctrlreq.req.wLength <= (udd_ctrl_prev_payload_nb_trans + udd_ctrl_payload_nb_trans))) {
    2de8:	4b1c      	ldr	r3, [pc, #112]	; (2e5c <_usb_ep0_on_tansfer_ok+0xd8>)
    2dea:	88da      	ldrh	r2, [r3, #6]
    2dec:	4b20      	ldr	r3, [pc, #128]	; (2e70 <_usb_ep0_on_tansfer_ok+0xec>)
    2dee:	881b      	ldrh	r3, [r3, #0]
    2df0:	191b      	adds	r3, r3, r4
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data) || \
    2df2:	429a      	cmp	r2, r3
    2df4:	dded      	ble.n	2dd2 <_usb_ep0_on_tansfer_ok+0x4e>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_nb_trans) {
    2df6:	4b19      	ldr	r3, [pc, #100]	; (2e5c <_usb_ep0_on_tansfer_ok+0xd8>)
    2df8:	899b      	ldrh	r3, [r3, #12]
    2dfa:	42a3      	cmp	r3, r4
    2dfc:	d00c      	beq.n	2e18 <_usb_ep0_on_tansfer_ok+0x94>
	usb_device_endpoint_read_buffer_job(&usb_device,0,udd_ctrl_buffer,USB_DEVICE_EP_CTRL_SIZE);
    2dfe:	2340      	movs	r3, #64	; 0x40
    2e00:	4a18      	ldr	r2, [pc, #96]	; (2e64 <_usb_ep0_on_tansfer_ok+0xe0>)
    2e02:	2100      	movs	r1, #0
    2e04:	481b      	ldr	r0, [pc, #108]	; (2e74 <_usb_ep0_on_tansfer_ok+0xf0>)
    2e06:	4c1c      	ldr	r4, [pc, #112]	; (2e78 <_usb_ep0_on_tansfer_ok+0xf4>)
    2e08:	47a0      	blx	r4
    2e0a:	e7ca      	b.n	2da2 <_usb_ep0_on_tansfer_ok+0x1e>
				udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    2e0c:	2205      	movs	r2, #5
    2e0e:	4b12      	ldr	r3, [pc, #72]	; (2e58 <_usb_ep0_on_tansfer_ok+0xd4>)
    2e10:	701a      	strb	r2, [r3, #0]
				udd_ep_set_halt(0);
    2e12:	4b1a      	ldr	r3, [pc, #104]	; (2e7c <_usb_ep0_on_tansfer_ok+0xf8>)
    2e14:	4798      	blx	r3
    2e16:	e7c4      	b.n	2da2 <_usb_ep0_on_tansfer_ok+0x1e>
		if (!udd_g_ctrlreq.over_under_run) {
    2e18:	4b10      	ldr	r3, [pc, #64]	; (2e5c <_usb_ep0_on_tansfer_ok+0xd8>)
    2e1a:	695b      	ldr	r3, [r3, #20]
    2e1c:	2b00      	cmp	r3, #0
    2e1e:	d00b      	beq.n	2e38 <_usb_ep0_on_tansfer_ok+0xb4>
		if (!udd_g_ctrlreq.over_under_run()) {
    2e20:	4798      	blx	r3
    2e22:	2800      	cmp	r0, #0
    2e24:	d00f      	beq.n	2e46 <_usb_ep0_on_tansfer_ok+0xc2>
		udd_ctrl_prev_payload_nb_trans += udd_ctrl_payload_nb_trans;
    2e26:	4912      	ldr	r1, [pc, #72]	; (2e70 <_usb_ep0_on_tansfer_ok+0xec>)
    2e28:	4a0d      	ldr	r2, [pc, #52]	; (2e60 <_usb_ep0_on_tansfer_ok+0xdc>)
    2e2a:	880b      	ldrh	r3, [r1, #0]
    2e2c:	8810      	ldrh	r0, [r2, #0]
    2e2e:	181b      	adds	r3, r3, r0
    2e30:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_nb_trans = 0;
    2e32:	2300      	movs	r3, #0
    2e34:	8013      	strh	r3, [r2, #0]
    2e36:	e7e2      	b.n	2dfe <_usb_ep0_on_tansfer_ok+0x7a>
			udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    2e38:	2205      	movs	r2, #5
    2e3a:	4b07      	ldr	r3, [pc, #28]	; (2e58 <_usb_ep0_on_tansfer_ok+0xd4>)
    2e3c:	701a      	strb	r2, [r3, #0]
			udd_ep_set_halt(0);
    2e3e:	2000      	movs	r0, #0
    2e40:	4b0e      	ldr	r3, [pc, #56]	; (2e7c <_usb_ep0_on_tansfer_ok+0xf8>)
    2e42:	4798      	blx	r3
    2e44:	e7ad      	b.n	2da2 <_usb_ep0_on_tansfer_ok+0x1e>
			udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
    2e46:	2205      	movs	r2, #5
    2e48:	4b03      	ldr	r3, [pc, #12]	; (2e58 <_usb_ep0_on_tansfer_ok+0xd4>)
    2e4a:	701a      	strb	r2, [r3, #0]
			udd_ep_set_halt(0);
    2e4c:	4b0b      	ldr	r3, [pc, #44]	; (2e7c <_usb_ep0_on_tansfer_ok+0xf8>)
    2e4e:	4798      	blx	r3
    2e50:	e7a7      	b.n	2da2 <_usb_ep0_on_tansfer_ok+0x1e>
			udd_ctrl_in_sent();
    2e52:	4b0b      	ldr	r3, [pc, #44]	; (2e80 <_usb_ep0_on_tansfer_ok+0xfc>)
    2e54:	4798      	blx	r3
    2e56:	e7a4      	b.n	2da2 <_usb_ep0_on_tansfer_ok+0x1e>
    2e58:	200002aa 	.word	0x200002aa
    2e5c:	200005d0 	.word	0x200005d0
    2e60:	200002a6 	.word	0x200002a6
    2e64:	200005e8 	.word	0x200005e8
    2e68:	000049dd 	.word	0x000049dd
    2e6c:	0000291d 	.word	0x0000291d
    2e70:	200002a8 	.word	0x200002a8
    2e74:	20000468 	.word	0x20000468
    2e78:	00003901 	.word	0x00003901
    2e7c:	00002d55 	.word	0x00002d55
    2e80:	000029ad 	.word	0x000029ad

00002e84 <udd_ep_clear_halt>:
{
    2e84:	b570      	push	{r4, r5, r6, lr}
    2e86:	0004      	movs	r4, r0
	if (USB_DEVICE_MAX_EP < ep_num) {
    2e88:	230f      	movs	r3, #15
    2e8a:	4003      	ands	r3, r0
		return false;
    2e8c:	2000      	movs	r0, #0
	if (USB_DEVICE_MAX_EP < ep_num) {
    2e8e:	2b03      	cmp	r3, #3
    2e90:	d900      	bls.n	2e94 <udd_ep_clear_halt+0x10>
}
    2e92:	bd70      	pop	{r4, r5, r6, pc}
	ptr_job = udd_ep_get_job(ep);
    2e94:	0020      	movs	r0, r4
    2e96:	4b09      	ldr	r3, [pc, #36]	; (2ebc <udd_ep_clear_halt+0x38>)
    2e98:	4798      	blx	r3
    2e9a:	0005      	movs	r5, r0
	usb_device_endpoint_clear_halt(&usb_device, ep);
    2e9c:	0021      	movs	r1, r4
    2e9e:	4808      	ldr	r0, [pc, #32]	; (2ec0 <udd_ep_clear_halt+0x3c>)
    2ea0:	4b08      	ldr	r3, [pc, #32]	; (2ec4 <udd_ep_clear_halt+0x40>)
    2ea2:	4798      	blx	r3
	if (ptr_job->busy == true) {
    2ea4:	7cab      	ldrb	r3, [r5, #18]
	return true;
    2ea6:	2001      	movs	r0, #1
	if (ptr_job->busy == true) {
    2ea8:	07db      	lsls	r3, r3, #31
    2eaa:	d5f2      	bpl.n	2e92 <udd_ep_clear_halt+0xe>
		ptr_job->busy = false;
    2eac:	7cab      	ldrb	r3, [r5, #18]
    2eae:	2201      	movs	r2, #1
    2eb0:	4393      	bics	r3, r2
    2eb2:	74ab      	strb	r3, [r5, #18]
		ptr_job->call_nohalt();
    2eb4:	682b      	ldr	r3, [r5, #0]
    2eb6:	4798      	blx	r3
	return true;
    2eb8:	2001      	movs	r0, #1
    2eba:	e7ea      	b.n	2e92 <udd_ep_clear_halt+0xe>
    2ebc:	0000259d 	.word	0x0000259d
    2ec0:	20000468 	.word	0x20000468
    2ec4:	00003827 	.word	0x00003827

00002ec8 <udd_ep_run>:
{
    2ec8:	b5f0      	push	{r4, r5, r6, r7, lr}
    2eca:	b087      	sub	sp, #28
    2ecc:	0005      	movs	r5, r0
    2ece:	9103      	str	r1, [sp, #12]
    2ed0:	9202      	str	r2, [sp, #8]
    2ed2:	9301      	str	r3, [sp, #4]
	ep_num = ep & USB_EP_ADDR_MASK;
    2ed4:	260f      	movs	r6, #15
    2ed6:	4006      	ands	r6, r0
		return false;
    2ed8:	2400      	movs	r4, #0
	if ((USB_DEVICE_MAX_EP < ep_num) || (udd_ep_is_halted(ep))) {
    2eda:	2e03      	cmp	r6, #3
    2edc:	d902      	bls.n	2ee4 <udd_ep_run+0x1c>
}
    2ede:	0020      	movs	r0, r4
    2ee0:	b007      	add	sp, #28
    2ee2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if ((USB_DEVICE_MAX_EP < ep_num) || (udd_ep_is_halted(ep))) {
    2ee4:	4b64      	ldr	r3, [pc, #400]	; (3078 <udd_ep_run+0x1b0>)
    2ee6:	4798      	blx	r3
    2ee8:	1e04      	subs	r4, r0, #0
    2eea:	d000      	beq.n	2eee <udd_ep_run+0x26>
    2eec:	e0bd      	b.n	306a <udd_ep_run+0x1a2>
	ptr_job = udd_ep_get_job(ep);
    2eee:	0028      	movs	r0, r5
    2ef0:	4b62      	ldr	r3, [pc, #392]	; (307c <udd_ep_run+0x1b4>)
    2ef2:	4798      	blx	r3
    2ef4:	0007      	movs	r7, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    2ef6:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    2efa:	425a      	negs	r2, r3
    2efc:	4153      	adcs	r3, r2
    2efe:	9305      	str	r3, [sp, #20]
  __ASM volatile ("cpsid i" : : : "memory");
    2f00:	b672      	cpsid	i
    2f02:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    2f06:	2200      	movs	r2, #0
    2f08:	4b5d      	ldr	r3, [pc, #372]	; (3080 <udd_ep_run+0x1b8>)
    2f0a:	701a      	strb	r2, [r3, #0]
	return flags;
    2f0c:	9a05      	ldr	r2, [sp, #20]
	if (ptr_job->busy == true) {
    2f0e:	7c83      	ldrb	r3, [r0, #18]
    2f10:	07db      	lsls	r3, r3, #31
    2f12:	d508      	bpl.n	2f26 <udd_ep_run+0x5e>
	if (cpu_irq_is_enabled_flags(flags))
    2f14:	2a00      	cmp	r2, #0
    2f16:	d0e2      	beq.n	2ede <udd_ep_run+0x16>
		cpu_irq_enable();
    2f18:	2201      	movs	r2, #1
    2f1a:	4b59      	ldr	r3, [pc, #356]	; (3080 <udd_ep_run+0x1b8>)
    2f1c:	701a      	strb	r2, [r3, #0]
    2f1e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    2f22:	b662      	cpsie	i
    2f24:	e7db      	b.n	2ede <udd_ep_run+0x16>
	ptr_job->busy = true;
    2f26:	7c83      	ldrb	r3, [r0, #18]
    2f28:	2101      	movs	r1, #1
    2f2a:	430b      	orrs	r3, r1
    2f2c:	7483      	strb	r3, [r0, #18]
	if (cpu_irq_is_enabled_flags(flags))
    2f2e:	2a00      	cmp	r2, #0
    2f30:	d005      	beq.n	2f3e <udd_ep_run+0x76>
		cpu_irq_enable();
    2f32:	2201      	movs	r2, #1
    2f34:	4b52      	ldr	r3, [pc, #328]	; (3080 <udd_ep_run+0x1b8>)
    2f36:	701a      	strb	r2, [r3, #0]
    2f38:	f3bf 8f5f 	dmb	sy
    2f3c:	b662      	cpsie	i
	ptr_job->buf = buf;
    2f3e:	9b02      	ldr	r3, [sp, #8]
    2f40:	607b      	str	r3, [r7, #4]
	ptr_job->buf_size = buf_size;
    2f42:	9b01      	ldr	r3, [sp, #4]
    2f44:	60bb      	str	r3, [r7, #8]
	ptr_job->nb_trans = 0;
    2f46:	2300      	movs	r3, #0
    2f48:	60fb      	str	r3, [r7, #12]
	ptr_job->call_trans = callback;
    2f4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2f4c:	603b      	str	r3, [r7, #0]
	ptr_job->b_shortpacket = b_shortpacket;
    2f4e:	2301      	movs	r3, #1
    2f50:	9a03      	ldr	r2, [sp, #12]
    2f52:	4013      	ands	r3, r2
    2f54:	005a      	lsls	r2, r3, #1
    2f56:	7cbb      	ldrb	r3, [r7, #18]
    2f58:	2102      	movs	r1, #2
    2f5a:	438b      	bics	r3, r1
	ptr_job->b_use_out_cache_buffer = false;
    2f5c:	4313      	orrs	r3, r2
    2f5e:	2204      	movs	r2, #4
    2f60:	4393      	bics	r3, r2
    2f62:	74bb      	strb	r3, [r7, #18]
	if (ep & USB_EP_DIR_IN) {
    2f64:	b26b      	sxtb	r3, r5
    2f66:	2b00      	cmp	r3, #0
    2f68:	db20      	blt.n	2fac <udd_ep_run+0xe4>
		if (0 != ptr_job->buf_size) {
    2f6a:	9b01      	ldr	r3, [sp, #4]
    2f6c:	2b00      	cmp	r3, #0
    2f6e:	d06f      	beq.n	3050 <udd_ep_run+0x188>
			next_trans = ptr_job->buf_size;
    2f70:	b29c      	uxth	r4, r3
			if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    2f72:	4b44      	ldr	r3, [pc, #272]	; (3084 <udd_ep_run+0x1bc>)
    2f74:	429c      	cmp	r4, r3
    2f76:	d95a      	bls.n	302e <udd_ep_run+0x166>
						(UDD_ENDPOINT_MAX_TRANS % ptr_job->ep_size);
    2f78:	8a39      	ldrh	r1, [r7, #16]
    2f7a:	001c      	movs	r4, r3
    2f7c:	0018      	movs	r0, r3
    2f7e:	4b42      	ldr	r3, [pc, #264]	; (3088 <udd_ep_run+0x1c0>)
    2f80:	4798      	blx	r3
				next_trans = UDD_ENDPOINT_MAX_TRANS -
    2f82:	1a63      	subs	r3, r4, r1
    2f84:	b29a      	uxth	r2, r3
			if (next_trans < ptr_job->ep_size) {
    2f86:	8a3b      	ldrh	r3, [r7, #16]
    2f88:	429a      	cmp	r2, r3
    2f8a:	d257      	bcs.n	303c <udd_ep_run+0x174>
				ptr_job->b_use_out_cache_buffer = true;
    2f8c:	7cba      	ldrb	r2, [r7, #18]
    2f8e:	2104      	movs	r1, #4
    2f90:	430a      	orrs	r2, r1
    2f92:	74ba      	strb	r2, [r7, #18]
								udd_ep_out_cache_buffer[ep_num - 1],
    2f94:	1e72      	subs	r2, r6, #1
    2f96:	0192      	lsls	r2, r2, #6
    2f98:	493c      	ldr	r1, [pc, #240]	; (308c <udd_ep_run+0x1c4>)
    2f9a:	1852      	adds	r2, r2, r1
						usb_device_endpoint_read_buffer_job(&usb_device, ep_num,
    2f9c:	0031      	movs	r1, r6
    2f9e:	483c      	ldr	r0, [pc, #240]	; (3090 <udd_ep_run+0x1c8>)
    2fa0:	4c3c      	ldr	r4, [pc, #240]	; (3094 <udd_ep_run+0x1cc>)
    2fa2:	47a0      	blx	r4
				return (STATUS_OK ==
    2fa4:	4244      	negs	r4, r0
    2fa6:	4144      	adcs	r4, r0
    2fa8:	b2e4      	uxtb	r4, r4
    2faa:	e798      	b.n	2ede <udd_ep_run+0x16>
		if (0 != ptr_job->buf_size) {
    2fac:	9b01      	ldr	r3, [sp, #4]
    2fae:	2b00      	cmp	r3, #0
    2fb0:	d027      	beq.n	3002 <udd_ep_run+0x13a>
			next_trans = ptr_job->buf_size;
    2fb2:	b29d      	uxth	r5, r3
			if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
    2fb4:	4b33      	ldr	r3, [pc, #204]	; (3084 <udd_ep_run+0x1bc>)
    2fb6:	429d      	cmp	r5, r3
    2fb8:	d906      	bls.n	2fc8 <udd_ep_run+0x100>
						(UDD_ENDPOINT_MAX_TRANS % ptr_job->ep_size);
    2fba:	8a39      	ldrh	r1, [r7, #16]
    2fbc:	001d      	movs	r5, r3
    2fbe:	0018      	movs	r0, r3
    2fc0:	4b31      	ldr	r3, [pc, #196]	; (3088 <udd_ep_run+0x1c0>)
    2fc2:	4798      	blx	r3
				next_trans = UDD_ENDPOINT_MAX_TRANS -
    2fc4:	1a6b      	subs	r3, r5, r1
    2fc6:	b29d      	uxth	r5, r3
			ptr_job->b_shortpacket = ptr_job->b_shortpacket &&
    2fc8:	7cbb      	ldrb	r3, [r7, #18]
    2fca:	079b      	lsls	r3, r3, #30
    2fcc:	d507      	bpl.n	2fde <udd_ep_run+0x116>
					(0 == (next_trans % ptr_job->ep_size));
    2fce:	8a39      	ldrh	r1, [r7, #16]
    2fd0:	0028      	movs	r0, r5
    2fd2:	4b31      	ldr	r3, [pc, #196]	; (3098 <udd_ep_run+0x1d0>)
    2fd4:	4798      	blx	r3
			ptr_job->b_shortpacket = ptr_job->b_shortpacket &&
    2fd6:	b289      	uxth	r1, r1
    2fd8:	424c      	negs	r4, r1
    2fda:	414c      	adcs	r4, r1
    2fdc:	b2e4      	uxtb	r4, r4
    2fde:	2001      	movs	r0, #1
    2fe0:	4020      	ands	r0, r4
    2fe2:	0040      	lsls	r0, r0, #1
    2fe4:	7cbc      	ldrb	r4, [r7, #18]
    2fe6:	2302      	movs	r3, #2
    2fe8:	439c      	bics	r4, r3
    2fea:	4304      	orrs	r4, r0
    2fec:	74bc      	strb	r4, [r7, #18]
				usb_device_endpoint_write_buffer_job(&usb_device,
    2fee:	002b      	movs	r3, r5
    2ff0:	9a02      	ldr	r2, [sp, #8]
    2ff2:	0031      	movs	r1, r6
    2ff4:	4826      	ldr	r0, [pc, #152]	; (3090 <udd_ep_run+0x1c8>)
    2ff6:	4c29      	ldr	r4, [pc, #164]	; (309c <udd_ep_run+0x1d4>)
    2ff8:	47a0      	blx	r4
		return (STATUS_OK ==
    2ffa:	4244      	negs	r4, r0
    2ffc:	4144      	adcs	r4, r0
    2ffe:	b2e4      	uxtb	r4, r4
    3000:	e76d      	b.n	2ede <udd_ep_run+0x16>
		} else if (true == ptr_job->b_shortpacket) {
    3002:	7cbb      	ldrb	r3, [r7, #18]
    3004:	079b      	lsls	r3, r3, #30
    3006:	d505      	bpl.n	3014 <udd_ep_run+0x14c>
			ptr_job->b_shortpacket = false; /* avoid to send zero length packet again */
    3008:	7cbb      	ldrb	r3, [r7, #18]
    300a:	2202      	movs	r2, #2
    300c:	4393      	bics	r3, r2
    300e:	74bb      	strb	r3, [r7, #18]
			next_trans = 0;
    3010:	2500      	movs	r5, #0
    3012:	e7ec      	b.n	2fee <udd_ep_run+0x126>
			ptr_job->busy = false;
    3014:	7cbb      	ldrb	r3, [r7, #18]
    3016:	2201      	movs	r2, #1
    3018:	4393      	bics	r3, r2
    301a:	74bb      	strb	r3, [r7, #18]
			if (NULL != ptr_job->call_trans) {
    301c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    301e:	2b00      	cmp	r3, #0
    3020:	d025      	beq.n	306e <udd_ep_run+0x1a6>
				ptr_job->call_trans(UDD_EP_TRANSFER_OK, 0, ep);
    3022:	002a      	movs	r2, r5
    3024:	2100      	movs	r1, #0
    3026:	2000      	movs	r0, #0
    3028:	4798      	blx	r3
			return true;
    302a:	2401      	movs	r4, #1
    302c:	e757      	b.n	2ede <udd_ep_run+0x16>
				next_trans -= next_trans % ptr_job->ep_size;
    302e:	8a39      	ldrh	r1, [r7, #16]
    3030:	0020      	movs	r0, r4
    3032:	4b19      	ldr	r3, [pc, #100]	; (3098 <udd_ep_run+0x1d0>)
    3034:	4798      	blx	r3
    3036:	1a63      	subs	r3, r4, r1
    3038:	b29a      	uxth	r2, r3
    303a:	e7a4      	b.n	2f86 <udd_ep_run+0xbe>
						usb_device_endpoint_read_buffer_job(&usb_device, ep_num,
    303c:	0013      	movs	r3, r2
    303e:	9a02      	ldr	r2, [sp, #8]
    3040:	0031      	movs	r1, r6
    3042:	4813      	ldr	r0, [pc, #76]	; (3090 <udd_ep_run+0x1c8>)
    3044:	4c13      	ldr	r4, [pc, #76]	; (3094 <udd_ep_run+0x1cc>)
    3046:	47a0      	blx	r4
				return (STATUS_OK ==
    3048:	4244      	negs	r4, r0
    304a:	4144      	adcs	r4, r0
    304c:	b2e4      	uxtb	r4, r4
    304e:	e746      	b.n	2ede <udd_ep_run+0x16>
			ptr_job->busy = false;
    3050:	7cbb      	ldrb	r3, [r7, #18]
    3052:	2201      	movs	r2, #1
    3054:	4393      	bics	r3, r2
    3056:	74bb      	strb	r3, [r7, #18]
			if (NULL != ptr_job->call_trans) {
    3058:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    305a:	2b00      	cmp	r3, #0
    305c:	d009      	beq.n	3072 <udd_ep_run+0x1aa>
				ptr_job->call_trans(UDD_EP_TRANSFER_OK, 0, ep);
    305e:	002a      	movs	r2, r5
    3060:	2100      	movs	r1, #0
    3062:	2000      	movs	r0, #0
    3064:	4798      	blx	r3
			return true;
    3066:	2401      	movs	r4, #1
    3068:	e739      	b.n	2ede <udd_ep_run+0x16>
		return false;
    306a:	2400      	movs	r4, #0
    306c:	e737      	b.n	2ede <udd_ep_run+0x16>
			return true;
    306e:	2401      	movs	r4, #1
    3070:	e735      	b.n	2ede <udd_ep_run+0x16>
			return true;
    3072:	2401      	movs	r4, #1
    3074:	e733      	b.n	2ede <udd_ep_run+0x16>
    3076:	46c0      	nop			; (mov r8, r8)
    3078:	00002d41 	.word	0x00002d41
    307c:	0000259d 	.word	0x0000259d
    3080:	200000e8 	.word	0x200000e8
    3084:	00001fff 	.word	0x00001fff
    3088:	000048f5 	.word	0x000048f5
    308c:	200003a8 	.word	0x200003a8
    3090:	20000468 	.word	0x20000468
    3094:	00003901 	.word	0x00003901
    3098:	00004721 	.word	0x00004721
    309c:	000038ad 	.word	0x000038ad

000030a0 <udd_set_address>:
	module_inst->hw->DEVICE.DADD.reg = USB_DEVICE_DADD_ADDEN | address;
    30a0:	4b02      	ldr	r3, [pc, #8]	; (30ac <udd_set_address+0xc>)
    30a2:	681b      	ldr	r3, [r3, #0]
    30a4:	2280      	movs	r2, #128	; 0x80
    30a6:	4310      	orrs	r0, r2
    30a8:	7298      	strb	r0, [r3, #10]
}
    30aa:	4770      	bx	lr
    30ac:	20000468 	.word	0x20000468

000030b0 <udd_getaddress>:
	return ((uint8_t)(module_inst->hw->DEVICE.DADD.bit.DADD));
    30b0:	4b02      	ldr	r3, [pc, #8]	; (30bc <udd_getaddress+0xc>)
    30b2:	681b      	ldr	r3, [r3, #0]
    30b4:	7a98      	ldrb	r0, [r3, #10]
    30b6:	0640      	lsls	r0, r0, #25
    30b8:	0e40      	lsrs	r0, r0, #25
}
    30ba:	4770      	bx	lr
    30bc:	20000468 	.word	0x20000468

000030c0 <udd_send_remotewakeup>:
{
    30c0:	b510      	push	{r4, lr}
		if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    30c2:	4b12      	ldr	r3, [pc, #72]	; (310c <udd_send_remotewakeup+0x4c>)
    30c4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    30c6:	069b      	lsls	r3, r3, #26
    30c8:	d41a      	bmi.n	3100 <udd_send_remotewakeup+0x40>
			while((SYSCTRL->PCLKSR.reg & DFLL_READY_FLAG) != DFLL_READY_FLAG);
    30ca:	4910      	ldr	r1, [pc, #64]	; (310c <udd_send_remotewakeup+0x4c>)
    30cc:	22d0      	movs	r2, #208	; 0xd0
    30ce:	68cb      	ldr	r3, [r1, #12]
    30d0:	4013      	ands	r3, r2
    30d2:	2bd0      	cmp	r3, #208	; 0xd0
    30d4:	d1fb      	bne.n	30ce <udd_send_remotewakeup+0xe>
	udd_sleep_mode(UDD_STATE_IDLE);
    30d6:	2003      	movs	r0, #3
    30d8:	4b0d      	ldr	r3, [pc, #52]	; (3110 <udd_send_remotewakeup+0x50>)
    30da:	4798      	blx	r3
	return module_inst->hw->DEVICE.FSMSTATUS.reg;
    30dc:	4b0d      	ldr	r3, [pc, #52]	; (3114 <udd_send_remotewakeup+0x54>)
    30de:	681a      	ldr	r2, [r3, #0]
    30e0:	7b53      	ldrb	r3, [r2, #13]
	while(2 != usb_get_state_machine_status(&usb_device) && try --) {
    30e2:	2b02      	cmp	r3, #2
    30e4:	d00b      	beq.n	30fe <udd_send_remotewakeup+0x3e>
    30e6:	2105      	movs	r1, #5
	module_inst->hw->DEVICE.CTRLB.reg |= USB_DEVICE_CTRLB_UPRSM;
    30e8:	2002      	movs	r0, #2
    30ea:	8913      	ldrh	r3, [r2, #8]
    30ec:	4303      	orrs	r3, r0
    30ee:	b29b      	uxth	r3, r3
    30f0:	8113      	strh	r3, [r2, #8]
	return module_inst->hw->DEVICE.FSMSTATUS.reg;
    30f2:	7b53      	ldrb	r3, [r2, #13]
    30f4:	2b02      	cmp	r3, #2
    30f6:	d002      	beq.n	30fe <udd_send_remotewakeup+0x3e>
    30f8:	3901      	subs	r1, #1
    30fa:	2900      	cmp	r1, #0
    30fc:	d1f5      	bne.n	30ea <udd_send_remotewakeup+0x2a>
}
    30fe:	bd10      	pop	{r4, pc}
			while((SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY);
    3100:	4902      	ldr	r1, [pc, #8]	; (310c <udd_send_remotewakeup+0x4c>)
    3102:	2210      	movs	r2, #16
    3104:	68cb      	ldr	r3, [r1, #12]
    3106:	421a      	tst	r2, r3
    3108:	d0fc      	beq.n	3104 <udd_send_remotewakeup+0x44>
    310a:	e7e4      	b.n	30d6 <udd_send_remotewakeup+0x16>
    310c:	40000800 	.word	0x40000800
    3110:	000024dd 	.word	0x000024dd
    3114:	20000468 	.word	0x20000468

00003118 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
    3118:	4b01      	ldr	r3, [pc, #4]	; (3120 <udd_set_setup_payload+0x8>)
    311a:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
    311c:	8199      	strh	r1, [r3, #12]
}
    311e:	4770      	bx	lr
    3120:	200005d0 	.word	0x200005d0

00003124 <udd_detach>:

void udd_detach(void)
{
    3124:	b510      	push	{r4, lr}
	module_inst->hw->DEVICE.CTRLB.reg |= USB_DEVICE_CTRLB_DETACH;
    3126:	4b05      	ldr	r3, [pc, #20]	; (313c <udd_detach+0x18>)
    3128:	681a      	ldr	r2, [r3, #0]
    312a:	8913      	ldrh	r3, [r2, #8]
    312c:	2101      	movs	r1, #1
    312e:	430b      	orrs	r3, r1
    3130:	8113      	strh	r3, [r2, #8]
	usb_device_detach(&usb_device);
	udd_sleep_mode(UDD_STATE_SUSPEND);
    3132:	2001      	movs	r0, #1
    3134:	4b02      	ldr	r3, [pc, #8]	; (3140 <udd_detach+0x1c>)
    3136:	4798      	blx	r3
}
    3138:	bd10      	pop	{r4, pc}
    313a:	46c0      	nop			; (mov r8, r8)
    313c:	20000468 	.word	0x20000468
    3140:	000024dd 	.word	0x000024dd

00003144 <udd_attach>:

void udd_attach(void)
{
    3144:	b570      	push	{r4, r5, r6, lr}
	udd_sleep_mode(UDD_STATE_IDLE);
    3146:	2003      	movs	r0, #3
    3148:	4b16      	ldr	r3, [pc, #88]	; (31a4 <udd_attach+0x60>)
    314a:	4798      	blx	r3
	module_inst->hw->DEVICE.CTRLB.reg &= ~USB_DEVICE_CTRLB_DETACH;
    314c:	4c16      	ldr	r4, [pc, #88]	; (31a8 <udd_attach+0x64>)
    314e:	6822      	ldr	r2, [r4, #0]
    3150:	8913      	ldrh	r3, [r2, #8]
    3152:	2101      	movs	r1, #1
    3154:	438b      	bics	r3, r1
    3156:	8113      	strh	r3, [r2, #8]
	usb_device_attach(&usb_device);

	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND, _usb_on_suspend);
    3158:	4a14      	ldr	r2, [pc, #80]	; (31ac <udd_attach+0x68>)
    315a:	3103      	adds	r1, #3
    315c:	0020      	movs	r0, r4
    315e:	4e14      	ldr	r6, [pc, #80]	; (31b0 <udd_attach+0x6c>)
    3160:	47b0      	blx	r6
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_SOF, _usb_on_sof_notify);
    3162:	4a14      	ldr	r2, [pc, #80]	; (31b4 <udd_attach+0x70>)
    3164:	2100      	movs	r1, #0
    3166:	0020      	movs	r0, r4
    3168:	47b0      	blx	r6
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_RESET, _usb_on_bus_reset);
    316a:	4a13      	ldr	r2, [pc, #76]	; (31b8 <udd_attach+0x74>)
    316c:	2101      	movs	r1, #1
    316e:	0020      	movs	r0, r4
    3170:	47b0      	blx	r6
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP, _usb_on_wakeup);
    3172:	4a12      	ldr	r2, [pc, #72]	; (31bc <udd_attach+0x78>)
    3174:	2102      	movs	r1, #2
    3176:	0020      	movs	r0, r4
    3178:	47b0      	blx	r6

	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_SUSPEND);
    317a:	2104      	movs	r1, #4
    317c:	0020      	movs	r0, r4
    317e:	4d10      	ldr	r5, [pc, #64]	; (31c0 <udd_attach+0x7c>)
    3180:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_SOF);
    3182:	2100      	movs	r1, #0
    3184:	0020      	movs	r0, r4
    3186:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_RESET);
    3188:	2101      	movs	r1, #1
    318a:	0020      	movs	r0, r4
    318c:	47a8      	blx	r5
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_WAKEUP);
    318e:	2102      	movs	r1, #2
    3190:	0020      	movs	r0, r4
    3192:	47a8      	blx	r5
#ifdef  USB_DEVICE_LPM_SUPPORT
	usb_device_register_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP, _usb_device_lpm_suspend);
    3194:	4a0b      	ldr	r2, [pc, #44]	; (31c4 <udd_attach+0x80>)
    3196:	2106      	movs	r1, #6
    3198:	0020      	movs	r0, r4
    319a:	47b0      	blx	r6
	usb_device_enable_callback(&usb_device, USB_DEVICE_CALLBACK_LPMSUSP);
    319c:	2106      	movs	r1, #6
    319e:	0020      	movs	r0, r4
    31a0:	47a8      	blx	r5
#endif
}
    31a2:	bd70      	pop	{r4, r5, r6, pc}
    31a4:	000024dd 	.word	0x000024dd
    31a8:	20000468 	.word	0x20000468
    31ac:	00002b4d 	.word	0x00002b4d
    31b0:	000032fd 	.word	0x000032fd
    31b4:	00002b39 	.word	0x00002b39
    31b8:	0000286d 	.word	0x0000286d
    31bc:	000027fd 	.word	0x000027fd
    31c0:	00003321 	.word	0x00003321
    31c4:	000027a1 	.word	0x000027a1

000031c8 <_uhd_vbus_handler>:
/**
 * \internal
 * \brief USB VBUS pin change handler
 */
static void _uhd_vbus_handler(void)
{
    31c8:	b510      	push	{r4, lr}
	extint_chan_disable_callback(USB_VBUS_EIC_LINE,
    31ca:	2100      	movs	r1, #0
    31cc:	200e      	movs	r0, #14
    31ce:	4b08      	ldr	r3, [pc, #32]	; (31f0 <_uhd_vbus_handler+0x28>)
    31d0:	4798      	blx	r3
	return (port_base->IN.reg & pin_mask);
    31d2:	4b08      	ldr	r3, [pc, #32]	; (31f4 <_uhd_vbus_handler+0x2c>)
    31d4:	6a1b      	ldr	r3, [r3, #32]
			EXTINT_CALLBACK_TYPE_DETECT);
# ifndef USB_DEVICE_ATTACH_AUTO_DISABLE
	if (is_usb_vbus_high()) {
    31d6:	045b      	lsls	r3, r3, #17
    31d8:	d406      	bmi.n	31e8 <_uhd_vbus_handler+0x20>
		udd_attach();
	} else {
		udd_detach();
    31da:	4b07      	ldr	r3, [pc, #28]	; (31f8 <_uhd_vbus_handler+0x30>)
    31dc:	4798      	blx	r3
	}
# endif
# ifdef UDC_VBUS_EVENT
	UDC_VBUS_EVENT(is_usb_vbus_high());
# endif
	extint_chan_enable_callback(USB_VBUS_EIC_LINE,
    31de:	2100      	movs	r1, #0
    31e0:	200e      	movs	r0, #14
    31e2:	4b06      	ldr	r3, [pc, #24]	; (31fc <_uhd_vbus_handler+0x34>)
    31e4:	4798      	blx	r3
			EXTINT_CALLBACK_TYPE_DETECT);
}
    31e6:	bd10      	pop	{r4, pc}
		udd_attach();
    31e8:	4b05      	ldr	r3, [pc, #20]	; (3200 <_uhd_vbus_handler+0x38>)
    31ea:	4798      	blx	r3
    31ec:	e7f7      	b.n	31de <_uhd_vbus_handler+0x16>
    31ee:	46c0      	nop			; (mov r8, r8)
    31f0:	00001299 	.word	0x00001299
    31f4:	41004400 	.word	0x41004400
    31f8:	00003125 	.word	0x00003125
    31fc:	00001279 	.word	0x00001279
    3200:	00003145 	.word	0x00003145

00003204 <udd_enable>:
	return false;
#endif
}

void udd_enable(void)
{
    3204:	b570      	push	{r4, r5, r6, lr}
    3206:	b086      	sub	sp, #24
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    3208:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    320c:	425a      	negs	r2, r3
    320e:	4153      	adcs	r3, r2
    3210:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    3212:	b672      	cpsid	i
    3214:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    3218:	2600      	movs	r6, #0
    321a:	4b29      	ldr	r3, [pc, #164]	; (32c0 <udd_enable+0xbc>)
    321c:	701e      	strb	r6, [r3, #0]
	return flags;
    321e:	9d01      	ldr	r5, [sp, #4]
	}
#endif
	struct usb_config config_usb;

	/* USB Module configuration */
	usb_get_config_defaults(&config_usb);
    3220:	ac05      	add	r4, sp, #20
    3222:	0020      	movs	r0, r4
    3224:	4b27      	ldr	r3, [pc, #156]	; (32c4 <udd_enable+0xc0>)
    3226:	4798      	blx	r3
	config_usb.source_generator = UDD_CLOCK_GEN;
    3228:	70a6      	strb	r6, [r4, #2]
	usb_init(&usb_device, USB, &config_usb);
    322a:	4e27      	ldr	r6, [pc, #156]	; (32c8 <udd_enable+0xc4>)
    322c:	0022      	movs	r2, r4
    322e:	4927      	ldr	r1, [pc, #156]	; (32cc <udd_enable+0xc8>)
    3230:	0030      	movs	r0, r6
    3232:	4b27      	ldr	r3, [pc, #156]	; (32d0 <udd_enable+0xcc>)
    3234:	4798      	blx	r3

	/* USB Module Enable */
	usb_enable(&usb_device);
    3236:	0030      	movs	r0, r6
    3238:	4b26      	ldr	r3, [pc, #152]	; (32d4 <udd_enable+0xd0>)
    323a:	4798      	blx	r3
		if (!(SYSCTRL->DFLLCTRL.reg & SYSCTRL_DFLLCTRL_USBCRM)) {
    323c:	4b26      	ldr	r3, [pc, #152]	; (32d8 <udd_enable+0xd4>)
    323e:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
    3240:	069b      	lsls	r3, r3, #26
    3242:	d434      	bmi.n	32ae <udd_enable+0xaa>
			while((SYSCTRL->PCLKSR.reg & DFLL_READY_FLAG) != DFLL_READY_FLAG);
    3244:	4924      	ldr	r1, [pc, #144]	; (32d8 <udd_enable+0xd4>)
    3246:	22d0      	movs	r2, #208	; 0xd0
    3248:	68cb      	ldr	r3, [r1, #12]
    324a:	4013      	ands	r3, r2
    324c:	2bd0      	cmp	r3, #208	; 0xd0
    324e:	d1fb      	bne.n	3248 <udd_enable+0x44>

	/* Check clock after enable module, request the clock */
	udd_wait_clock_ready();

	udd_sleep_mode(UDD_STATE_SUSPEND);
    3250:	2001      	movs	r0, #1
    3252:	4b22      	ldr	r3, [pc, #136]	; (32dc <udd_enable+0xd8>)
    3254:	4798      	blx	r3
	extint_chan_get_config_defaults(&eint_chan_conf);
    3256:	ac02      	add	r4, sp, #8
    3258:	0020      	movs	r0, r4
    325a:	4b21      	ldr	r3, [pc, #132]	; (32e0 <udd_enable+0xdc>)
    325c:	4798      	blx	r3
	eint_chan_conf.gpio_pin           = USB_VBUS_PIN;
    325e:	230e      	movs	r3, #14
    3260:	9302      	str	r3, [sp, #8]
	eint_chan_conf.gpio_pin_mux       = USB_VBUS_EIC_MUX;
    3262:	2300      	movs	r3, #0
    3264:	6063      	str	r3, [r4, #4]
	eint_chan_conf.gpio_pin_pull      = EXTINT_PULL_NONE;
    3266:	7223      	strb	r3, [r4, #8]
	eint_chan_conf.detection_criteria = EXTINT_DETECT_BOTH;
    3268:	3303      	adds	r3, #3
    326a:	72e3      	strb	r3, [r4, #11]
	eint_chan_conf.filter_input_signal = true;
    326c:	3b02      	subs	r3, #2
    326e:	72a3      	strb	r3, [r4, #10]
	extint_chan_disable_callback(USB_VBUS_EIC_LINE,
    3270:	2100      	movs	r1, #0
    3272:	200e      	movs	r0, #14
    3274:	4b1b      	ldr	r3, [pc, #108]	; (32e4 <udd_enable+0xe0>)
    3276:	4798      	blx	r3
	extint_chan_set_config(USB_VBUS_EIC_LINE, &eint_chan_conf);
    3278:	0021      	movs	r1, r4
    327a:	200e      	movs	r0, #14
    327c:	4b1a      	ldr	r3, [pc, #104]	; (32e8 <udd_enable+0xe4>)
    327e:	4798      	blx	r3
	extint_register_callback(_uhd_vbus_handler,
    3280:	2200      	movs	r2, #0
    3282:	210e      	movs	r1, #14
    3284:	4819      	ldr	r0, [pc, #100]	; (32ec <udd_enable+0xe8>)
    3286:	4b1a      	ldr	r3, [pc, #104]	; (32f0 <udd_enable+0xec>)
    3288:	4798      	blx	r3
	extint_chan_enable_callback(USB_VBUS_EIC_LINE,
    328a:	2100      	movs	r1, #0
    328c:	200e      	movs	r0, #14
    328e:	4b19      	ldr	r3, [pc, #100]	; (32f4 <udd_enable+0xf0>)
    3290:	4798      	blx	r3
    3292:	4b19      	ldr	r3, [pc, #100]	; (32f8 <udd_enable+0xf4>)
    3294:	6a1b      	ldr	r3, [r3, #32]

#if USB_VBUS_EIC
	_usb_vbus_config();
	if (is_usb_vbus_high()) {
    3296:	045b      	lsls	r3, r3, #17
    3298:	d40f      	bmi.n	32ba <udd_enable+0xb6>
	if (cpu_irq_is_enabled_flags(flags))
    329a:	2d00      	cmp	r5, #0
    329c:	d005      	beq.n	32aa <udd_enable+0xa6>
		cpu_irq_enable();
    329e:	2201      	movs	r2, #1
    32a0:	4b07      	ldr	r3, [pc, #28]	; (32c0 <udd_enable+0xbc>)
    32a2:	701a      	strb	r2, [r3, #0]
    32a4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    32a8:	b662      	cpsie	i
	udd_attach();
# endif
#endif

	cpu_irq_restore(flags);
}
    32aa:	b006      	add	sp, #24
    32ac:	bd70      	pop	{r4, r5, r6, pc}
			while((SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY) != SYSCTRL_PCLKSR_DFLLRDY);
    32ae:	490a      	ldr	r1, [pc, #40]	; (32d8 <udd_enable+0xd4>)
    32b0:	2210      	movs	r2, #16
    32b2:	68cb      	ldr	r3, [r1, #12]
    32b4:	421a      	tst	r2, r3
    32b6:	d0fc      	beq.n	32b2 <udd_enable+0xae>
    32b8:	e7ca      	b.n	3250 <udd_enable+0x4c>
		_uhd_vbus_handler();
    32ba:	4b0c      	ldr	r3, [pc, #48]	; (32ec <udd_enable+0xe8>)
    32bc:	4798      	blx	r3
    32be:	e7ec      	b.n	329a <udd_enable+0x96>
    32c0:	200000e8 	.word	0x200000e8
    32c4:	00003f5d 	.word	0x00003f5d
    32c8:	20000468 	.word	0x20000468
    32cc:	41005000 	.word	0x41005000
    32d0:	00003f6d 	.word	0x00003f6d
    32d4:	00003981 	.word	0x00003981
    32d8:	40000800 	.word	0x40000800
    32dc:	000024dd 	.word	0x000024dd
    32e0:	00001391 	.word	0x00001391
    32e4:	00001299 	.word	0x00001299
    32e8:	000013a5 	.word	0x000013a5
    32ec:	000031c9 	.word	0x000031c9
    32f0:	0000124d 	.word	0x0000124d
    32f4:	00001279 	.word	0x00001279
    32f8:	41004400 	.word	0x41004400

000032fc <usb_device_register_callback>:
    32fc:	b510      	push	{r4, lr}
    32fe:	000b      	movs	r3, r1
    3300:	332e      	adds	r3, #46	; 0x2e
    3302:	009b      	lsls	r3, r3, #2
    3304:	501a      	str	r2, [r3, r0]
    3306:	22aa      	movs	r2, #170	; 0xaa
    3308:	0052      	lsls	r2, r2, #1
    330a:	0049      	lsls	r1, r1, #1
    330c:	5a83      	ldrh	r3, [r0, r2]
    330e:	4c03      	ldr	r4, [pc, #12]	; (331c <usb_device_register_callback+0x20>)
    3310:	5b09      	ldrh	r1, [r1, r4]
    3312:	430b      	orrs	r3, r1
    3314:	5283      	strh	r3, [r0, r2]
    3316:	2000      	movs	r0, #0
    3318:	bd10      	pop	{r4, pc}
    331a:	46c0      	nop			; (mov r8, r8)
    331c:	00004a74 	.word	0x00004a74

00003320 <usb_device_enable_callback>:
    3320:	0049      	lsls	r1, r1, #1
    3322:	4b06      	ldr	r3, [pc, #24]	; (333c <usb_device_enable_callback+0x1c>)
    3324:	5acb      	ldrh	r3, [r1, r3]
    3326:	6802      	ldr	r2, [r0, #0]
    3328:	8393      	strh	r3, [r2, #28]
    332a:	21ab      	movs	r1, #171	; 0xab
    332c:	0049      	lsls	r1, r1, #1
    332e:	5a42      	ldrh	r2, [r0, r1]
    3330:	431a      	orrs	r2, r3
    3332:	5242      	strh	r2, [r0, r1]
    3334:	6802      	ldr	r2, [r0, #0]
    3336:	8313      	strh	r3, [r2, #24]
    3338:	2000      	movs	r0, #0
    333a:	4770      	bx	lr
    333c:	00004a74 	.word	0x00004a74

00003340 <usb_device_disable_callback>:
    3340:	0049      	lsls	r1, r1, #1
    3342:	4b05      	ldr	r3, [pc, #20]	; (3358 <usb_device_disable_callback+0x18>)
    3344:	5aca      	ldrh	r2, [r1, r3]
    3346:	21ab      	movs	r1, #171	; 0xab
    3348:	0049      	lsls	r1, r1, #1
    334a:	5a43      	ldrh	r3, [r0, r1]
    334c:	4393      	bics	r3, r2
    334e:	5243      	strh	r3, [r0, r1]
    3350:	6803      	ldr	r3, [r0, #0]
    3352:	829a      	strh	r2, [r3, #20]
    3354:	2000      	movs	r0, #0
    3356:	4770      	bx	lr
    3358:	00004a74 	.word	0x00004a74

0000335c <usb_device_endpoint_register_callback>:
    335c:	b510      	push	{r4, lr}
    335e:	008c      	lsls	r4, r1, #2
    3360:	18a4      	adds	r4, r4, r2
    3362:	3434      	adds	r4, #52	; 0x34
    3364:	00a4      	lsls	r4, r4, #2
    3366:	1904      	adds	r4, r0, r4
    3368:	6063      	str	r3, [r4, #4]
    336a:	1840      	adds	r0, r0, r1
    336c:	3059      	adds	r0, #89	; 0x59
    336e:	30ff      	adds	r0, #255	; 0xff
    3370:	7803      	ldrb	r3, [r0, #0]
    3372:	4903      	ldr	r1, [pc, #12]	; (3380 <usb_device_endpoint_register_callback+0x24>)
    3374:	5c8a      	ldrb	r2, [r1, r2]
    3376:	4313      	orrs	r3, r2
    3378:	7003      	strb	r3, [r0, #0]
    337a:	2000      	movs	r0, #0
    337c:	bd10      	pop	{r4, pc}
    337e:	46c0      	nop			; (mov r8, r8)
    3380:	00004a84 	.word	0x00004a84

00003384 <usb_device_endpoint_unregister_callback>:
    3384:	b510      	push	{r4, lr}
    3386:	008b      	lsls	r3, r1, #2
    3388:	189b      	adds	r3, r3, r2
    338a:	3334      	adds	r3, #52	; 0x34
    338c:	009b      	lsls	r3, r3, #2
    338e:	18c3      	adds	r3, r0, r3
    3390:	2400      	movs	r4, #0
    3392:	605c      	str	r4, [r3, #4]
    3394:	1840      	adds	r0, r0, r1
    3396:	3059      	adds	r0, #89	; 0x59
    3398:	30ff      	adds	r0, #255	; 0xff
    339a:	4b03      	ldr	r3, [pc, #12]	; (33a8 <usb_device_endpoint_unregister_callback+0x24>)
    339c:	5c9a      	ldrb	r2, [r3, r2]
    339e:	7803      	ldrb	r3, [r0, #0]
    33a0:	4393      	bics	r3, r2
    33a2:	7003      	strb	r3, [r0, #0]
    33a4:	2000      	movs	r0, #0
    33a6:	bd10      	pop	{r4, pc}
    33a8:	00004a84 	.word	0x00004a84

000033ac <usb_device_endpoint_enable_callback>:
    33ac:	b570      	push	{r4, r5, r6, lr}
    33ae:	230f      	movs	r3, #15
    33b0:	400b      	ands	r3, r1
    33b2:	18c4      	adds	r4, r0, r3
    33b4:	3461      	adds	r4, #97	; 0x61
    33b6:	34ff      	adds	r4, #255	; 0xff
    33b8:	7825      	ldrb	r5, [r4, #0]
    33ba:	4e2f      	ldr	r6, [pc, #188]	; (3478 <usb_device_endpoint_enable_callback+0xcc>)
    33bc:	5cb6      	ldrb	r6, [r6, r2]
    33be:	4335      	orrs	r5, r6
    33c0:	7025      	strb	r5, [r4, #0]
    33c2:	2a00      	cmp	r2, #0
    33c4:	d129      	bne.n	341a <usb_device_endpoint_enable_callback+0x6e>
    33c6:	2b00      	cmp	r3, #0
    33c8:	d112      	bne.n	33f0 <usb_device_endpoint_enable_callback+0x44>
    33ca:	2503      	movs	r5, #3
    33cc:	240a      	movs	r4, #10
    33ce:	34ff      	adds	r4, #255	; 0xff
    33d0:	6806      	ldr	r6, [r0, #0]
    33d2:	5535      	strb	r5, [r6, r4]
    33d4:	2a03      	cmp	r2, #3
    33d6:	d109      	bne.n	33ec <usb_device_endpoint_enable_callback+0x40>
    33d8:	b249      	sxtb	r1, r1
    33da:	2900      	cmp	r1, #0
    33dc:	db44      	blt.n	3468 <usb_device_endpoint_enable_callback+0xbc>
    33de:	6802      	ldr	r2, [r0, #0]
    33e0:	015b      	lsls	r3, r3, #5
    33e2:	18d3      	adds	r3, r2, r3
    33e4:	330a      	adds	r3, #10
    33e6:	33ff      	adds	r3, #255	; 0xff
    33e8:	2220      	movs	r2, #32
    33ea:	701a      	strb	r2, [r3, #0]
    33ec:	2000      	movs	r0, #0
    33ee:	bd70      	pop	{r4, r5, r6, pc}
    33f0:	b24c      	sxtb	r4, r1
    33f2:	2c00      	cmp	r4, #0
    33f4:	db08      	blt.n	3408 <usb_device_endpoint_enable_callback+0x5c>
    33f6:	015c      	lsls	r4, r3, #5
    33f8:	6805      	ldr	r5, [r0, #0]
    33fa:	46ac      	mov	ip, r5
    33fc:	4464      	add	r4, ip
    33fe:	340a      	adds	r4, #10
    3400:	34ff      	adds	r4, #255	; 0xff
    3402:	2501      	movs	r5, #1
    3404:	7025      	strb	r5, [r4, #0]
    3406:	e7e5      	b.n	33d4 <usb_device_endpoint_enable_callback+0x28>
    3408:	015c      	lsls	r4, r3, #5
    340a:	6805      	ldr	r5, [r0, #0]
    340c:	46ac      	mov	ip, r5
    340e:	4464      	add	r4, ip
    3410:	340a      	adds	r4, #10
    3412:	34ff      	adds	r4, #255	; 0xff
    3414:	2502      	movs	r5, #2
    3416:	7025      	strb	r5, [r4, #0]
    3418:	e7dc      	b.n	33d4 <usb_device_endpoint_enable_callback+0x28>
    341a:	2a01      	cmp	r2, #1
    341c:	d11a      	bne.n	3454 <usb_device_endpoint_enable_callback+0xa8>
    341e:	2b00      	cmp	r3, #0
    3420:	d105      	bne.n	342e <usb_device_endpoint_enable_callback+0x82>
    3422:	6802      	ldr	r2, [r0, #0]
    3424:	210c      	movs	r1, #12
    3426:	230a      	movs	r3, #10
    3428:	33ff      	adds	r3, #255	; 0xff
    342a:	54d1      	strb	r1, [r2, r3]
    342c:	e7de      	b.n	33ec <usb_device_endpoint_enable_callback+0x40>
    342e:	b249      	sxtb	r1, r1
    3430:	2900      	cmp	r1, #0
    3432:	db07      	blt.n	3444 <usb_device_endpoint_enable_callback+0x98>
    3434:	6802      	ldr	r2, [r0, #0]
    3436:	015b      	lsls	r3, r3, #5
    3438:	18d3      	adds	r3, r2, r3
    343a:	330a      	adds	r3, #10
    343c:	33ff      	adds	r3, #255	; 0xff
    343e:	2204      	movs	r2, #4
    3440:	701a      	strb	r2, [r3, #0]
    3442:	e7d3      	b.n	33ec <usb_device_endpoint_enable_callback+0x40>
    3444:	6802      	ldr	r2, [r0, #0]
    3446:	015b      	lsls	r3, r3, #5
    3448:	18d3      	adds	r3, r2, r3
    344a:	330a      	adds	r3, #10
    344c:	33ff      	adds	r3, #255	; 0xff
    344e:	2208      	movs	r2, #8
    3450:	701a      	strb	r2, [r3, #0]
    3452:	e7cb      	b.n	33ec <usb_device_endpoint_enable_callback+0x40>
    3454:	2a02      	cmp	r2, #2
    3456:	d1bd      	bne.n	33d4 <usb_device_endpoint_enable_callback+0x28>
    3458:	6802      	ldr	r2, [r0, #0]
    345a:	015b      	lsls	r3, r3, #5
    345c:	18d3      	adds	r3, r2, r3
    345e:	330a      	adds	r3, #10
    3460:	33ff      	adds	r3, #255	; 0xff
    3462:	2210      	movs	r2, #16
    3464:	701a      	strb	r2, [r3, #0]
    3466:	e7c1      	b.n	33ec <usb_device_endpoint_enable_callback+0x40>
    3468:	6802      	ldr	r2, [r0, #0]
    346a:	015b      	lsls	r3, r3, #5
    346c:	18d3      	adds	r3, r2, r3
    346e:	330a      	adds	r3, #10
    3470:	33ff      	adds	r3, #255	; 0xff
    3472:	2240      	movs	r2, #64	; 0x40
    3474:	701a      	strb	r2, [r3, #0]
    3476:	e7b9      	b.n	33ec <usb_device_endpoint_enable_callback+0x40>
    3478:	00004a84 	.word	0x00004a84

0000347c <usb_device_endpoint_disable_callback>:
    347c:	b570      	push	{r4, r5, r6, lr}
    347e:	230f      	movs	r3, #15
    3480:	400b      	ands	r3, r1
    3482:	18c4      	adds	r4, r0, r3
    3484:	3461      	adds	r4, #97	; 0x61
    3486:	34ff      	adds	r4, #255	; 0xff
    3488:	4d2f      	ldr	r5, [pc, #188]	; (3548 <usb_device_endpoint_disable_callback+0xcc>)
    348a:	5cae      	ldrb	r6, [r5, r2]
    348c:	7825      	ldrb	r5, [r4, #0]
    348e:	43b5      	bics	r5, r6
    3490:	7025      	strb	r5, [r4, #0]
    3492:	2a00      	cmp	r2, #0
    3494:	d129      	bne.n	34ea <usb_device_endpoint_disable_callback+0x6e>
    3496:	2b00      	cmp	r3, #0
    3498:	d112      	bne.n	34c0 <usb_device_endpoint_disable_callback+0x44>
    349a:	2503      	movs	r5, #3
    349c:	2484      	movs	r4, #132	; 0x84
    349e:	0064      	lsls	r4, r4, #1
    34a0:	6806      	ldr	r6, [r0, #0]
    34a2:	5535      	strb	r5, [r6, r4]
    34a4:	2a03      	cmp	r2, #3
    34a6:	d109      	bne.n	34bc <usb_device_endpoint_disable_callback+0x40>
    34a8:	b249      	sxtb	r1, r1
    34aa:	2900      	cmp	r1, #0
    34ac:	db44      	blt.n	3538 <usb_device_endpoint_disable_callback+0xbc>
    34ae:	6802      	ldr	r2, [r0, #0]
    34b0:	015b      	lsls	r3, r3, #5
    34b2:	18d3      	adds	r3, r2, r3
    34b4:	3309      	adds	r3, #9
    34b6:	33ff      	adds	r3, #255	; 0xff
    34b8:	2220      	movs	r2, #32
    34ba:	701a      	strb	r2, [r3, #0]
    34bc:	2000      	movs	r0, #0
    34be:	bd70      	pop	{r4, r5, r6, pc}
    34c0:	b24c      	sxtb	r4, r1
    34c2:	2c00      	cmp	r4, #0
    34c4:	db08      	blt.n	34d8 <usb_device_endpoint_disable_callback+0x5c>
    34c6:	015c      	lsls	r4, r3, #5
    34c8:	6805      	ldr	r5, [r0, #0]
    34ca:	46ac      	mov	ip, r5
    34cc:	4464      	add	r4, ip
    34ce:	3409      	adds	r4, #9
    34d0:	34ff      	adds	r4, #255	; 0xff
    34d2:	2501      	movs	r5, #1
    34d4:	7025      	strb	r5, [r4, #0]
    34d6:	e7e5      	b.n	34a4 <usb_device_endpoint_disable_callback+0x28>
    34d8:	015c      	lsls	r4, r3, #5
    34da:	6805      	ldr	r5, [r0, #0]
    34dc:	46ac      	mov	ip, r5
    34de:	4464      	add	r4, ip
    34e0:	3409      	adds	r4, #9
    34e2:	34ff      	adds	r4, #255	; 0xff
    34e4:	2502      	movs	r5, #2
    34e6:	7025      	strb	r5, [r4, #0]
    34e8:	e7dc      	b.n	34a4 <usb_device_endpoint_disable_callback+0x28>
    34ea:	2a01      	cmp	r2, #1
    34ec:	d11a      	bne.n	3524 <usb_device_endpoint_disable_callback+0xa8>
    34ee:	2b00      	cmp	r3, #0
    34f0:	d105      	bne.n	34fe <usb_device_endpoint_disable_callback+0x82>
    34f2:	6802      	ldr	r2, [r0, #0]
    34f4:	210c      	movs	r1, #12
    34f6:	3309      	adds	r3, #9
    34f8:	33ff      	adds	r3, #255	; 0xff
    34fa:	54d1      	strb	r1, [r2, r3]
    34fc:	e7de      	b.n	34bc <usb_device_endpoint_disable_callback+0x40>
    34fe:	b249      	sxtb	r1, r1
    3500:	2900      	cmp	r1, #0
    3502:	db07      	blt.n	3514 <usb_device_endpoint_disable_callback+0x98>
    3504:	6802      	ldr	r2, [r0, #0]
    3506:	015b      	lsls	r3, r3, #5
    3508:	18d3      	adds	r3, r2, r3
    350a:	3309      	adds	r3, #9
    350c:	33ff      	adds	r3, #255	; 0xff
    350e:	2204      	movs	r2, #4
    3510:	701a      	strb	r2, [r3, #0]
    3512:	e7d3      	b.n	34bc <usb_device_endpoint_disable_callback+0x40>
    3514:	6802      	ldr	r2, [r0, #0]
    3516:	015b      	lsls	r3, r3, #5
    3518:	18d3      	adds	r3, r2, r3
    351a:	3309      	adds	r3, #9
    351c:	33ff      	adds	r3, #255	; 0xff
    351e:	2208      	movs	r2, #8
    3520:	701a      	strb	r2, [r3, #0]
    3522:	e7cb      	b.n	34bc <usb_device_endpoint_disable_callback+0x40>
    3524:	2a02      	cmp	r2, #2
    3526:	d1bd      	bne.n	34a4 <usb_device_endpoint_disable_callback+0x28>
    3528:	6802      	ldr	r2, [r0, #0]
    352a:	015b      	lsls	r3, r3, #5
    352c:	18d3      	adds	r3, r2, r3
    352e:	3309      	adds	r3, #9
    3530:	33ff      	adds	r3, #255	; 0xff
    3532:	2210      	movs	r2, #16
    3534:	701a      	strb	r2, [r3, #0]
    3536:	e7c1      	b.n	34bc <usb_device_endpoint_disable_callback+0x40>
    3538:	6802      	ldr	r2, [r0, #0]
    353a:	015b      	lsls	r3, r3, #5
    353c:	18d3      	adds	r3, r2, r3
    353e:	3309      	adds	r3, #9
    3540:	33ff      	adds	r3, #255	; 0xff
    3542:	2240      	movs	r2, #64	; 0x40
    3544:	701a      	strb	r2, [r3, #0]
    3546:	e7b9      	b.n	34bc <usb_device_endpoint_disable_callback+0x40>
    3548:	00004a84 	.word	0x00004a84

0000354c <usb_device_endpoint_get_config_defaults>:
    354c:	2300      	movs	r3, #0
    354e:	7003      	strb	r3, [r0, #0]
    3550:	7043      	strb	r3, [r0, #1]
    3552:	7083      	strb	r3, [r0, #2]
    3554:	3301      	adds	r3, #1
    3556:	70c3      	strb	r3, [r0, #3]
    3558:	4770      	bx	lr
	...

0000355c <usb_device_endpoint_set_config>:
    355c:	b5f0      	push	{r4, r5, r6, r7, lr}
    355e:	780c      	ldrb	r4, [r1, #0]
    3560:	230f      	movs	r3, #15
    3562:	4023      	ands	r3, r4
    3564:	b264      	sxtb	r4, r4
    3566:	78ca      	ldrb	r2, [r1, #3]
    3568:	2a04      	cmp	r2, #4
    356a:	d870      	bhi.n	364e <usb_device_endpoint_set_config+0xf2>
    356c:	0092      	lsls	r2, r2, #2
    356e:	4d89      	ldr	r5, [pc, #548]	; (3794 <usb_device_endpoint_set_config+0x238>)
    3570:	58aa      	ldr	r2, [r5, r2]
    3572:	4697      	mov	pc, r2
    3574:	6802      	ldr	r2, [r0, #0]
    3576:	3308      	adds	r3, #8
    3578:	015b      	lsls	r3, r3, #5
    357a:	2100      	movs	r1, #0
    357c:	5499      	strb	r1, [r3, r2]
    357e:	2200      	movs	r2, #0
    3580:	e082      	b.n	3688 <usb_device_endpoint_set_config+0x12c>
    3582:	015c      	lsls	r4, r3, #5
    3584:	6802      	ldr	r2, [r0, #0]
    3586:	4694      	mov	ip, r2
    3588:	4464      	add	r4, ip
    358a:	2280      	movs	r2, #128	; 0x80
    358c:	0052      	lsls	r2, r2, #1
    358e:	5ca5      	ldrb	r5, [r4, r2]
    3590:	3ae4      	subs	r2, #228	; 0xe4
    3592:	076d      	lsls	r5, r5, #29
    3594:	d178      	bne.n	3688 <usb_device_endpoint_set_config+0x12c>
    3596:	32e4      	adds	r2, #228	; 0xe4
    3598:	5ca6      	ldrb	r6, [r4, r2]
    359a:	2570      	movs	r5, #112	; 0x70
    359c:	3ae4      	subs	r2, #228	; 0xe4
    359e:	422e      	tst	r6, r5
    35a0:	d172      	bne.n	3688 <usb_device_endpoint_set_config+0x12c>
    35a2:	3d5f      	subs	r5, #95	; 0x5f
    35a4:	32e4      	adds	r2, #228	; 0xe4
    35a6:	54a5      	strb	r5, [r4, r2]
    35a8:	001a      	movs	r2, r3
    35aa:	3208      	adds	r2, #8
    35ac:	0152      	lsls	r2, r2, #5
    35ae:	6804      	ldr	r4, [r0, #0]
    35b0:	18a4      	adds	r4, r4, r2
    35b2:	352f      	adds	r5, #47	; 0x2f
    35b4:	7165      	strb	r5, [r4, #5]
    35b6:	6800      	ldr	r0, [r0, #0]
    35b8:	1882      	adds	r2, r0, r2
    35ba:	2080      	movs	r0, #128	; 0x80
    35bc:	7110      	strb	r0, [r2, #4]
    35be:	788a      	ldrb	r2, [r1, #2]
    35c0:	2a00      	cmp	r2, #0
    35c2:	d01f      	beq.n	3604 <usb_device_endpoint_set_config+0xa8>
    35c4:	0158      	lsls	r0, r3, #5
    35c6:	4a74      	ldr	r2, [pc, #464]	; (3798 <usb_device_endpoint_set_config+0x23c>)
    35c8:	1812      	adds	r2, r2, r0
    35ca:	6854      	ldr	r4, [r2, #4]
    35cc:	2080      	movs	r0, #128	; 0x80
    35ce:	0600      	lsls	r0, r0, #24
    35d0:	4304      	orrs	r4, r0
    35d2:	6054      	str	r4, [r2, #4]
    35d4:	6954      	ldr	r4, [r2, #20]
    35d6:	4320      	orrs	r0, r4
    35d8:	6150      	str	r0, [r2, #20]
    35da:	2507      	movs	r5, #7
    35dc:	784c      	ldrb	r4, [r1, #1]
    35de:	015a      	lsls	r2, r3, #5
    35e0:	4b6d      	ldr	r3, [pc, #436]	; (3798 <usb_device_endpoint_set_config+0x23c>)
    35e2:	189b      	adds	r3, r3, r2
    35e4:	6858      	ldr	r0, [r3, #4]
    35e6:	402c      	ands	r4, r5
    35e8:	0724      	lsls	r4, r4, #28
    35ea:	4e6c      	ldr	r6, [pc, #432]	; (379c <usb_device_endpoint_set_config+0x240>)
    35ec:	4030      	ands	r0, r6
    35ee:	4320      	orrs	r0, r4
    35f0:	6058      	str	r0, [r3, #4]
    35f2:	7849      	ldrb	r1, [r1, #1]
    35f4:	695a      	ldr	r2, [r3, #20]
    35f6:	4029      	ands	r1, r5
    35f8:	0709      	lsls	r1, r1, #28
    35fa:	4032      	ands	r2, r6
    35fc:	430a      	orrs	r2, r1
    35fe:	615a      	str	r2, [r3, #20]
    3600:	2200      	movs	r2, #0
    3602:	e041      	b.n	3688 <usb_device_endpoint_set_config+0x12c>
    3604:	0158      	lsls	r0, r3, #5
    3606:	4a64      	ldr	r2, [pc, #400]	; (3798 <usb_device_endpoint_set_config+0x23c>)
    3608:	1812      	adds	r2, r2, r0
    360a:	6850      	ldr	r0, [r2, #4]
    360c:	0040      	lsls	r0, r0, #1
    360e:	0840      	lsrs	r0, r0, #1
    3610:	6050      	str	r0, [r2, #4]
    3612:	6950      	ldr	r0, [r2, #20]
    3614:	0040      	lsls	r0, r0, #1
    3616:	0840      	lsrs	r0, r0, #1
    3618:	6150      	str	r0, [r2, #20]
    361a:	e7de      	b.n	35da <usb_device_endpoint_set_config+0x7e>
    361c:	2c00      	cmp	r4, #0
    361e:	db35      	blt.n	368c <usb_device_endpoint_set_config+0x130>
    3620:	015d      	lsls	r5, r3, #5
    3622:	6802      	ldr	r2, [r0, #0]
    3624:	4694      	mov	ip, r2
    3626:	4465      	add	r5, ip
    3628:	2280      	movs	r2, #128	; 0x80
    362a:	0052      	lsls	r2, r2, #1
    362c:	5cae      	ldrb	r6, [r5, r2]
    362e:	3ae4      	subs	r2, #228	; 0xe4
    3630:	0776      	lsls	r6, r6, #29
    3632:	d129      	bne.n	3688 <usb_device_endpoint_set_config+0x12c>
    3634:	2680      	movs	r6, #128	; 0x80
    3636:	0076      	lsls	r6, r6, #1
    3638:	5daa      	ldrb	r2, [r5, r6]
    363a:	2702      	movs	r7, #2
    363c:	433a      	orrs	r2, r7
    363e:	55aa      	strb	r2, [r5, r6]
    3640:	6802      	ldr	r2, [r0, #0]
    3642:	0018      	movs	r0, r3
    3644:	3008      	adds	r0, #8
    3646:	0140      	lsls	r0, r0, #5
    3648:	1812      	adds	r2, r2, r0
    364a:	2040      	movs	r0, #64	; 0x40
    364c:	7150      	strb	r0, [r2, #5]
    364e:	0fe2      	lsrs	r2, r4, #31
    3650:	784f      	ldrb	r7, [r1, #1]
    3652:	005d      	lsls	r5, r3, #1
    3654:	18ad      	adds	r5, r5, r2
    3656:	012d      	lsls	r5, r5, #4
    3658:	4e4f      	ldr	r6, [pc, #316]	; (3798 <usb_device_endpoint_set_config+0x23c>)
    365a:	1975      	adds	r5, r6, r5
    365c:	6868      	ldr	r0, [r5, #4]
    365e:	2407      	movs	r4, #7
    3660:	403c      	ands	r4, r7
    3662:	0724      	lsls	r4, r4, #28
    3664:	4e4d      	ldr	r6, [pc, #308]	; (379c <usb_device_endpoint_set_config+0x240>)
    3666:	4030      	ands	r0, r6
    3668:	4320      	orrs	r0, r4
    366a:	6068      	str	r0, [r5, #4]
    366c:	7889      	ldrb	r1, [r1, #2]
    366e:	2900      	cmp	r1, #0
    3670:	d000      	beq.n	3674 <usb_device_endpoint_set_config+0x118>
    3672:	e088      	b.n	3786 <usb_device_endpoint_set_config+0x22a>
    3674:	005b      	lsls	r3, r3, #1
    3676:	189b      	adds	r3, r3, r2
    3678:	011b      	lsls	r3, r3, #4
    367a:	4a47      	ldr	r2, [pc, #284]	; (3798 <usb_device_endpoint_set_config+0x23c>)
    367c:	18d3      	adds	r3, r2, r3
    367e:	685a      	ldr	r2, [r3, #4]
    3680:	0052      	lsls	r2, r2, #1
    3682:	0852      	lsrs	r2, r2, #1
    3684:	605a      	str	r2, [r3, #4]
    3686:	2200      	movs	r2, #0
    3688:	0010      	movs	r0, r2
    368a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    368c:	015d      	lsls	r5, r3, #5
    368e:	6802      	ldr	r2, [r0, #0]
    3690:	4694      	mov	ip, r2
    3692:	4465      	add	r5, ip
    3694:	2280      	movs	r2, #128	; 0x80
    3696:	0052      	lsls	r2, r2, #1
    3698:	5caf      	ldrb	r7, [r5, r2]
    369a:	2670      	movs	r6, #112	; 0x70
    369c:	3ae4      	subs	r2, #228	; 0xe4
    369e:	4237      	tst	r7, r6
    36a0:	d1f2      	bne.n	3688 <usb_device_endpoint_set_config+0x12c>
    36a2:	3690      	adds	r6, #144	; 0x90
    36a4:	5daa      	ldrb	r2, [r5, r6]
    36a6:	2720      	movs	r7, #32
    36a8:	433a      	orrs	r2, r7
    36aa:	55aa      	strb	r2, [r5, r6]
    36ac:	6802      	ldr	r2, [r0, #0]
    36ae:	0018      	movs	r0, r3
    36b0:	3008      	adds	r0, #8
    36b2:	0140      	lsls	r0, r0, #5
    36b4:	1812      	adds	r2, r2, r0
    36b6:	2080      	movs	r0, #128	; 0x80
    36b8:	7110      	strb	r0, [r2, #4]
    36ba:	e7c8      	b.n	364e <usb_device_endpoint_set_config+0xf2>
    36bc:	2c00      	cmp	r4, #0
    36be:	db17      	blt.n	36f0 <usb_device_endpoint_set_config+0x194>
    36c0:	015d      	lsls	r5, r3, #5
    36c2:	6802      	ldr	r2, [r0, #0]
    36c4:	4694      	mov	ip, r2
    36c6:	4465      	add	r5, ip
    36c8:	2280      	movs	r2, #128	; 0x80
    36ca:	0052      	lsls	r2, r2, #1
    36cc:	5cae      	ldrb	r6, [r5, r2]
    36ce:	3ae4      	subs	r2, #228	; 0xe4
    36d0:	0776      	lsls	r6, r6, #29
    36d2:	d1d9      	bne.n	3688 <usb_device_endpoint_set_config+0x12c>
    36d4:	2680      	movs	r6, #128	; 0x80
    36d6:	0076      	lsls	r6, r6, #1
    36d8:	5daa      	ldrb	r2, [r5, r6]
    36da:	2703      	movs	r7, #3
    36dc:	433a      	orrs	r2, r7
    36de:	55aa      	strb	r2, [r5, r6]
    36e0:	6802      	ldr	r2, [r0, #0]
    36e2:	0018      	movs	r0, r3
    36e4:	3008      	adds	r0, #8
    36e6:	0140      	lsls	r0, r0, #5
    36e8:	1812      	adds	r2, r2, r0
    36ea:	2040      	movs	r0, #64	; 0x40
    36ec:	7150      	strb	r0, [r2, #5]
    36ee:	e7ae      	b.n	364e <usb_device_endpoint_set_config+0xf2>
    36f0:	015d      	lsls	r5, r3, #5
    36f2:	6802      	ldr	r2, [r0, #0]
    36f4:	4694      	mov	ip, r2
    36f6:	4465      	add	r5, ip
    36f8:	2280      	movs	r2, #128	; 0x80
    36fa:	0052      	lsls	r2, r2, #1
    36fc:	5caf      	ldrb	r7, [r5, r2]
    36fe:	2670      	movs	r6, #112	; 0x70
    3700:	3ae4      	subs	r2, #228	; 0xe4
    3702:	4237      	tst	r7, r6
    3704:	d1c0      	bne.n	3688 <usb_device_endpoint_set_config+0x12c>
    3706:	3690      	adds	r6, #144	; 0x90
    3708:	5daa      	ldrb	r2, [r5, r6]
    370a:	2730      	movs	r7, #48	; 0x30
    370c:	433a      	orrs	r2, r7
    370e:	55aa      	strb	r2, [r5, r6]
    3710:	6802      	ldr	r2, [r0, #0]
    3712:	0018      	movs	r0, r3
    3714:	3008      	adds	r0, #8
    3716:	0140      	lsls	r0, r0, #5
    3718:	1812      	adds	r2, r2, r0
    371a:	2080      	movs	r0, #128	; 0x80
    371c:	7110      	strb	r0, [r2, #4]
    371e:	e796      	b.n	364e <usb_device_endpoint_set_config+0xf2>
    3720:	2c00      	cmp	r4, #0
    3722:	db17      	blt.n	3754 <usb_device_endpoint_set_config+0x1f8>
    3724:	015d      	lsls	r5, r3, #5
    3726:	6802      	ldr	r2, [r0, #0]
    3728:	4694      	mov	ip, r2
    372a:	4465      	add	r5, ip
    372c:	2280      	movs	r2, #128	; 0x80
    372e:	0052      	lsls	r2, r2, #1
    3730:	5cae      	ldrb	r6, [r5, r2]
    3732:	3ae4      	subs	r2, #228	; 0xe4
    3734:	0776      	lsls	r6, r6, #29
    3736:	d1a7      	bne.n	3688 <usb_device_endpoint_set_config+0x12c>
    3738:	2680      	movs	r6, #128	; 0x80
    373a:	0076      	lsls	r6, r6, #1
    373c:	5daa      	ldrb	r2, [r5, r6]
    373e:	2704      	movs	r7, #4
    3740:	433a      	orrs	r2, r7
    3742:	55aa      	strb	r2, [r5, r6]
    3744:	6802      	ldr	r2, [r0, #0]
    3746:	0018      	movs	r0, r3
    3748:	3008      	adds	r0, #8
    374a:	0140      	lsls	r0, r0, #5
    374c:	1812      	adds	r2, r2, r0
    374e:	2040      	movs	r0, #64	; 0x40
    3750:	7150      	strb	r0, [r2, #5]
    3752:	e77c      	b.n	364e <usb_device_endpoint_set_config+0xf2>
    3754:	015d      	lsls	r5, r3, #5
    3756:	6802      	ldr	r2, [r0, #0]
    3758:	4694      	mov	ip, r2
    375a:	4465      	add	r5, ip
    375c:	2280      	movs	r2, #128	; 0x80
    375e:	0052      	lsls	r2, r2, #1
    3760:	5caf      	ldrb	r7, [r5, r2]
    3762:	2670      	movs	r6, #112	; 0x70
    3764:	3ae4      	subs	r2, #228	; 0xe4
    3766:	4237      	tst	r7, r6
    3768:	d000      	beq.n	376c <usb_device_endpoint_set_config+0x210>
    376a:	e78d      	b.n	3688 <usb_device_endpoint_set_config+0x12c>
    376c:	3690      	adds	r6, #144	; 0x90
    376e:	5daa      	ldrb	r2, [r5, r6]
    3770:	2740      	movs	r7, #64	; 0x40
    3772:	433a      	orrs	r2, r7
    3774:	55aa      	strb	r2, [r5, r6]
    3776:	6802      	ldr	r2, [r0, #0]
    3778:	0018      	movs	r0, r3
    377a:	3008      	adds	r0, #8
    377c:	0140      	lsls	r0, r0, #5
    377e:	1812      	adds	r2, r2, r0
    3780:	2080      	movs	r0, #128	; 0x80
    3782:	7110      	strb	r0, [r2, #4]
    3784:	e763      	b.n	364e <usb_device_endpoint_set_config+0xf2>
    3786:	6869      	ldr	r1, [r5, #4]
    3788:	2380      	movs	r3, #128	; 0x80
    378a:	061b      	lsls	r3, r3, #24
    378c:	430b      	orrs	r3, r1
    378e:	606b      	str	r3, [r5, #4]
    3790:	2200      	movs	r2, #0
    3792:	e779      	b.n	3688 <usb_device_endpoint_set_config+0x12c>
    3794:	00004a60 	.word	0x00004a60
    3798:	20000628 	.word	0x20000628
    379c:	8fffffff 	.word	0x8fffffff

000037a0 <usb_device_endpoint_abort_job>:
    37a0:	230f      	movs	r3, #15
    37a2:	400b      	ands	r3, r1
    37a4:	b249      	sxtb	r1, r1
    37a6:	2900      	cmp	r1, #0
    37a8:	db0a      	blt.n	37c0 <usb_device_endpoint_abort_job+0x20>
    37aa:	3308      	adds	r3, #8
    37ac:	015b      	lsls	r3, r3, #5
    37ae:	6802      	ldr	r2, [r0, #0]
    37b0:	18d2      	adds	r2, r2, r3
    37b2:	2140      	movs	r1, #64	; 0x40
    37b4:	7151      	strb	r1, [r2, #5]
    37b6:	6802      	ldr	r2, [r0, #0]
    37b8:	18d3      	adds	r3, r2, r3
    37ba:	2201      	movs	r2, #1
    37bc:	71da      	strb	r2, [r3, #7]
    37be:	4770      	bx	lr
    37c0:	3308      	adds	r3, #8
    37c2:	015b      	lsls	r3, r3, #5
    37c4:	6802      	ldr	r2, [r0, #0]
    37c6:	18d2      	adds	r2, r2, r3
    37c8:	2180      	movs	r1, #128	; 0x80
    37ca:	7111      	strb	r1, [r2, #4]
    37cc:	6802      	ldr	r2, [r0, #0]
    37ce:	18d3      	adds	r3, r2, r3
    37d0:	2202      	movs	r2, #2
    37d2:	71da      	strb	r2, [r3, #7]
    37d4:	e7f3      	b.n	37be <usb_device_endpoint_abort_job+0x1e>

000037d6 <usb_device_endpoint_is_halted>:
    37d6:	230f      	movs	r3, #15
    37d8:	400b      	ands	r3, r1
    37da:	b249      	sxtb	r1, r1
    37dc:	2900      	cmp	r1, #0
    37de:	db07      	blt.n	37f0 <usb_device_endpoint_is_halted+0x1a>
    37e0:	6802      	ldr	r2, [r0, #0]
    37e2:	3308      	adds	r3, #8
    37e4:	015b      	lsls	r3, r3, #5
    37e6:	18d3      	adds	r3, r2, r3
    37e8:	7998      	ldrb	r0, [r3, #6]
    37ea:	06c0      	lsls	r0, r0, #27
    37ec:	0fc0      	lsrs	r0, r0, #31
    37ee:	4770      	bx	lr
    37f0:	6802      	ldr	r2, [r0, #0]
    37f2:	3308      	adds	r3, #8
    37f4:	015b      	lsls	r3, r3, #5
    37f6:	18d3      	adds	r3, r2, r3
    37f8:	7998      	ldrb	r0, [r3, #6]
    37fa:	0680      	lsls	r0, r0, #26
    37fc:	0fc0      	lsrs	r0, r0, #31
    37fe:	e7f6      	b.n	37ee <usb_device_endpoint_is_halted+0x18>

00003800 <usb_device_endpoint_set_halt>:
    3800:	230f      	movs	r3, #15
    3802:	400b      	ands	r3, r1
    3804:	b249      	sxtb	r1, r1
    3806:	2900      	cmp	r1, #0
    3808:	db06      	blt.n	3818 <usb_device_endpoint_set_halt+0x18>
    380a:	6802      	ldr	r2, [r0, #0]
    380c:	3308      	adds	r3, #8
    380e:	015b      	lsls	r3, r3, #5
    3810:	18d3      	adds	r3, r2, r3
    3812:	2210      	movs	r2, #16
    3814:	715a      	strb	r2, [r3, #5]
    3816:	4770      	bx	lr
    3818:	6802      	ldr	r2, [r0, #0]
    381a:	3308      	adds	r3, #8
    381c:	015b      	lsls	r3, r3, #5
    381e:	18d3      	adds	r3, r2, r3
    3820:	2220      	movs	r2, #32
    3822:	715a      	strb	r2, [r3, #5]
    3824:	e7f7      	b.n	3816 <usb_device_endpoint_set_halt+0x16>

00003826 <usb_device_endpoint_clear_halt>:
    3826:	b530      	push	{r4, r5, lr}
    3828:	230f      	movs	r3, #15
    382a:	400b      	ands	r3, r1
    382c:	b249      	sxtb	r1, r1
    382e:	2900      	cmp	r1, #0
    3830:	db1d      	blt.n	386e <usb_device_endpoint_clear_halt+0x48>
    3832:	0159      	lsls	r1, r3, #5
    3834:	6802      	ldr	r2, [r0, #0]
    3836:	1852      	adds	r2, r2, r1
    3838:	2483      	movs	r4, #131	; 0x83
    383a:	0064      	lsls	r4, r4, #1
    383c:	5d14      	ldrb	r4, [r2, r4]
    383e:	06e4      	lsls	r4, r4, #27
    3840:	d514      	bpl.n	386c <usb_device_endpoint_clear_halt+0x46>
    3842:	2510      	movs	r5, #16
    3844:	2482      	movs	r4, #130	; 0x82
    3846:	0064      	lsls	r4, r4, #1
    3848:	5515      	strb	r5, [r2, r4]
    384a:	6802      	ldr	r2, [r0, #0]
    384c:	1852      	adds	r2, r2, r1
    384e:	2108      	movs	r1, #8
    3850:	31ff      	adds	r1, #255	; 0xff
    3852:	5c51      	ldrb	r1, [r2, r1]
    3854:	0689      	lsls	r1, r1, #26
    3856:	d509      	bpl.n	386c <usb_device_endpoint_clear_halt+0x46>
    3858:	3ce4      	subs	r4, #228	; 0xe4
    385a:	2108      	movs	r1, #8
    385c:	31ff      	adds	r1, #255	; 0xff
    385e:	5454      	strb	r4, [r2, r1]
    3860:	6802      	ldr	r2, [r0, #0]
    3862:	3308      	adds	r3, #8
    3864:	015b      	lsls	r3, r3, #5
    3866:	18d3      	adds	r3, r2, r3
    3868:	2201      	movs	r2, #1
    386a:	711a      	strb	r2, [r3, #4]
    386c:	bd30      	pop	{r4, r5, pc}
    386e:	0159      	lsls	r1, r3, #5
    3870:	6802      	ldr	r2, [r0, #0]
    3872:	1852      	adds	r2, r2, r1
    3874:	2483      	movs	r4, #131	; 0x83
    3876:	0064      	lsls	r4, r4, #1
    3878:	5d14      	ldrb	r4, [r2, r4]
    387a:	06a4      	lsls	r4, r4, #26
    387c:	d5f6      	bpl.n	386c <usb_device_endpoint_clear_halt+0x46>
    387e:	2520      	movs	r5, #32
    3880:	2482      	movs	r4, #130	; 0x82
    3882:	0064      	lsls	r4, r4, #1
    3884:	5515      	strb	r5, [r2, r4]
    3886:	6802      	ldr	r2, [r0, #0]
    3888:	1852      	adds	r2, r2, r1
    388a:	2108      	movs	r1, #8
    388c:	31ff      	adds	r1, #255	; 0xff
    388e:	5c51      	ldrb	r1, [r2, r1]
    3890:	0649      	lsls	r1, r1, #25
    3892:	d5eb      	bpl.n	386c <usb_device_endpoint_clear_halt+0x46>
    3894:	3cc4      	subs	r4, #196	; 0xc4
    3896:	2108      	movs	r1, #8
    3898:	31ff      	adds	r1, #255	; 0xff
    389a:	5454      	strb	r4, [r2, r1]
    389c:	6802      	ldr	r2, [r0, #0]
    389e:	3308      	adds	r3, #8
    38a0:	015b      	lsls	r3, r3, #5
    38a2:	18d3      	adds	r3, r2, r3
    38a4:	2202      	movs	r2, #2
    38a6:	711a      	strb	r2, [r3, #4]
    38a8:	e7e0      	b.n	386c <usb_device_endpoint_clear_halt+0x46>
	...

000038ac <usb_device_endpoint_write_buffer_job>:
    38ac:	b530      	push	{r4, r5, lr}
    38ae:	000c      	movs	r4, r1
    38b0:	3408      	adds	r4, #8
    38b2:	0164      	lsls	r4, r4, #5
    38b4:	6805      	ldr	r5, [r0, #0]
    38b6:	5d64      	ldrb	r4, [r4, r5]
    38b8:	0664      	lsls	r4, r4, #25
    38ba:	0f64      	lsrs	r4, r4, #29
    38bc:	251c      	movs	r5, #28
    38be:	2c00      	cmp	r4, #0
    38c0:	d101      	bne.n	38c6 <usb_device_endpoint_write_buffer_job+0x1a>
    38c2:	0028      	movs	r0, r5
    38c4:	bd30      	pop	{r4, r5, pc}
    38c6:	014c      	lsls	r4, r1, #5
    38c8:	4d0b      	ldr	r5, [pc, #44]	; (38f8 <usb_device_endpoint_write_buffer_job+0x4c>)
    38ca:	192d      	adds	r5, r5, r4
    38cc:	002c      	movs	r4, r5
    38ce:	612a      	str	r2, [r5, #16]
    38d0:	696a      	ldr	r2, [r5, #20]
    38d2:	4d0a      	ldr	r5, [pc, #40]	; (38fc <usb_device_endpoint_write_buffer_job+0x50>)
    38d4:	402a      	ands	r2, r5
    38d6:	6162      	str	r2, [r4, #20]
    38d8:	6962      	ldr	r2, [r4, #20]
    38da:	049b      	lsls	r3, r3, #18
    38dc:	0c9b      	lsrs	r3, r3, #18
    38de:	0b92      	lsrs	r2, r2, #14
    38e0:	0392      	lsls	r2, r2, #14
    38e2:	4313      	orrs	r3, r2
    38e4:	6163      	str	r3, [r4, #20]
    38e6:	6803      	ldr	r3, [r0, #0]
    38e8:	3108      	adds	r1, #8
    38ea:	0149      	lsls	r1, r1, #5
    38ec:	1859      	adds	r1, r3, r1
    38ee:	2380      	movs	r3, #128	; 0x80
    38f0:	714b      	strb	r3, [r1, #5]
    38f2:	2500      	movs	r5, #0
    38f4:	e7e5      	b.n	38c2 <usb_device_endpoint_write_buffer_job+0x16>
    38f6:	46c0      	nop			; (mov r8, r8)
    38f8:	20000628 	.word	0x20000628
    38fc:	f0003fff 	.word	0xf0003fff

00003900 <usb_device_endpoint_read_buffer_job>:
    3900:	b530      	push	{r4, r5, lr}
    3902:	000c      	movs	r4, r1
    3904:	3408      	adds	r4, #8
    3906:	0164      	lsls	r4, r4, #5
    3908:	6805      	ldr	r5, [r0, #0]
    390a:	5d64      	ldrb	r4, [r4, r5]
    390c:	0764      	lsls	r4, r4, #29
    390e:	251c      	movs	r5, #28
    3910:	2c00      	cmp	r4, #0
    3912:	d101      	bne.n	3918 <usb_device_endpoint_read_buffer_job+0x18>
    3914:	0028      	movs	r0, r5
    3916:	bd30      	pop	{r4, r5, pc}
    3918:	4c0b      	ldr	r4, [pc, #44]	; (3948 <usb_device_endpoint_read_buffer_job+0x48>)
    391a:	014d      	lsls	r5, r1, #5
    391c:	512a      	str	r2, [r5, r4]
    391e:	1962      	adds	r2, r4, r5
    3920:	6854      	ldr	r4, [r2, #4]
    3922:	049b      	lsls	r3, r3, #18
    3924:	091b      	lsrs	r3, r3, #4
    3926:	4d09      	ldr	r5, [pc, #36]	; (394c <usb_device_endpoint_read_buffer_job+0x4c>)
    3928:	402c      	ands	r4, r5
    392a:	4323      	orrs	r3, r4
    392c:	6053      	str	r3, [r2, #4]
    392e:	6853      	ldr	r3, [r2, #4]
    3930:	0b9b      	lsrs	r3, r3, #14
    3932:	039b      	lsls	r3, r3, #14
    3934:	6053      	str	r3, [r2, #4]
    3936:	6803      	ldr	r3, [r0, #0]
    3938:	3108      	adds	r1, #8
    393a:	0149      	lsls	r1, r1, #5
    393c:	1859      	adds	r1, r3, r1
    393e:	2340      	movs	r3, #64	; 0x40
    3940:	710b      	strb	r3, [r1, #4]
    3942:	2500      	movs	r5, #0
    3944:	e7e6      	b.n	3914 <usb_device_endpoint_read_buffer_job+0x14>
    3946:	46c0      	nop			; (mov r8, r8)
    3948:	20000628 	.word	0x20000628
    394c:	f0003fff 	.word	0xf0003fff

00003950 <usb_device_endpoint_setup_buffer_job>:
    3950:	4b09      	ldr	r3, [pc, #36]	; (3978 <usb_device_endpoint_setup_buffer_job+0x28>)
    3952:	6019      	str	r1, [r3, #0]
    3954:	685a      	ldr	r2, [r3, #4]
    3956:	4909      	ldr	r1, [pc, #36]	; (397c <usb_device_endpoint_setup_buffer_job+0x2c>)
    3958:	4011      	ands	r1, r2
    395a:	2280      	movs	r2, #128	; 0x80
    395c:	0292      	lsls	r2, r2, #10
    395e:	430a      	orrs	r2, r1
    3960:	605a      	str	r2, [r3, #4]
    3962:	685a      	ldr	r2, [r3, #4]
    3964:	0b92      	lsrs	r2, r2, #14
    3966:	0392      	lsls	r2, r2, #14
    3968:	605a      	str	r2, [r3, #4]
    396a:	6802      	ldr	r2, [r0, #0]
    396c:	2140      	movs	r1, #64	; 0x40
    396e:	2382      	movs	r3, #130	; 0x82
    3970:	005b      	lsls	r3, r3, #1
    3972:	54d1      	strb	r1, [r2, r3]
    3974:	2000      	movs	r0, #0
    3976:	4770      	bx	lr
    3978:	20000628 	.word	0x20000628
    397c:	f0003fff 	.word	0xf0003fff

00003980 <usb_enable>:
    3980:	6802      	ldr	r2, [r0, #0]
    3982:	7813      	ldrb	r3, [r2, #0]
    3984:	2102      	movs	r1, #2
    3986:	430b      	orrs	r3, r1
    3988:	7013      	strb	r3, [r2, #0]
    398a:	6802      	ldr	r2, [r0, #0]
    398c:	7893      	ldrb	r3, [r2, #2]
    398e:	2b02      	cmp	r3, #2
    3990:	d0fc      	beq.n	398c <usb_enable+0xc>
    3992:	4770      	bx	lr

00003994 <USB_Handler>:
    3994:	b5f0      	push	{r4, r5, r6, r7, lr}
    3996:	46de      	mov	lr, fp
    3998:	4657      	mov	r7, sl
    399a:	464e      	mov	r6, r9
    399c:	4645      	mov	r5, r8
    399e:	b5e0      	push	{r5, r6, r7, lr}
    39a0:	b083      	sub	sp, #12
    39a2:	4bc2      	ldr	r3, [pc, #776]	; (3cac <USB_Handler+0x318>)
    39a4:	681f      	ldr	r7, [r3, #0]
    39a6:	683d      	ldr	r5, [r7, #0]
    39a8:	782b      	ldrb	r3, [r5, #0]
    39aa:	09db      	lsrs	r3, r3, #7
    39ac:	d114      	bne.n	39d8 <USB_Handler+0x44>
    39ae:	8c2e      	ldrh	r6, [r5, #32]
    39b0:	b2b6      	uxth	r6, r6
    39b2:	2e00      	cmp	r6, #0
    39b4:	d000      	beq.n	39b8 <USB_Handler+0x24>
    39b6:	e1a9      	b.n	3d0c <USB_Handler+0x378>
    39b8:	8bae      	ldrh	r6, [r5, #28]
    39ba:	b2b6      	uxth	r6, r6
    39bc:	23ab      	movs	r3, #171	; 0xab
    39be:	005b      	lsls	r3, r3, #1
    39c0:	5afb      	ldrh	r3, [r7, r3]
    39c2:	22aa      	movs	r2, #170	; 0xaa
    39c4:	0052      	lsls	r2, r2, #1
    39c6:	5abd      	ldrh	r5, [r7, r2]
    39c8:	401d      	ands	r5, r3
    39ca:	4035      	ands	r5, r6
    39cc:	2400      	movs	r4, #0
    39ce:	4fb8      	ldr	r7, [pc, #736]	; (3cb0 <USB_Handler+0x31c>)
    39d0:	4bb6      	ldr	r3, [pc, #728]	; (3cac <USB_Handler+0x318>)
    39d2:	4699      	mov	r9, r3
    39d4:	4698      	mov	r8, r3
    39d6:	e184      	b.n	3ce2 <USB_Handler+0x34e>
    39d8:	8c2b      	ldrh	r3, [r5, #32]
    39da:	b29b      	uxth	r3, r3
    39dc:	2b00      	cmp	r3, #0
    39de:	d100      	bne.n	39e2 <USB_Handler+0x4e>
    39e0:	e0de      	b.n	3ba0 <USB_Handler+0x20c>
    39e2:	8c28      	ldrh	r0, [r5, #32]
    39e4:	b280      	uxth	r0, r0
    39e6:	4bb3      	ldr	r3, [pc, #716]	; (3cb4 <USB_Handler+0x320>)
    39e8:	4798      	blx	r3
    39ea:	0004      	movs	r4, r0
    39ec:	281f      	cmp	r0, #31
    39ee:	d900      	bls.n	39f2 <USB_Handler+0x5e>
    39f0:	e0d6      	b.n	3ba0 <USB_Handler+0x20c>
    39f2:	0003      	movs	r3, r0
    39f4:	3308      	adds	r3, #8
    39f6:	015b      	lsls	r3, r3, #5
    39f8:	18ed      	adds	r5, r5, r3
    39fa:	79ed      	ldrb	r5, [r5, #7]
    39fc:	b2ed      	uxtb	r5, r5
    39fe:	07ab      	lsls	r3, r5, #30
    3a00:	d041      	beq.n	3a86 <USB_Handler+0xf2>
    3a02:	4aad      	ldr	r2, [pc, #692]	; (3cb8 <USB_Handler+0x324>)
    3a04:	2301      	movs	r3, #1
    3a06:	4083      	lsls	r3, r0
    3a08:	6811      	ldr	r1, [r2, #0]
    3a0a:	4399      	bics	r1, r3
    3a0c:	6011      	str	r1, [r2, #0]
    3a0e:	0003      	movs	r3, r0
    3a10:	3308      	adds	r3, #8
    3a12:	015b      	lsls	r3, r3, #5
    3a14:	683a      	ldr	r2, [r7, #0]
    3a16:	4694      	mov	ip, r2
    3a18:	4463      	add	r3, ip
    3a1a:	2203      	movs	r2, #3
    3a1c:	71da      	strb	r2, [r3, #7]
    3a1e:	183b      	adds	r3, r7, r0
    3a20:	33ae      	adds	r3, #174	; 0xae
    3a22:	781b      	ldrb	r3, [r3, #0]
    3a24:	07db      	lsls	r3, r3, #31
    3a26:	d52e      	bpl.n	3a86 <USB_Handler+0xf2>
    3a28:	4ba4      	ldr	r3, [pc, #656]	; (3cbc <USB_Handler+0x328>)
    3a2a:	7018      	strb	r0, [r3, #0]
    3a2c:	683a      	ldr	r2, [r7, #0]
    3a2e:	0003      	movs	r3, r0
    3a30:	3308      	adds	r3, #8
    3a32:	015b      	lsls	r3, r3, #5
    3a34:	5c9b      	ldrb	r3, [r3, r2]
    3a36:	079b      	lsls	r3, r3, #30
    3a38:	0f9b      	lsrs	r3, r3, #30
    3a3a:	2b01      	cmp	r3, #1
    3a3c:	d100      	bne.n	3a40 <USB_Handler+0xac>
    3a3e:	e081      	b.n	3b44 <USB_Handler+0x1b0>
    3a40:	0142      	lsls	r2, r0, #5
    3a42:	4b9f      	ldr	r3, [pc, #636]	; (3cc0 <USB_Handler+0x32c>)
    3a44:	189b      	adds	r3, r3, r2
    3a46:	685a      	ldr	r2, [r3, #4]
    3a48:	0112      	lsls	r2, r2, #4
    3a4a:	0c92      	lsrs	r2, r2, #18
    3a4c:	b290      	uxth	r0, r2
    3a4e:	499b      	ldr	r1, [pc, #620]	; (3cbc <USB_Handler+0x328>)
    3a50:	804a      	strh	r2, [r1, #2]
    3a52:	685a      	ldr	r2, [r3, #4]
    3a54:	0492      	lsls	r2, r2, #18
    3a56:	0c92      	lsrs	r2, r2, #18
    3a58:	808a      	strh	r2, [r1, #4]
    3a5a:	685a      	ldr	r2, [r3, #4]
    3a5c:	4999      	ldr	r1, [pc, #612]	; (3cc4 <USB_Handler+0x330>)
    3a5e:	400a      	ands	r2, r1
    3a60:	605a      	str	r2, [r3, #4]
    3a62:	2800      	cmp	r0, #0
    3a64:	d107      	bne.n	3a76 <USB_Handler+0xe2>
    3a66:	0162      	lsls	r2, r4, #5
    3a68:	4b95      	ldr	r3, [pc, #596]	; (3cc0 <USB_Handler+0x32c>)
    3a6a:	189b      	adds	r3, r3, r2
    3a6c:	685b      	ldr	r3, [r3, #4]
    3a6e:	049b      	lsls	r3, r3, #18
    3a70:	0c9b      	lsrs	r3, r3, #18
    3a72:	4a92      	ldr	r2, [pc, #584]	; (3cbc <USB_Handler+0x328>)
    3a74:	8053      	strh	r3, [r2, #2]
    3a76:	4b8d      	ldr	r3, [pc, #564]	; (3cac <USB_Handler+0x318>)
    3a78:	6818      	ldr	r0, [r3, #0]
    3a7a:	1ca3      	adds	r3, r4, #2
    3a7c:	011b      	lsls	r3, r3, #4
    3a7e:	18c3      	adds	r3, r0, r3
    3a80:	685b      	ldr	r3, [r3, #4]
    3a82:	498e      	ldr	r1, [pc, #568]	; (3cbc <USB_Handler+0x328>)
    3a84:	4798      	blx	r3
    3a86:	076b      	lsls	r3, r5, #29
    3a88:	d50e      	bpl.n	3aa8 <USB_Handler+0x114>
    3a8a:	4a8b      	ldr	r2, [pc, #556]	; (3cb8 <USB_Handler+0x324>)
    3a8c:	2301      	movs	r3, #1
    3a8e:	40a3      	lsls	r3, r4
    3a90:	6811      	ldr	r1, [r2, #0]
    3a92:	4399      	bics	r1, r3
    3a94:	6011      	str	r1, [r2, #0]
    3a96:	4b85      	ldr	r3, [pc, #532]	; (3cac <USB_Handler+0x318>)
    3a98:	681b      	ldr	r3, [r3, #0]
    3a9a:	681b      	ldr	r3, [r3, #0]
    3a9c:	0022      	movs	r2, r4
    3a9e:	3208      	adds	r2, #8
    3aa0:	0152      	lsls	r2, r2, #5
    3aa2:	189b      	adds	r3, r3, r2
    3aa4:	2204      	movs	r2, #4
    3aa6:	71da      	strb	r2, [r3, #7]
    3aa8:	072b      	lsls	r3, r5, #28
    3aaa:	d514      	bpl.n	3ad6 <USB_Handler+0x142>
    3aac:	4a82      	ldr	r2, [pc, #520]	; (3cb8 <USB_Handler+0x324>)
    3aae:	2301      	movs	r3, #1
    3ab0:	40a3      	lsls	r3, r4
    3ab2:	6811      	ldr	r1, [r2, #0]
    3ab4:	4399      	bics	r1, r3
    3ab6:	6011      	str	r1, [r2, #0]
    3ab8:	4b7c      	ldr	r3, [pc, #496]	; (3cac <USB_Handler+0x318>)
    3aba:	6818      	ldr	r0, [r3, #0]
    3abc:	0023      	movs	r3, r4
    3abe:	3308      	adds	r3, #8
    3ac0:	015b      	lsls	r3, r3, #5
    3ac2:	6802      	ldr	r2, [r0, #0]
    3ac4:	4694      	mov	ip, r2
    3ac6:	4463      	add	r3, ip
    3ac8:	2208      	movs	r2, #8
    3aca:	71da      	strb	r2, [r3, #7]
    3acc:	1903      	adds	r3, r0, r4
    3ace:	33ae      	adds	r3, #174	; 0xae
    3ad0:	781b      	ldrb	r3, [r3, #0]
    3ad2:	079b      	lsls	r3, r3, #30
    3ad4:	d447      	bmi.n	3b66 <USB_Handler+0x1d2>
    3ad6:	06eb      	lsls	r3, r5, #27
    3ad8:	d514      	bpl.n	3b04 <USB_Handler+0x170>
    3ada:	4a77      	ldr	r2, [pc, #476]	; (3cb8 <USB_Handler+0x324>)
    3adc:	2301      	movs	r3, #1
    3ade:	40a3      	lsls	r3, r4
    3ae0:	6811      	ldr	r1, [r2, #0]
    3ae2:	4399      	bics	r1, r3
    3ae4:	6011      	str	r1, [r2, #0]
    3ae6:	4b71      	ldr	r3, [pc, #452]	; (3cac <USB_Handler+0x318>)
    3ae8:	6818      	ldr	r0, [r3, #0]
    3aea:	0023      	movs	r3, r4
    3aec:	3308      	adds	r3, #8
    3aee:	015b      	lsls	r3, r3, #5
    3af0:	6802      	ldr	r2, [r0, #0]
    3af2:	4694      	mov	ip, r2
    3af4:	4463      	add	r3, ip
    3af6:	2210      	movs	r2, #16
    3af8:	71da      	strb	r2, [r3, #7]
    3afa:	1903      	adds	r3, r0, r4
    3afc:	33ae      	adds	r3, #174	; 0xae
    3afe:	781b      	ldrb	r3, [r3, #0]
    3b00:	075b      	lsls	r3, r3, #29
    3b02:	d43e      	bmi.n	3b82 <USB_Handler+0x1ee>
    3b04:	06ab      	lsls	r3, r5, #26
    3b06:	d400      	bmi.n	3b0a <USB_Handler+0x176>
    3b08:	e0b0      	b.n	3c6c <USB_Handler+0x2d8>
    3b0a:	4a6b      	ldr	r2, [pc, #428]	; (3cb8 <USB_Handler+0x324>)
    3b0c:	2301      	movs	r3, #1
    3b0e:	40a3      	lsls	r3, r4
    3b10:	6811      	ldr	r1, [r2, #0]
    3b12:	4399      	bics	r1, r3
    3b14:	6011      	str	r1, [r2, #0]
    3b16:	4b65      	ldr	r3, [pc, #404]	; (3cac <USB_Handler+0x318>)
    3b18:	6818      	ldr	r0, [r3, #0]
    3b1a:	0023      	movs	r3, r4
    3b1c:	3308      	adds	r3, #8
    3b1e:	015b      	lsls	r3, r3, #5
    3b20:	6802      	ldr	r2, [r0, #0]
    3b22:	4694      	mov	ip, r2
    3b24:	4463      	add	r3, ip
    3b26:	2220      	movs	r2, #32
    3b28:	71da      	strb	r2, [r3, #7]
    3b2a:	1903      	adds	r3, r0, r4
    3b2c:	33ae      	adds	r3, #174	; 0xae
    3b2e:	781b      	ldrb	r3, [r3, #0]
    3b30:	071b      	lsls	r3, r3, #28
    3b32:	d400      	bmi.n	3b36 <USB_Handler+0x1a2>
    3b34:	e09a      	b.n	3c6c <USB_Handler+0x2d8>
    3b36:	4961      	ldr	r1, [pc, #388]	; (3cbc <USB_Handler+0x328>)
    3b38:	700c      	strb	r4, [r1, #0]
    3b3a:	0124      	lsls	r4, r4, #4
    3b3c:	1904      	adds	r4, r0, r4
    3b3e:	6b23      	ldr	r3, [r4, #48]	; 0x30
    3b40:	4798      	blx	r3
    3b42:	e093      	b.n	3c6c <USB_Handler+0x2d8>
    3b44:	0142      	lsls	r2, r0, #5
    3b46:	4b5e      	ldr	r3, [pc, #376]	; (3cc0 <USB_Handler+0x32c>)
    3b48:	189b      	adds	r3, r3, r2
    3b4a:	685a      	ldr	r2, [r3, #4]
    3b4c:	0492      	lsls	r2, r2, #18
    3b4e:	0c92      	lsrs	r2, r2, #18
    3b50:	495a      	ldr	r1, [pc, #360]	; (3cbc <USB_Handler+0x328>)
    3b52:	804a      	strh	r2, [r1, #2]
    3b54:	685a      	ldr	r2, [r3, #4]
    3b56:	0112      	lsls	r2, r2, #4
    3b58:	0c92      	lsrs	r2, r2, #18
    3b5a:	808a      	strh	r2, [r1, #4]
    3b5c:	685a      	ldr	r2, [r3, #4]
    3b5e:	0b92      	lsrs	r2, r2, #14
    3b60:	0392      	lsls	r2, r2, #14
    3b62:	605a      	str	r2, [r3, #4]
    3b64:	e787      	b.n	3a76 <USB_Handler+0xe2>
    3b66:	4955      	ldr	r1, [pc, #340]	; (3cbc <USB_Handler+0x328>)
    3b68:	700c      	strb	r4, [r1, #0]
    3b6a:	0162      	lsls	r2, r4, #5
    3b6c:	4b54      	ldr	r3, [pc, #336]	; (3cc0 <USB_Handler+0x32c>)
    3b6e:	189b      	adds	r3, r3, r2
    3b70:	89db      	ldrh	r3, [r3, #14]
    3b72:	221f      	movs	r2, #31
    3b74:	4013      	ands	r3, r2
    3b76:	704b      	strb	r3, [r1, #1]
    3b78:	0123      	lsls	r3, r4, #4
    3b7a:	18c3      	adds	r3, r0, r3
    3b7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    3b7e:	4798      	blx	r3
    3b80:	e7a9      	b.n	3ad6 <USB_Handler+0x142>
    3b82:	494e      	ldr	r1, [pc, #312]	; (3cbc <USB_Handler+0x328>)
    3b84:	700c      	strb	r4, [r1, #0]
    3b86:	0162      	lsls	r2, r4, #5
    3b88:	4b4d      	ldr	r3, [pc, #308]	; (3cc0 <USB_Handler+0x32c>)
    3b8a:	189b      	adds	r3, r3, r2
    3b8c:	685b      	ldr	r3, [r3, #4]
    3b8e:	011b      	lsls	r3, r3, #4
    3b90:	0c9b      	lsrs	r3, r3, #18
    3b92:	804b      	strh	r3, [r1, #2]
    3b94:	0123      	lsls	r3, r4, #4
    3b96:	18c3      	adds	r3, r0, r3
    3b98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    3b9a:	2100      	movs	r1, #0
    3b9c:	4798      	blx	r3
    3b9e:	e7b1      	b.n	3b04 <USB_Handler+0x170>
    3ba0:	8bac      	ldrh	r4, [r5, #28]
    3ba2:	b2a4      	uxth	r4, r4
    3ba4:	0763      	lsls	r3, r4, #29
    3ba6:	d505      	bpl.n	3bb4 <USB_Handler+0x220>
    3ba8:	2304      	movs	r3, #4
    3baa:	83ab      	strh	r3, [r5, #28]
    3bac:	33a1      	adds	r3, #161	; 0xa1
    3bae:	5cfb      	ldrb	r3, [r7, r3]
    3bb0:	07db      	lsls	r3, r3, #31
    3bb2:	d462      	bmi.n	3c7a <USB_Handler+0x2e6>
    3bb4:	0723      	lsls	r3, r4, #28
    3bb6:	d50b      	bpl.n	3bd0 <USB_Handler+0x23c>
    3bb8:	2200      	movs	r2, #0
    3bba:	4b3f      	ldr	r3, [pc, #252]	; (3cb8 <USB_Handler+0x324>)
    3bbc:	601a      	str	r2, [r3, #0]
    3bbe:	4b3b      	ldr	r3, [pc, #236]	; (3cac <USB_Handler+0x318>)
    3bc0:	6818      	ldr	r0, [r3, #0]
    3bc2:	2308      	movs	r3, #8
    3bc4:	6802      	ldr	r2, [r0, #0]
    3bc6:	8393      	strh	r3, [r2, #28]
    3bc8:	339d      	adds	r3, #157	; 0x9d
    3bca:	5cc3      	ldrb	r3, [r0, r3]
    3bcc:	079b      	lsls	r3, r3, #30
    3bce:	d458      	bmi.n	3c82 <USB_Handler+0x2ee>
    3bd0:	0663      	lsls	r3, r4, #25
    3bd2:	d508      	bpl.n	3be6 <USB_Handler+0x252>
    3bd4:	4b35      	ldr	r3, [pc, #212]	; (3cac <USB_Handler+0x318>)
    3bd6:	6818      	ldr	r0, [r3, #0]
    3bd8:	2340      	movs	r3, #64	; 0x40
    3bda:	6802      	ldr	r2, [r0, #0]
    3bdc:	8393      	strh	r3, [r2, #28]
    3bde:	3365      	adds	r3, #101	; 0x65
    3be0:	5cc3      	ldrb	r3, [r0, r3]
    3be2:	06db      	lsls	r3, r3, #27
    3be4:	d450      	bmi.n	3c88 <USB_Handler+0x2f4>
    3be6:	06a3      	lsls	r3, r4, #26
    3be8:	d508      	bpl.n	3bfc <USB_Handler+0x268>
    3bea:	4b30      	ldr	r3, [pc, #192]	; (3cac <USB_Handler+0x318>)
    3bec:	6818      	ldr	r0, [r3, #0]
    3bee:	2320      	movs	r3, #32
    3bf0:	6802      	ldr	r2, [r0, #0]
    3bf2:	8393      	strh	r3, [r2, #28]
    3bf4:	3385      	adds	r3, #133	; 0x85
    3bf6:	5cc3      	ldrb	r3, [r0, r3]
    3bf8:	071b      	lsls	r3, r3, #28
    3bfa:	d448      	bmi.n	3c8e <USB_Handler+0x2fa>
    3bfc:	06e3      	lsls	r3, r4, #27
    3bfe:	d508      	bpl.n	3c12 <USB_Handler+0x27e>
    3c00:	4b2a      	ldr	r3, [pc, #168]	; (3cac <USB_Handler+0x318>)
    3c02:	6818      	ldr	r0, [r3, #0]
    3c04:	2310      	movs	r3, #16
    3c06:	6802      	ldr	r2, [r0, #0]
    3c08:	8393      	strh	r3, [r2, #28]
    3c0a:	3395      	adds	r3, #149	; 0x95
    3c0c:	5cc3      	ldrb	r3, [r0, r3]
    3c0e:	075b      	lsls	r3, r3, #29
    3c10:	d440      	bmi.n	3c94 <USB_Handler+0x300>
    3c12:	0623      	lsls	r3, r4, #24
    3c14:	d50b      	bpl.n	3c2e <USB_Handler+0x29a>
    3c16:	2200      	movs	r2, #0
    3c18:	4b27      	ldr	r3, [pc, #156]	; (3cb8 <USB_Handler+0x324>)
    3c1a:	601a      	str	r2, [r3, #0]
    3c1c:	4b23      	ldr	r3, [pc, #140]	; (3cac <USB_Handler+0x318>)
    3c1e:	6818      	ldr	r0, [r3, #0]
    3c20:	2380      	movs	r3, #128	; 0x80
    3c22:	6802      	ldr	r2, [r0, #0]
    3c24:	8393      	strh	r3, [r2, #28]
    3c26:	3325      	adds	r3, #37	; 0x25
    3c28:	5cc3      	ldrb	r3, [r0, r3]
    3c2a:	069b      	lsls	r3, r3, #26
    3c2c:	d435      	bmi.n	3c9a <USB_Handler+0x306>
    3c2e:	05e3      	lsls	r3, r4, #23
    3c30:	d50c      	bpl.n	3c4c <USB_Handler+0x2b8>
    3c32:	2200      	movs	r2, #0
    3c34:	4b20      	ldr	r3, [pc, #128]	; (3cb8 <USB_Handler+0x324>)
    3c36:	601a      	str	r2, [r3, #0]
    3c38:	4b1c      	ldr	r3, [pc, #112]	; (3cac <USB_Handler+0x318>)
    3c3a:	6818      	ldr	r0, [r3, #0]
    3c3c:	2380      	movs	r3, #128	; 0x80
    3c3e:	005b      	lsls	r3, r3, #1
    3c40:	6802      	ldr	r2, [r0, #0]
    3c42:	8393      	strh	r3, [r2, #28]
    3c44:	3b5b      	subs	r3, #91	; 0x5b
    3c46:	5cc3      	ldrb	r3, [r0, r3]
    3c48:	065b      	lsls	r3, r3, #25
    3c4a:	d429      	bmi.n	3ca0 <USB_Handler+0x30c>
    3c4c:	05a3      	lsls	r3, r4, #22
    3c4e:	d50d      	bpl.n	3c6c <USB_Handler+0x2d8>
    3c50:	2200      	movs	r2, #0
    3c52:	4b19      	ldr	r3, [pc, #100]	; (3cb8 <USB_Handler+0x324>)
    3c54:	601a      	str	r2, [r3, #0]
    3c56:	4b15      	ldr	r3, [pc, #84]	; (3cac <USB_Handler+0x318>)
    3c58:	6818      	ldr	r0, [r3, #0]
    3c5a:	2380      	movs	r3, #128	; 0x80
    3c5c:	009b      	lsls	r3, r3, #2
    3c5e:	6802      	ldr	r2, [r0, #0]
    3c60:	8393      	strh	r3, [r2, #28]
    3c62:	3b5c      	subs	r3, #92	; 0x5c
    3c64:	3bff      	subs	r3, #255	; 0xff
    3c66:	5cc3      	ldrb	r3, [r0, r3]
    3c68:	2b7f      	cmp	r3, #127	; 0x7f
    3c6a:	d81c      	bhi.n	3ca6 <USB_Handler+0x312>
    3c6c:	b003      	add	sp, #12
    3c6e:	bc3c      	pop	{r2, r3, r4, r5}
    3c70:	4690      	mov	r8, r2
    3c72:	4699      	mov	r9, r3
    3c74:	46a2      	mov	sl, r4
    3c76:	46ab      	mov	fp, r5
    3c78:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3c7a:	687b      	ldr	r3, [r7, #4]
    3c7c:	0038      	movs	r0, r7
    3c7e:	4798      	blx	r3
    3c80:	e798      	b.n	3bb4 <USB_Handler+0x220>
    3c82:	6883      	ldr	r3, [r0, #8]
    3c84:	4798      	blx	r3
    3c86:	e7a3      	b.n	3bd0 <USB_Handler+0x23c>
    3c88:	6943      	ldr	r3, [r0, #20]
    3c8a:	4798      	blx	r3
    3c8c:	e7ab      	b.n	3be6 <USB_Handler+0x252>
    3c8e:	6903      	ldr	r3, [r0, #16]
    3c90:	4798      	blx	r3
    3c92:	e7b3      	b.n	3bfc <USB_Handler+0x268>
    3c94:	68c3      	ldr	r3, [r0, #12]
    3c96:	4798      	blx	r3
    3c98:	e7bb      	b.n	3c12 <USB_Handler+0x27e>
    3c9a:	6983      	ldr	r3, [r0, #24]
    3c9c:	4798      	blx	r3
    3c9e:	e7c6      	b.n	3c2e <USB_Handler+0x29a>
    3ca0:	69c3      	ldr	r3, [r0, #28]
    3ca2:	4798      	blx	r3
    3ca4:	e7d2      	b.n	3c4c <USB_Handler+0x2b8>
    3ca6:	6a03      	ldr	r3, [r0, #32]
    3ca8:	4798      	blx	r3
    3caa:	e7df      	b.n	3c6c <USB_Handler+0x2d8>
    3cac:	20000328 	.word	0x20000328
    3cb0:	00004a74 	.word	0x00004a74
    3cb4:	00004901 	.word	0x00004901
    3cb8:	20000338 	.word	0x20000338
    3cbc:	2000033c 	.word	0x2000033c
    3cc0:	20000628 	.word	0x20000628
    3cc4:	f0003fff 	.word	0xf0003fff
    3cc8:	0023      	movs	r3, r4
    3cca:	332e      	adds	r3, #46	; 0x2e
    3ccc:	009b      	lsls	r3, r3, #2
    3cce:	4642      	mov	r2, r8
    3cd0:	6812      	ldr	r2, [r2, #0]
    3cd2:	589b      	ldr	r3, [r3, r2]
    3cd4:	499e      	ldr	r1, [pc, #632]	; (3f50 <USB_Handler+0x5bc>)
    3cd6:	4642      	mov	r2, r8
    3cd8:	6810      	ldr	r0, [r2, #0]
    3cda:	4798      	blx	r3
    3cdc:	3401      	adds	r4, #1
    3cde:	2c07      	cmp	r4, #7
    3ce0:	d0c4      	beq.n	3c6c <USB_Handler+0x2d8>
    3ce2:	0063      	lsls	r3, r4, #1
    3ce4:	5bdb      	ldrh	r3, [r3, r7]
    3ce6:	4233      	tst	r3, r6
    3ce8:	d003      	beq.n	3cf2 <USB_Handler+0x35e>
    3cea:	464a      	mov	r2, r9
    3cec:	6812      	ldr	r2, [r2, #0]
    3cee:	6812      	ldr	r2, [r2, #0]
    3cf0:	8393      	strh	r3, [r2, #28]
    3cf2:	422b      	tst	r3, r5
    3cf4:	d0f2      	beq.n	3cdc <USB_Handler+0x348>
    3cf6:	2c06      	cmp	r4, #6
    3cf8:	d1e6      	bne.n	3cc8 <USB_Handler+0x334>
    3cfa:	4b96      	ldr	r3, [pc, #600]	; (3f54 <USB_Handler+0x5c0>)
    3cfc:	891b      	ldrh	r3, [r3, #8]
    3cfe:	091b      	lsrs	r3, r3, #4
    3d00:	2280      	movs	r2, #128	; 0x80
    3d02:	0052      	lsls	r2, r2, #1
    3d04:	4013      	ands	r3, r2
    3d06:	4a92      	ldr	r2, [pc, #584]	; (3f50 <USB_Handler+0x5bc>)
    3d08:	6013      	str	r3, [r2, #0]
    3d0a:	e7dd      	b.n	3cc8 <USB_Handler+0x334>
    3d0c:	003c      	movs	r4, r7
    3d0e:	3459      	adds	r4, #89	; 0x59
    3d10:	34ff      	adds	r4, #255	; 0xff
    3d12:	2300      	movs	r3, #0
    3d14:	2201      	movs	r2, #1
    3d16:	4694      	mov	ip, r2
    3d18:	325f      	adds	r2, #95	; 0x5f
    3d1a:	4691      	mov	r9, r2
    3d1c:	3a50      	subs	r2, #80	; 0x50
    3d1e:	4692      	mov	sl, r2
    3d20:	3a0d      	subs	r2, #13
    3d22:	4693      	mov	fp, r2
    3d24:	46b8      	mov	r8, r7
    3d26:	002f      	movs	r7, r5
    3d28:	e0b9      	b.n	3e9e <USB_Handler+0x50a>
    3d2a:	002a      	movs	r2, r5
    3d2c:	003d      	movs	r5, r7
    3d2e:	4647      	mov	r7, r8
    3d30:	4690      	mov	r8, r2
    3d32:	015b      	lsls	r3, r3, #5
    3d34:	18ed      	adds	r5, r5, r3
    3d36:	2308      	movs	r3, #8
    3d38:	33ff      	adds	r3, #255	; 0xff
    3d3a:	5ceb      	ldrb	r3, [r5, r3]
    3d3c:	065b      	lsls	r3, r3, #25
    3d3e:	d516      	bpl.n	3d6e <USB_Handler+0x3da>
    3d40:	2240      	movs	r2, #64	; 0x40
    3d42:	2308      	movs	r3, #8
    3d44:	33ff      	adds	r3, #255	; 0xff
    3d46:	54ea      	strb	r2, [r5, r3]
    3d48:	3b88      	subs	r3, #136	; 0x88
    3d4a:	3bff      	subs	r3, #255	; 0xff
    3d4c:	4642      	mov	r2, r8
    3d4e:	4313      	orrs	r3, r2
    3d50:	4a81      	ldr	r2, [pc, #516]	; (3f58 <USB_Handler+0x5c4>)
    3d52:	7193      	strb	r3, [r2, #6]
    3d54:	2360      	movs	r3, #96	; 0x60
    3d56:	420b      	tst	r3, r1
    3d58:	d100      	bne.n	3d5c <USB_Handler+0x3c8>
    3d5a:	e787      	b.n	3c6c <USB_Handler+0x2d8>
    3d5c:	9b01      	ldr	r3, [sp, #4]
    3d5e:	011b      	lsls	r3, r3, #4
    3d60:	18fb      	adds	r3, r7, r3
    3d62:	33e0      	adds	r3, #224	; 0xe0
    3d64:	681b      	ldr	r3, [r3, #0]
    3d66:	497c      	ldr	r1, [pc, #496]	; (3f58 <USB_Handler+0x5c4>)
    3d68:	0038      	movs	r0, r7
    3d6a:	4798      	blx	r3
    3d6c:	e77e      	b.n	3c6c <USB_Handler+0x2d8>
    3d6e:	2308      	movs	r3, #8
    3d70:	33ff      	adds	r3, #255	; 0xff
    3d72:	5ceb      	ldrb	r3, [r5, r3]
    3d74:	069b      	lsls	r3, r3, #26
    3d76:	d5ed      	bpl.n	3d54 <USB_Handler+0x3c0>
    3d78:	2220      	movs	r2, #32
    3d7a:	2308      	movs	r3, #8
    3d7c:	33ff      	adds	r3, #255	; 0xff
    3d7e:	54ea      	strb	r2, [r5, r3]
    3d80:	4b75      	ldr	r3, [pc, #468]	; (3f58 <USB_Handler+0x5c4>)
    3d82:	4642      	mov	r2, r8
    3d84:	719a      	strb	r2, [r3, #6]
    3d86:	e7e5      	b.n	3d54 <USB_Handler+0x3c0>
    3d88:	003d      	movs	r5, r7
    3d8a:	4647      	mov	r7, r8
    3d8c:	9a01      	ldr	r2, [sp, #4]
    3d8e:	0013      	movs	r3, r2
    3d90:	3308      	adds	r3, #8
    3d92:	015b      	lsls	r3, r3, #5
    3d94:	18ed      	adds	r5, r5, r3
    3d96:	2310      	movs	r3, #16
    3d98:	71eb      	strb	r3, [r5, #7]
    3d9a:	18bb      	adds	r3, r7, r2
    3d9c:	3361      	adds	r3, #97	; 0x61
    3d9e:	33ff      	adds	r3, #255	; 0xff
    3da0:	781b      	ldrb	r3, [r3, #0]
    3da2:	06db      	lsls	r3, r3, #27
    3da4:	d400      	bmi.n	3da8 <USB_Handler+0x414>
    3da6:	e761      	b.n	3c6c <USB_Handler+0x2d8>
    3da8:	0010      	movs	r0, r2
    3daa:	0152      	lsls	r2, r2, #5
    3dac:	4b69      	ldr	r3, [pc, #420]	; (3f54 <USB_Handler+0x5c0>)
    3dae:	189b      	adds	r3, r3, r2
    3db0:	685b      	ldr	r3, [r3, #4]
    3db2:	049b      	lsls	r3, r3, #18
    3db4:	0c9b      	lsrs	r3, r3, #18
    3db6:	4968      	ldr	r1, [pc, #416]	; (3f58 <USB_Handler+0x5c4>)
    3db8:	800b      	strh	r3, [r1, #0]
    3dba:	0103      	lsls	r3, r0, #4
    3dbc:	18fb      	adds	r3, r7, r3
    3dbe:	33dc      	adds	r3, #220	; 0xdc
    3dc0:	681b      	ldr	r3, [r3, #0]
    3dc2:	4640      	mov	r0, r8
    3dc4:	4798      	blx	r3
    3dc6:	e751      	b.n	3c6c <USB_Handler+0x2d8>
    3dc8:	002a      	movs	r2, r5
    3dca:	003d      	movs	r5, r7
    3dcc:	4647      	mov	r7, r8
    3dce:	4690      	mov	r8, r2
    3dd0:	015b      	lsls	r3, r3, #5
    3dd2:	18ed      	adds	r5, r5, r3
    3dd4:	2308      	movs	r3, #8
    3dd6:	33ff      	adds	r3, #255	; 0xff
    3dd8:	5ceb      	ldrb	r3, [r5, r3]
    3dda:	079b      	lsls	r3, r3, #30
    3ddc:	d51e      	bpl.n	3e1c <USB_Handler+0x488>
    3dde:	2202      	movs	r2, #2
    3de0:	2308      	movs	r3, #8
    3de2:	33ff      	adds	r3, #255	; 0xff
    3de4:	54ea      	strb	r2, [r5, r3]
    3de6:	485c      	ldr	r0, [pc, #368]	; (3f58 <USB_Handler+0x5c4>)
    3de8:	3b88      	subs	r3, #136	; 0x88
    3dea:	3bff      	subs	r3, #255	; 0xff
    3dec:	4642      	mov	r2, r8
    3dee:	4313      	orrs	r3, r2
    3df0:	7183      	strb	r3, [r0, #6]
    3df2:	9b01      	ldr	r3, [sp, #4]
    3df4:	015a      	lsls	r2, r3, #5
    3df6:	4b57      	ldr	r3, [pc, #348]	; (3f54 <USB_Handler+0x5c0>)
    3df8:	189b      	adds	r3, r3, r2
    3dfa:	3310      	adds	r3, #16
    3dfc:	685b      	ldr	r3, [r3, #4]
    3dfe:	049b      	lsls	r3, r3, #18
    3e00:	0c9b      	lsrs	r3, r3, #18
    3e02:	8043      	strh	r3, [r0, #2]
    3e04:	078b      	lsls	r3, r1, #30
    3e06:	d100      	bne.n	3e0a <USB_Handler+0x476>
    3e08:	e730      	b.n	3c6c <USB_Handler+0x2d8>
    3e0a:	9b01      	ldr	r3, [sp, #4]
    3e0c:	330d      	adds	r3, #13
    3e0e:	011b      	lsls	r3, r3, #4
    3e10:	18fb      	adds	r3, r7, r3
    3e12:	685b      	ldr	r3, [r3, #4]
    3e14:	4950      	ldr	r1, [pc, #320]	; (3f58 <USB_Handler+0x5c4>)
    3e16:	0038      	movs	r0, r7
    3e18:	4798      	blx	r3
    3e1a:	e727      	b.n	3c6c <USB_Handler+0x2d8>
    3e1c:	2308      	movs	r3, #8
    3e1e:	33ff      	adds	r3, #255	; 0xff
    3e20:	5ceb      	ldrb	r3, [r5, r3]
    3e22:	07db      	lsls	r3, r3, #31
    3e24:	d5ee      	bpl.n	3e04 <USB_Handler+0x470>
    3e26:	2201      	movs	r2, #1
    3e28:	2308      	movs	r3, #8
    3e2a:	33ff      	adds	r3, #255	; 0xff
    3e2c:	54ea      	strb	r2, [r5, r3]
    3e2e:	484a      	ldr	r0, [pc, #296]	; (3f58 <USB_Handler+0x5c4>)
    3e30:	4643      	mov	r3, r8
    3e32:	7183      	strb	r3, [r0, #6]
    3e34:	9b01      	ldr	r3, [sp, #4]
    3e36:	015b      	lsls	r3, r3, #5
    3e38:	4a46      	ldr	r2, [pc, #280]	; (3f54 <USB_Handler+0x5c0>)
    3e3a:	18d2      	adds	r2, r2, r3
    3e3c:	6853      	ldr	r3, [r2, #4]
    3e3e:	049b      	lsls	r3, r3, #18
    3e40:	0c9b      	lsrs	r3, r3, #18
    3e42:	8003      	strh	r3, [r0, #0]
    3e44:	6853      	ldr	r3, [r2, #4]
    3e46:	011b      	lsls	r3, r3, #4
    3e48:	0c9b      	lsrs	r3, r3, #18
    3e4a:	8083      	strh	r3, [r0, #4]
    3e4c:	e7da      	b.n	3e04 <USB_Handler+0x470>
    3e4e:	2208      	movs	r2, #8
    3e50:	32ff      	adds	r2, #255	; 0xff
    3e52:	5c9a      	ldrb	r2, [r3, r2]
    3e54:	0752      	lsls	r2, r2, #29
    3e56:	d56e      	bpl.n	3f36 <USB_Handler+0x5a2>
    3e58:	2004      	movs	r0, #4
    3e5a:	2208      	movs	r2, #8
    3e5c:	32ff      	adds	r2, #255	; 0xff
    3e5e:	5498      	strb	r0, [r3, r2]
    3e60:	9801      	ldr	r0, [sp, #4]
    3e62:	0142      	lsls	r2, r0, #5
    3e64:	4b3b      	ldr	r3, [pc, #236]	; (3f54 <USB_Handler+0x5c0>)
    3e66:	189b      	adds	r3, r3, r2
    3e68:	7a9b      	ldrb	r3, [r3, #10]
    3e6a:	079b      	lsls	r3, r3, #30
    3e6c:	d505      	bpl.n	3e7a <USB_Handler+0x4e6>
    3e6e:	4b39      	ldr	r3, [pc, #228]	; (3f54 <USB_Handler+0x5c0>)
    3e70:	189b      	adds	r3, r3, r2
    3e72:	7a9a      	ldrb	r2, [r3, #10]
    3e74:	2002      	movs	r0, #2
    3e76:	4382      	bics	r2, r0
    3e78:	729a      	strb	r2, [r3, #10]
    3e7a:	4b37      	ldr	r3, [pc, #220]	; (3f58 <USB_Handler+0x5c4>)
    3e7c:	4642      	mov	r2, r8
    3e7e:	719a      	strb	r2, [r3, #6]
    3e80:	9b01      	ldr	r3, [sp, #4]
    3e82:	3308      	adds	r3, #8
    3e84:	015b      	lsls	r3, r3, #5
    3e86:	683a      	ldr	r2, [r7, #0]
    3e88:	4694      	mov	ip, r2
    3e8a:	4463      	add	r3, ip
    3e8c:	79db      	ldrb	r3, [r3, #7]
    3e8e:	07db      	lsls	r3, r3, #31
    3e90:	d551      	bpl.n	3f36 <USB_Handler+0x5a2>
    3e92:	e6eb      	b.n	3c6c <USB_Handler+0x2d8>
    3e94:	3301      	adds	r3, #1
    3e96:	3401      	adds	r4, #1
    3e98:	2b08      	cmp	r3, #8
    3e9a:	d100      	bne.n	3e9e <USB_Handler+0x50a>
    3e9c:	e6e6      	b.n	3c6c <USB_Handler+0x2d8>
    3e9e:	b2dd      	uxtb	r5, r3
    3ea0:	9301      	str	r3, [sp, #4]
    3ea2:	0032      	movs	r2, r6
    3ea4:	411a      	asrs	r2, r3
    3ea6:	4661      	mov	r1, ip
    3ea8:	4211      	tst	r1, r2
    3eaa:	d0f3      	beq.n	3e94 <USB_Handler+0x500>
    3eac:	001a      	movs	r2, r3
    3eae:	3208      	adds	r2, #8
    3eb0:	0152      	lsls	r2, r2, #5
    3eb2:	18ba      	adds	r2, r7, r2
    3eb4:	79d2      	ldrb	r2, [r2, #7]
    3eb6:	b2d2      	uxtb	r2, r2
    3eb8:	7a21      	ldrb	r1, [r4, #8]
    3eba:	4011      	ands	r1, r2
    3ebc:	7820      	ldrb	r0, [r4, #0]
    3ebe:	4001      	ands	r1, r0
    3ec0:	4648      	mov	r0, r9
    3ec2:	4210      	tst	r0, r2
    3ec4:	d000      	beq.n	3ec8 <USB_Handler+0x534>
    3ec6:	e730      	b.n	3d2a <USB_Handler+0x396>
    3ec8:	4650      	mov	r0, sl
    3eca:	4210      	tst	r0, r2
    3ecc:	d000      	beq.n	3ed0 <USB_Handler+0x53c>
    3ece:	e75b      	b.n	3d88 <USB_Handler+0x3f4>
    3ed0:	4658      	mov	r0, fp
    3ed2:	4210      	tst	r0, r2
    3ed4:	d000      	beq.n	3ed8 <USB_Handler+0x544>
    3ed6:	e777      	b.n	3dc8 <USB_Handler+0x434>
    3ed8:	200c      	movs	r0, #12
    3eda:	4210      	tst	r0, r2
    3edc:	d0da      	beq.n	3e94 <USB_Handler+0x500>
    3ede:	002a      	movs	r2, r5
    3ee0:	003d      	movs	r5, r7
    3ee2:	4647      	mov	r7, r8
    3ee4:	4690      	mov	r8, r2
    3ee6:	015b      	lsls	r3, r3, #5
    3ee8:	18eb      	adds	r3, r5, r3
    3eea:	2208      	movs	r2, #8
    3eec:	32ff      	adds	r2, #255	; 0xff
    3eee:	5c9a      	ldrb	r2, [r3, r2]
    3ef0:	0712      	lsls	r2, r2, #28
    3ef2:	d5ac      	bpl.n	3e4e <USB_Handler+0x4ba>
    3ef4:	3804      	subs	r0, #4
    3ef6:	2208      	movs	r2, #8
    3ef8:	32ff      	adds	r2, #255	; 0xff
    3efa:	5498      	strb	r0, [r3, r2]
    3efc:	9801      	ldr	r0, [sp, #4]
    3efe:	0142      	lsls	r2, r0, #5
    3f00:	4b14      	ldr	r3, [pc, #80]	; (3f54 <USB_Handler+0x5c0>)
    3f02:	189b      	adds	r3, r3, r2
    3f04:	7e9b      	ldrb	r3, [r3, #26]
    3f06:	079b      	lsls	r3, r3, #30
    3f08:	d505      	bpl.n	3f16 <USB_Handler+0x582>
    3f0a:	4b12      	ldr	r3, [pc, #72]	; (3f54 <USB_Handler+0x5c0>)
    3f0c:	189b      	adds	r3, r3, r2
    3f0e:	7e9a      	ldrb	r2, [r3, #26]
    3f10:	2002      	movs	r0, #2
    3f12:	4382      	bics	r2, r0
    3f14:	769a      	strb	r2, [r3, #26]
    3f16:	2380      	movs	r3, #128	; 0x80
    3f18:	425b      	negs	r3, r3
    3f1a:	4642      	mov	r2, r8
    3f1c:	4313      	orrs	r3, r2
    3f1e:	4a0e      	ldr	r2, [pc, #56]	; (3f58 <USB_Handler+0x5c4>)
    3f20:	7193      	strb	r3, [r2, #6]
    3f22:	9b01      	ldr	r3, [sp, #4]
    3f24:	3308      	adds	r3, #8
    3f26:	015b      	lsls	r3, r3, #5
    3f28:	683a      	ldr	r2, [r7, #0]
    3f2a:	4694      	mov	ip, r2
    3f2c:	4463      	add	r3, ip
    3f2e:	79db      	ldrb	r3, [r3, #7]
    3f30:	079b      	lsls	r3, r3, #30
    3f32:	d500      	bpl.n	3f36 <USB_Handler+0x5a2>
    3f34:	e69a      	b.n	3c6c <USB_Handler+0x2d8>
    3f36:	230c      	movs	r3, #12
    3f38:	420b      	tst	r3, r1
    3f3a:	d100      	bne.n	3f3e <USB_Handler+0x5aa>
    3f3c:	e696      	b.n	3c6c <USB_Handler+0x2d8>
    3f3e:	9b01      	ldr	r3, [sp, #4]
    3f40:	011b      	lsls	r3, r3, #4
    3f42:	18fb      	adds	r3, r7, r3
    3f44:	33d8      	adds	r3, #216	; 0xd8
    3f46:	681b      	ldr	r3, [r3, #0]
    3f48:	4903      	ldr	r1, [pc, #12]	; (3f58 <USB_Handler+0x5c4>)
    3f4a:	0038      	movs	r0, r7
    3f4c:	4798      	blx	r3
    3f4e:	e68d      	b.n	3c6c <USB_Handler+0x2d8>
    3f50:	2000032c 	.word	0x2000032c
    3f54:	20000628 	.word	0x20000628
    3f58:	20000330 	.word	0x20000330

00003f5c <usb_get_config_defaults>:
    3f5c:	2200      	movs	r2, #0
    3f5e:	7002      	strb	r2, [r0, #0]
    3f60:	2301      	movs	r3, #1
    3f62:	7043      	strb	r3, [r0, #1]
    3f64:	7082      	strb	r2, [r0, #2]
    3f66:	70c3      	strb	r3, [r0, #3]
    3f68:	4770      	bx	lr
	...

00003f6c <usb_init>:
    3f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
    3f6e:	46ce      	mov	lr, r9
    3f70:	4647      	mov	r7, r8
    3f72:	b580      	push	{r7, lr}
    3f74:	b083      	sub	sp, #12
    3f76:	0004      	movs	r4, r0
    3f78:	000d      	movs	r5, r1
    3f7a:	0016      	movs	r6, r2
    3f7c:	2300      	movs	r3, #0
    3f7e:	4a6e      	ldr	r2, [pc, #440]	; (4138 <usb_init+0x1cc>)
    3f80:	6013      	str	r3, [r2, #0]
    3f82:	4a6e      	ldr	r2, [pc, #440]	; (413c <usb_init+0x1d0>)
    3f84:	6010      	str	r0, [r2, #0]
    3f86:	6021      	str	r1, [r4, #0]
    3f88:	496d      	ldr	r1, [pc, #436]	; (4140 <usb_init+0x1d4>)
    3f8a:	69ca      	ldr	r2, [r1, #28]
    3f8c:	2020      	movs	r0, #32
    3f8e:	4302      	orrs	r2, r0
    3f90:	61ca      	str	r2, [r1, #28]
    3f92:	af01      	add	r7, sp, #4
    3f94:	707b      	strb	r3, [r7, #1]
    3f96:	2201      	movs	r2, #1
    3f98:	70ba      	strb	r2, [r7, #2]
    3f9a:	70fb      	strb	r3, [r7, #3]
    3f9c:	3306      	adds	r3, #6
    3f9e:	4699      	mov	r9, r3
    3fa0:	703b      	strb	r3, [r7, #0]
    3fa2:	0039      	movs	r1, r7
    3fa4:	3808      	subs	r0, #8
    3fa6:	4b67      	ldr	r3, [pc, #412]	; (4144 <usb_init+0x1d8>)
    3fa8:	4698      	mov	r8, r3
    3faa:	4798      	blx	r3
    3fac:	464b      	mov	r3, r9
    3fae:	703b      	strb	r3, [r7, #0]
    3fb0:	0039      	movs	r1, r7
    3fb2:	2019      	movs	r0, #25
    3fb4:	47c0      	blx	r8
    3fb6:	78b3      	ldrb	r3, [r6, #2]
    3fb8:	466a      	mov	r2, sp
    3fba:	7013      	strb	r3, [r2, #0]
    3fbc:	4669      	mov	r1, sp
    3fbe:	2006      	movs	r0, #6
    3fc0:	4b61      	ldr	r3, [pc, #388]	; (4148 <usb_init+0x1dc>)
    3fc2:	4798      	blx	r3
    3fc4:	2006      	movs	r0, #6
    3fc6:	4b61      	ldr	r3, [pc, #388]	; (414c <usb_init+0x1e0>)
    3fc8:	4798      	blx	r3
    3fca:	782b      	ldrb	r3, [r5, #0]
    3fcc:	2201      	movs	r2, #1
    3fce:	4313      	orrs	r3, r2
    3fd0:	702b      	strb	r3, [r5, #0]
    3fd2:	78ab      	ldrb	r3, [r5, #2]
    3fd4:	07db      	lsls	r3, r3, #31
    3fd6:	d4fc      	bmi.n	3fd2 <usb_init+0x66>
    3fd8:	4a5d      	ldr	r2, [pc, #372]	; (4150 <usb_init+0x1e4>)
    3fda:	78d3      	ldrb	r3, [r2, #3]
    3fdc:	2103      	movs	r1, #3
    3fde:	438b      	bics	r3, r1
    3fe0:	2102      	movs	r1, #2
    3fe2:	430b      	orrs	r3, r1
    3fe4:	70d3      	strb	r3, [r2, #3]
    3fe6:	78d3      	ldrb	r3, [r2, #3]
    3fe8:	210c      	movs	r1, #12
    3fea:	438b      	bics	r3, r1
    3fec:	2108      	movs	r1, #8
    3fee:	430b      	orrs	r3, r1
    3ff0:	70d3      	strb	r3, [r2, #3]
    3ff2:	4b58      	ldr	r3, [pc, #352]	; (4154 <usb_init+0x1e8>)
    3ff4:	681b      	ldr	r3, [r3, #0]
    3ff6:	039b      	lsls	r3, r3, #14
    3ff8:	0edb      	lsrs	r3, r3, #27
    3ffa:	2b1f      	cmp	r3, #31
    3ffc:	d100      	bne.n	4000 <usb_init+0x94>
    3ffe:	e08f      	b.n	4120 <usb_init+0x1b4>
    4000:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
    4002:	019b      	lsls	r3, r3, #6
    4004:	4954      	ldr	r1, [pc, #336]	; (4158 <usb_init+0x1ec>)
    4006:	400a      	ands	r2, r1
    4008:	4313      	orrs	r3, r2
    400a:	852b      	strh	r3, [r5, #40]	; 0x28
    400c:	4b51      	ldr	r3, [pc, #324]	; (4154 <usb_init+0x1e8>)
    400e:	681b      	ldr	r3, [r3, #0]
    4010:	025b      	lsls	r3, r3, #9
    4012:	0edb      	lsrs	r3, r3, #27
    4014:	2b1f      	cmp	r3, #31
    4016:	d100      	bne.n	401a <usb_init+0xae>
    4018:	e084      	b.n	4124 <usb_init+0x1b8>
    401a:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
    401c:	211f      	movs	r1, #31
    401e:	438a      	bics	r2, r1
    4020:	4313      	orrs	r3, r2
    4022:	852b      	strh	r3, [r5, #40]	; 0x28
    4024:	4b4b      	ldr	r3, [pc, #300]	; (4154 <usb_init+0x1e8>)
    4026:	681b      	ldr	r3, [r3, #0]
    4028:	019b      	lsls	r3, r3, #6
    402a:	0f5b      	lsrs	r3, r3, #29
    402c:	2b07      	cmp	r3, #7
    402e:	d100      	bne.n	4032 <usb_init+0xc6>
    4030:	e07a      	b.n	4128 <usb_init+0x1bc>
    4032:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
    4034:	031b      	lsls	r3, r3, #12
    4036:	4949      	ldr	r1, [pc, #292]	; (415c <usb_init+0x1f0>)
    4038:	400a      	ands	r2, r1
    403a:	4313      	orrs	r3, r2
    403c:	852b      	strh	r3, [r5, #40]	; 0x28
    403e:	7832      	ldrb	r2, [r6, #0]
    4040:	7829      	ldrb	r1, [r5, #0]
    4042:	01d2      	lsls	r2, r2, #7
    4044:	237f      	movs	r3, #127	; 0x7f
    4046:	400b      	ands	r3, r1
    4048:	4313      	orrs	r3, r2
    404a:	702b      	strb	r3, [r5, #0]
    404c:	7871      	ldrb	r1, [r6, #1]
    404e:	782b      	ldrb	r3, [r5, #0]
    4050:	2201      	movs	r2, #1
    4052:	400a      	ands	r2, r1
    4054:	0092      	lsls	r2, r2, #2
    4056:	2104      	movs	r1, #4
    4058:	438b      	bics	r3, r1
    405a:	4313      	orrs	r3, r2
    405c:	702b      	strb	r3, [r5, #0]
    405e:	4b40      	ldr	r3, [pc, #256]	; (4160 <usb_init+0x1f4>)
    4060:	626b      	str	r3, [r5, #36]	; 0x24
    4062:	78f3      	ldrb	r3, [r6, #3]
    4064:	2b01      	cmp	r3, #1
    4066:	d061      	beq.n	412c <usb_init+0x1c0>
    4068:	2b00      	cmp	r3, #0
    406a:	d106      	bne.n	407a <usb_init+0x10e>
    406c:	6822      	ldr	r2, [r4, #0]
    406e:	8913      	ldrh	r3, [r2, #8]
    4070:	210c      	movs	r1, #12
    4072:	438b      	bics	r3, r1
    4074:	2104      	movs	r1, #4
    4076:	430b      	orrs	r3, r1
    4078:	8113      	strh	r3, [r2, #8]
    407a:	2280      	movs	r2, #128	; 0x80
    407c:	0052      	lsls	r2, r2, #1
    407e:	2100      	movs	r1, #0
    4080:	4837      	ldr	r0, [pc, #220]	; (4160 <usb_init+0x1f4>)
    4082:	4b38      	ldr	r3, [pc, #224]	; (4164 <usb_init+0x1f8>)
    4084:	4798      	blx	r3
    4086:	1d23      	adds	r3, r4, #4
    4088:	0021      	movs	r1, r4
    408a:	3124      	adds	r1, #36	; 0x24
    408c:	2200      	movs	r2, #0
    408e:	c304      	stmia	r3!, {r2}
    4090:	428b      	cmp	r3, r1
    4092:	d1fc      	bne.n	408e <usb_init+0x122>
    4094:	0021      	movs	r1, r4
    4096:	31a4      	adds	r1, #164	; 0xa4
    4098:	2200      	movs	r2, #0
    409a:	601a      	str	r2, [r3, #0]
    409c:	605a      	str	r2, [r3, #4]
    409e:	609a      	str	r2, [r3, #8]
    40a0:	60da      	str	r2, [r3, #12]
    40a2:	3310      	adds	r3, #16
    40a4:	428b      	cmp	r3, r1
    40a6:	d1f8      	bne.n	409a <usb_init+0x12e>
    40a8:	2300      	movs	r3, #0
    40aa:	22a4      	movs	r2, #164	; 0xa4
    40ac:	54a3      	strb	r3, [r4, r2]
    40ae:	3201      	adds	r2, #1
    40b0:	54a3      	strb	r3, [r4, r2]
    40b2:	0023      	movs	r3, r4
    40b4:	33a6      	adds	r3, #166	; 0xa6
    40b6:	0021      	movs	r1, r4
    40b8:	31ae      	adds	r1, #174	; 0xae
    40ba:	2200      	movs	r2, #0
    40bc:	701a      	strb	r2, [r3, #0]
    40be:	721a      	strb	r2, [r3, #8]
    40c0:	3301      	adds	r3, #1
    40c2:	4299      	cmp	r1, r3
    40c4:	d1fa      	bne.n	40bc <usb_init+0x150>
    40c6:	0023      	movs	r3, r4
    40c8:	33b8      	adds	r3, #184	; 0xb8
    40ca:	0021      	movs	r1, r4
    40cc:	31d4      	adds	r1, #212	; 0xd4
    40ce:	2200      	movs	r2, #0
    40d0:	c304      	stmia	r3!, {r2}
    40d2:	428b      	cmp	r3, r1
    40d4:	d1fc      	bne.n	40d0 <usb_init+0x164>
    40d6:	0021      	movs	r1, r4
    40d8:	3155      	adds	r1, #85	; 0x55
    40da:	31ff      	adds	r1, #255	; 0xff
    40dc:	2200      	movs	r2, #0
    40de:	601a      	str	r2, [r3, #0]
    40e0:	605a      	str	r2, [r3, #4]
    40e2:	609a      	str	r2, [r3, #8]
    40e4:	60da      	str	r2, [r3, #12]
    40e6:	3310      	adds	r3, #16
    40e8:	428b      	cmp	r3, r1
    40ea:	d1f8      	bne.n	40de <usb_init+0x172>
    40ec:	2300      	movs	r3, #0
    40ee:	22aa      	movs	r2, #170	; 0xaa
    40f0:	0052      	lsls	r2, r2, #1
    40f2:	52a3      	strh	r3, [r4, r2]
    40f4:	3202      	adds	r2, #2
    40f6:	52a3      	strh	r3, [r4, r2]
    40f8:	0023      	movs	r3, r4
    40fa:	3359      	adds	r3, #89	; 0x59
    40fc:	33ff      	adds	r3, #255	; 0xff
    40fe:	3461      	adds	r4, #97	; 0x61
    4100:	34ff      	adds	r4, #255	; 0xff
    4102:	2200      	movs	r2, #0
    4104:	701a      	strb	r2, [r3, #0]
    4106:	721a      	strb	r2, [r3, #8]
    4108:	3301      	adds	r3, #1
    410a:	42a3      	cmp	r3, r4
    410c:	d1fa      	bne.n	4104 <usb_init+0x198>
    410e:	2280      	movs	r2, #128	; 0x80
    4110:	4b15      	ldr	r3, [pc, #84]	; (4168 <usb_init+0x1fc>)
    4112:	601a      	str	r2, [r3, #0]
    4114:	2000      	movs	r0, #0
    4116:	b003      	add	sp, #12
    4118:	bc0c      	pop	{r2, r3}
    411a:	4690      	mov	r8, r2
    411c:	4699      	mov	r9, r3
    411e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4120:	3b1a      	subs	r3, #26
    4122:	e76d      	b.n	4000 <usb_init+0x94>
    4124:	3b02      	subs	r3, #2
    4126:	e778      	b.n	401a <usb_init+0xae>
    4128:	3b04      	subs	r3, #4
    412a:	e782      	b.n	4032 <usb_init+0xc6>
    412c:	6822      	ldr	r2, [r4, #0]
    412e:	8913      	ldrh	r3, [r2, #8]
    4130:	3108      	adds	r1, #8
    4132:	438b      	bics	r3, r1
    4134:	8113      	strh	r3, [r2, #8]
    4136:	e7a0      	b.n	407a <usb_init+0x10e>
    4138:	20000338 	.word	0x20000338
    413c:	20000328 	.word	0x20000328
    4140:	40000400 	.word	0x40000400
    4144:	0000247d 	.word	0x0000247d
    4148:	00002385 	.word	0x00002385
    414c:	000022f9 	.word	0x000022f9
    4150:	41005000 	.word	0x41005000
    4154:	00806024 	.word	0x00806024
    4158:	fffff83f 	.word	0xfffff83f
    415c:	ffff8fff 	.word	0xffff8fff
    4160:	20000628 	.word	0x20000628
    4164:	000049ef 	.word	0x000049ef
    4168:	e000e100 	.word	0xe000e100

0000416c <Dummy_Handler>:
    416c:	e7fe      	b.n	416c <Dummy_Handler>
	...

00004170 <Reset_Handler>:
    4170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4172:	4a2a      	ldr	r2, [pc, #168]	; (421c <Reset_Handler+0xac>)
    4174:	4b2a      	ldr	r3, [pc, #168]	; (4220 <Reset_Handler+0xb0>)
    4176:	429a      	cmp	r2, r3
    4178:	d011      	beq.n	419e <Reset_Handler+0x2e>
    417a:	001a      	movs	r2, r3
    417c:	4b29      	ldr	r3, [pc, #164]	; (4224 <Reset_Handler+0xb4>)
    417e:	429a      	cmp	r2, r3
    4180:	d20d      	bcs.n	419e <Reset_Handler+0x2e>
    4182:	4a29      	ldr	r2, [pc, #164]	; (4228 <Reset_Handler+0xb8>)
    4184:	3303      	adds	r3, #3
    4186:	1a9b      	subs	r3, r3, r2
    4188:	089b      	lsrs	r3, r3, #2
    418a:	3301      	adds	r3, #1
    418c:	009b      	lsls	r3, r3, #2
    418e:	2200      	movs	r2, #0
    4190:	4823      	ldr	r0, [pc, #140]	; (4220 <Reset_Handler+0xb0>)
    4192:	4922      	ldr	r1, [pc, #136]	; (421c <Reset_Handler+0xac>)
    4194:	588c      	ldr	r4, [r1, r2]
    4196:	5084      	str	r4, [r0, r2]
    4198:	3204      	adds	r2, #4
    419a:	429a      	cmp	r2, r3
    419c:	d1fa      	bne.n	4194 <Reset_Handler+0x24>
    419e:	4a23      	ldr	r2, [pc, #140]	; (422c <Reset_Handler+0xbc>)
    41a0:	4b23      	ldr	r3, [pc, #140]	; (4230 <Reset_Handler+0xc0>)
    41a2:	429a      	cmp	r2, r3
    41a4:	d20a      	bcs.n	41bc <Reset_Handler+0x4c>
    41a6:	43d3      	mvns	r3, r2
    41a8:	4921      	ldr	r1, [pc, #132]	; (4230 <Reset_Handler+0xc0>)
    41aa:	185b      	adds	r3, r3, r1
    41ac:	2103      	movs	r1, #3
    41ae:	438b      	bics	r3, r1
    41b0:	3304      	adds	r3, #4
    41b2:	189b      	adds	r3, r3, r2
    41b4:	2100      	movs	r1, #0
    41b6:	c202      	stmia	r2!, {r1}
    41b8:	4293      	cmp	r3, r2
    41ba:	d1fc      	bne.n	41b6 <Reset_Handler+0x46>
    41bc:	4a1d      	ldr	r2, [pc, #116]	; (4234 <Reset_Handler+0xc4>)
    41be:	21ff      	movs	r1, #255	; 0xff
    41c0:	4b1d      	ldr	r3, [pc, #116]	; (4238 <Reset_Handler+0xc8>)
    41c2:	438b      	bics	r3, r1
    41c4:	6093      	str	r3, [r2, #8]
    41c6:	39fd      	subs	r1, #253	; 0xfd
    41c8:	2390      	movs	r3, #144	; 0x90
    41ca:	005b      	lsls	r3, r3, #1
    41cc:	4a1b      	ldr	r2, [pc, #108]	; (423c <Reset_Handler+0xcc>)
    41ce:	50d1      	str	r1, [r2, r3]
    41d0:	4a1b      	ldr	r2, [pc, #108]	; (4240 <Reset_Handler+0xd0>)
    41d2:	78d3      	ldrb	r3, [r2, #3]
    41d4:	2503      	movs	r5, #3
    41d6:	43ab      	bics	r3, r5
    41d8:	2402      	movs	r4, #2
    41da:	4323      	orrs	r3, r4
    41dc:	70d3      	strb	r3, [r2, #3]
    41de:	78d3      	ldrb	r3, [r2, #3]
    41e0:	270c      	movs	r7, #12
    41e2:	43bb      	bics	r3, r7
    41e4:	2608      	movs	r6, #8
    41e6:	4333      	orrs	r3, r6
    41e8:	70d3      	strb	r3, [r2, #3]
    41ea:	4b16      	ldr	r3, [pc, #88]	; (4244 <Reset_Handler+0xd4>)
    41ec:	7b98      	ldrb	r0, [r3, #14]
    41ee:	2230      	movs	r2, #48	; 0x30
    41f0:	4390      	bics	r0, r2
    41f2:	2220      	movs	r2, #32
    41f4:	4310      	orrs	r0, r2
    41f6:	7398      	strb	r0, [r3, #14]
    41f8:	7b99      	ldrb	r1, [r3, #14]
    41fa:	43b9      	bics	r1, r7
    41fc:	4331      	orrs	r1, r6
    41fe:	7399      	strb	r1, [r3, #14]
    4200:	7b9a      	ldrb	r2, [r3, #14]
    4202:	43aa      	bics	r2, r5
    4204:	4322      	orrs	r2, r4
    4206:	739a      	strb	r2, [r3, #14]
    4208:	4a0f      	ldr	r2, [pc, #60]	; (4248 <Reset_Handler+0xd8>)
    420a:	6853      	ldr	r3, [r2, #4]
    420c:	2180      	movs	r1, #128	; 0x80
    420e:	430b      	orrs	r3, r1
    4210:	6053      	str	r3, [r2, #4]
    4212:	4b0e      	ldr	r3, [pc, #56]	; (424c <Reset_Handler+0xdc>)
    4214:	4798      	blx	r3
    4216:	4b0e      	ldr	r3, [pc, #56]	; (4250 <Reset_Handler+0xe0>)
    4218:	4798      	blx	r3
    421a:	e7fe      	b.n	421a <Reset_Handler+0xaa>
    421c:	00004aa8 	.word	0x00004aa8
    4220:	20000000 	.word	0x20000000
    4224:	200000ec 	.word	0x200000ec
    4228:	20000004 	.word	0x20000004
    422c:	200000ec 	.word	0x200000ec
    4230:	2000079c 	.word	0x2000079c
    4234:	e000ed00 	.word	0xe000ed00
    4238:	00000000 	.word	0x00000000
    423c:	41007000 	.word	0x41007000
    4240:	41005000 	.word	0x41005000
    4244:	41004800 	.word	0x41004800
    4248:	41004000 	.word	0x41004000
    424c:	00004995 	.word	0x00004995
    4250:	00004255 	.word	0x00004255

00004254 <main>:


/*! \brief Main function. Execution starts here.
 */
int main(void)
{
    4254:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4256:	46de      	mov	lr, fp
    4258:	4657      	mov	r7, sl
    425a:	464e      	mov	r6, r9
    425c:	4645      	mov	r5, r8
    425e:	b5e0      	push	{r5, r6, r7, lr}

	irq_initialize_vectors();
	cpu_irq_enable();
    4260:	2101      	movs	r1, #1
    4262:	4b34      	ldr	r3, [pc, #208]	; (4334 <main+0xe0>)
    4264:	7019      	strb	r1, [r3, #0]
    4266:	f3bf 8f5f 	dmb	sy
    426a:	b662      	cpsie	i
		sleepmgr_locks[i] = 0;
    426c:	4b32      	ldr	r3, [pc, #200]	; (4338 <main+0xe4>)
    426e:	2200      	movs	r2, #0
    4270:	701a      	strb	r2, [r3, #0]
    4272:	705a      	strb	r2, [r3, #1]
    4274:	709a      	strb	r2, [r3, #2]
    4276:	70da      	strb	r2, [r3, #3]
	sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;
    4278:	7119      	strb	r1, [r3, #4]

	// Initialize the sleep manager
	sleepmgr_init();

	system_init();
    427a:	4b30      	ldr	r3, [pc, #192]	; (433c <main+0xe8>)
    427c:	4798      	blx	r3

	ui_init();
    427e:	4b30      	ldr	r3, [pc, #192]	; (4340 <main+0xec>)
    4280:	4798      	blx	r3
	ui_powerdown();
    4282:	4b30      	ldr	r3, [pc, #192]	; (4344 <main+0xf0>)
    4284:	4798      	blx	r3

	// Start USB stack to authorize VBus monitoring
	udc_start();
    4286:	4b30      	ldr	r3, [pc, #192]	; (4348 <main+0xf4>)
    4288:	4798      	blx	r3
static inline void sleepmgr_enter_sleep(void)
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	enum sleepmgr_mode sleep_mode;

	cpu_irq_disable();
    428a:	4f2a      	ldr	r7, [pc, #168]	; (4334 <main+0xe0>)
    428c:	2400      	movs	r4, #0
    428e:	1c26      	adds	r6, r4, #0
	while (!(*lock_ptr)) {
    4290:	4d29      	ldr	r5, [pc, #164]	; (4338 <main+0xe4>)

	// Find the deepest allowable sleep mode
	sleep_mode = sleepmgr_get_sleep_mode();
	// Return right away if first mode (ACTIVE) is locked.
	if (sleep_mode==SLEEPMGR_ACTIVE) {
		cpu_irq_enable();
    4292:	46b8      	mov	r8, r7
    4294:	2301      	movs	r3, #1
    4296:	469c      	mov	ip, r3

static inline void sleepmgr_sleep(const enum sleepmgr_mode sleep_mode)
{
	Assert(sleep_mode != SLEEPMGR_ACTIVE);
#ifdef CONFIG_SLEEPMGR_ENABLE
	cpu_irq_disable();
    4298:	46bb      	mov	fp, r7
{

#if (SAMD20 || SAMD21 || SAMR21)

	/* Get MCU revision */
	uint32_t rev = DSU->DID.reg;
    429a:	4b2c      	ldr	r3, [pc, #176]	; (434c <main+0xf8>)
    429c:	469a      	mov	sl, r3

	rev &= DSU_DID_REVISION_Msk;
	rev = rev >> DSU_DID_REVISION_Pos;
    429e:	230f      	movs	r3, #15
    42a0:	4699      	mov	r9, r3
    42a2:	e00e      	b.n	42c2 <main+0x6e>
		sleep_mode = (enum sleepmgr_mode)(sleep_mode + 1);
    42a4:	0019      	movs	r1, r3
		lock_ptr++;
    42a6:	3201      	adds	r2, #1
		sleep_mode = (enum sleepmgr_mode)(sleep_mode + 1);
    42a8:	1c4b      	adds	r3, r1, #1
    42aa:	b2db      	uxtb	r3, r3
	while (!(*lock_ptr)) {
    42ac:	7810      	ldrb	r0, [r2, #0]
    42ae:	2800      	cmp	r0, #0
    42b0:	d0f8      	beq.n	42a4 <main+0x50>
	if (sleep_mode==SLEEPMGR_ACTIVE) {
    42b2:	2b00      	cmp	r3, #0
    42b4:	d10f      	bne.n	42d6 <main+0x82>
		cpu_irq_enable();
    42b6:	4643      	mov	r3, r8
    42b8:	4662      	mov	r2, ip
    42ba:	701a      	strb	r2, [r3, #0]
    42bc:	f3bf 8f5f 	dmb	sy
    42c0:	b662      	cpsie	i
  __ASM volatile ("cpsid i" : : : "memory");
    42c2:	b672      	cpsid	i
    42c4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    42c8:	703e      	strb	r6, [r7, #0]
	while (!(*lock_ptr)) {
    42ca:	782b      	ldrb	r3, [r5, #0]
    42cc:	2b00      	cmp	r3, #0
    42ce:	d1f2      	bne.n	42b6 <main+0x62>
    42d0:	0021      	movs	r1, r4
    42d2:	4a19      	ldr	r2, [pc, #100]	; (4338 <main+0xe4>)
    42d4:	e7e7      	b.n	42a6 <main+0x52>
    42d6:	b672      	cpsid	i
    42d8:	f3bf 8f5f 	dmb	sy
    42dc:	465b      	mov	r3, fp
    42de:	701c      	strb	r4, [r3, #0]
	uint32_t rev = DSU->DID.reg;
    42e0:	4653      	mov	r3, sl
    42e2:	699b      	ldr	r3, [r3, #24]
    42e4:	0a1b      	lsrs	r3, r3, #8
	rev = rev >> DSU_DID_REVISION_Pos;
    42e6:	464a      	mov	r2, r9
    42e8:	4013      	ands	r3, r2
		NVMCTRL->CTRLB.bit.SLEEPPRM = NVMCTRL_CTRLB_SLEEPPRM_DISABLED_Val;
	}
#endif

#if (SAMD21 || SAMR21)
	if (rev < _SYSTEM_MCU_REVISION_D) {
    42ea:	2b02      	cmp	r3, #2
    42ec:	d805      	bhi.n	42fa <main+0xa6>
		/* Errata 13140: Make sure that the Flash does not power all the way down
		 * when in sleep mode. */
		NVMCTRL->CTRLB.bit.SLEEPPRM = NVMCTRL_CTRLB_SLEEPPRM_DISABLED_Val;
    42ee:	4a18      	ldr	r2, [pc, #96]	; (4350 <main+0xfc>)
    42f0:	6850      	ldr	r0, [r2, #4]
    42f2:	23c0      	movs	r3, #192	; 0xc0
    42f4:	009b      	lsls	r3, r3, #2
    42f6:	4303      	orrs	r3, r0
    42f8:	6053      	str	r3, [r2, #4]
	}
#endif

#endif

	switch (sleep_mode) {
    42fa:	2902      	cmp	r1, #2
    42fc:	d90b      	bls.n	4316 <main+0xc2>
    42fe:	2903      	cmp	r1, #3
    4300:	d011      	beq.n	4326 <main+0xd2>

	/* Enter the sleep mode. */
	system_set_sleepmode((enum system_sleepmode)(sleep_mode - 1));
	cpu_irq_enable();
    4302:	4b0c      	ldr	r3, [pc, #48]	; (4334 <main+0xe0>)
    4304:	4662      	mov	r2, ip
    4306:	701a      	strb	r2, [r3, #0]
    4308:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    430c:	b662      	cpsie	i
  __ASM volatile ("dsb");
    430e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
    4312:	bf30      	wfi
    4314:	e7d5      	b.n	42c2 <main+0x6e>
		case SYSTEM_SLEEPMODE_IDLE_0:
		case SYSTEM_SLEEPMODE_IDLE_1:
		case SYSTEM_SLEEPMODE_IDLE_2:
			SCB->SCR &= ~SCB_SCR_SLEEPDEEP_Msk;
    4316:	4a0f      	ldr	r2, [pc, #60]	; (4354 <main+0x100>)
    4318:	6913      	ldr	r3, [r2, #16]
    431a:	2004      	movs	r0, #4
    431c:	4383      	bics	r3, r0
    431e:	6113      	str	r3, [r2, #16]
			PM->SLEEP.reg = sleep_mode;
    4320:	4b0d      	ldr	r3, [pc, #52]	; (4358 <main+0x104>)
    4322:	7059      	strb	r1, [r3, #1]
    4324:	e7ed      	b.n	4302 <main+0xae>
			break;

		case SYSTEM_SLEEPMODE_STANDBY:
			SCB->SCR |=  SCB_SCR_SLEEPDEEP_Msk;
    4326:	4a0b      	ldr	r2, [pc, #44]	; (4354 <main+0x100>)
    4328:	6913      	ldr	r3, [r2, #16]
    432a:	2104      	movs	r1, #4
    432c:	430b      	orrs	r3, r1
    432e:	6113      	str	r3, [r2, #16]
    4330:	e7e7      	b.n	4302 <main+0xae>
    4332:	46c0      	nop			; (mov r8, r8)
    4334:	200000e8 	.word	0x200000e8
    4338:	20000348 	.word	0x20000348
    433c:	000024b1 	.word	0x000024b1
    4340:	000001f5 	.word	0x000001f5
    4344:	00000251 	.word	0x00000251
    4348:	00000cc9 	.word	0x00000cc9
    434c:	41002000 	.word	0x41002000
    4350:	41004000 	.word	0x41004000
    4354:	e000ed00 	.word	0xe000ed00
    4358:	40000400 	.word	0x40000400

0000435c <usart_rx_callback>:
 * Called by USART driver when receiving is complete.
 *
 * * \param module USART module causing the interrupt (not used)
 */
static void usart_rx_callback(struct usart_module *const module)
{
    435c:	b510      	push	{r4, lr}
	/* Data received */
	ui_com_tx_start();
    435e:	4b0b      	ldr	r3, [pc, #44]	; (438c <usart_rx_callback+0x30>)
    4360:	4798      	blx	r3

	/* Transfer UART RX fifo to CDC TX */
	if (!udi_cdc_is_tx_ready()) {
    4362:	4b0b      	ldr	r3, [pc, #44]	; (4390 <usart_rx_callback+0x34>)
    4364:	4798      	blx	r3
    4366:	2800      	cmp	r0, #0
    4368:	d00b      	beq.n	4382 <usart_rx_callback+0x26>
		/* Fifo full */
		udi_cdc_signal_overrun();
		ui_com_overflow();
	} else {
		udi_cdc_putc(rx_data);
    436a:	4b0a      	ldr	r3, [pc, #40]	; (4394 <usart_rx_callback+0x38>)
    436c:	7818      	ldrb	r0, [r3, #0]
    436e:	4b0a      	ldr	r3, [pc, #40]	; (4398 <usart_rx_callback+0x3c>)
    4370:	4798      	blx	r3
	}

	ui_com_tx_stop();
    4372:	4b0a      	ldr	r3, [pc, #40]	; (439c <usart_rx_callback+0x40>)
    4374:	4798      	blx	r3

	usart_read_buffer_job(&usart_module_edbg, &rx_data, 1);
    4376:	2201      	movs	r2, #1
    4378:	4906      	ldr	r1, [pc, #24]	; (4394 <usart_rx_callback+0x38>)
    437a:	4809      	ldr	r0, [pc, #36]	; (43a0 <usart_rx_callback+0x44>)
    437c:	4b09      	ldr	r3, [pc, #36]	; (43a4 <usart_rx_callback+0x48>)
    437e:	4798      	blx	r3

	return;
}
    4380:	bd10      	pop	{r4, pc}
		udi_cdc_signal_overrun();
    4382:	4b09      	ldr	r3, [pc, #36]	; (43a8 <usart_rx_callback+0x4c>)
    4384:	4798      	blx	r3
		ui_com_overflow();
    4386:	4b09      	ldr	r3, [pc, #36]	; (43ac <usart_rx_callback+0x50>)
    4388:	4798      	blx	r3
    438a:	e7f2      	b.n	4372 <usart_rx_callback+0x16>
    438c:	00000299 	.word	0x00000299
    4390:	00000a55 	.word	0x00000a55
    4394:	20000342 	.word	0x20000342
    4398:	00000b1d 	.word	0x00000b1d
    439c:	0000029b 	.word	0x0000029b
    43a0:	20000768 	.word	0x20000768
    43a4:	00001c8d 	.word	0x00001c8d
    43a8:	000006a5 	.word	0x000006a5
    43ac:	0000029d 	.word	0x0000029d

000043b0 <usart_tx_callback>:
{
    43b0:	b510      	push	{r4, lr}
	tx_callback_flag = 1;
    43b2:	2201      	movs	r2, #1
    43b4:	4b0e      	ldr	r3, [pc, #56]	; (43f0 <usart_tx_callback+0x40>)
    43b6:	701a      	strb	r2, [r3, #0]
	if (udi_cdc_is_rx_ready()) {
    43b8:	4b0e      	ldr	r3, [pc, #56]	; (43f4 <usart_tx_callback+0x44>)
    43ba:	4798      	blx	r3
    43bc:	2800      	cmp	r0, #0
    43be:	d10b      	bne.n	43d8 <usart_tx_callback+0x28>
{
	/* Sanity check arguments */
	Assert(module);

	/* Disable callback */
	module->callback_enable_mask &= ~(1 << callback_type);
    43c0:	490d      	ldr	r1, [pc, #52]	; (43f8 <usart_tx_callback+0x48>)
    43c2:	2231      	movs	r2, #49	; 0x31
    43c4:	5c8b      	ldrb	r3, [r1, r2]
    43c6:	2001      	movs	r0, #1
    43c8:	4383      	bics	r3, r0
    43ca:	548b      	strb	r3, [r1, r2]
		ui_com_rx_stop();
    43cc:	4b0b      	ldr	r3, [pc, #44]	; (43fc <usart_tx_callback+0x4c>)
    43ce:	4798      	blx	r3
	tx_callback_flag = 0;
    43d0:	2200      	movs	r2, #0
    43d2:	4b07      	ldr	r3, [pc, #28]	; (43f0 <usart_tx_callback+0x40>)
    43d4:	701a      	strb	r2, [r3, #0]
}
    43d6:	bd10      	pop	{r4, pc}
		ui_com_rx_start();
    43d8:	4b09      	ldr	r3, [pc, #36]	; (4400 <usart_tx_callback+0x50>)
    43da:	4798      	blx	r3
		tx_data = udi_cdc_getc();
    43dc:	4b09      	ldr	r3, [pc, #36]	; (4404 <usart_tx_callback+0x54>)
    43de:	4798      	blx	r3
    43e0:	4909      	ldr	r1, [pc, #36]	; (4408 <usart_tx_callback+0x58>)
    43e2:	7008      	strb	r0, [r1, #0]
		usart_write_buffer_job(&usart_module_edbg, &tx_data, 1);
    43e4:	2201      	movs	r2, #1
    43e6:	4804      	ldr	r0, [pc, #16]	; (43f8 <usart_tx_callback+0x48>)
    43e8:	4b08      	ldr	r3, [pc, #32]	; (440c <usart_tx_callback+0x5c>)
    43ea:	4798      	blx	r3
    43ec:	e7f0      	b.n	43d0 <usart_tx_callback+0x20>
    43ee:	46c0      	nop			; (mov r8, r8)
    43f0:	20000343 	.word	0x20000343
    43f4:	000008d9 	.word	0x000008d9
    43f8:	20000768 	.word	0x20000768
    43fc:	00000297 	.word	0x00000297
    4400:	00000295 	.word	0x00000295
    4404:	000009b5 	.word	0x000009b5
    4408:	20000344 	.word	0x20000344
    440c:	00001c6d 	.word	0x00001c6d

00004410 <uart_config>:
		usart_write_buffer_job(&usart_module_edbg, &tx_data, 1);
	}
}

void uart_config(uint8_t port,usb_cdc_line_coding_t *cfg)
{
    4410:	b570      	push	{r4, r5, r6, lr}
{
	/* Sanity check arguments */
	Assert(config);

	/* Set default config in the config struct */
	config->data_order       = USART_DATAORDER_LSB;
    4412:	4b57      	ldr	r3, [pc, #348]	; (4570 <uart_config+0x160>)
    4414:	2280      	movs	r2, #128	; 0x80
    4416:	05d2      	lsls	r2, r2, #23
    4418:	601a      	str	r2, [r3, #0]
	config->transfer_mode    = USART_TRANSFER_ASYNCHRONOUSLY;
    441a:	2200      	movs	r2, #0
    441c:	605a      	str	r2, [r3, #4]
	config->parity           = USART_PARITY_NONE;
    441e:	20ff      	movs	r0, #255	; 0xff
    4420:	8118      	strh	r0, [r3, #8]
	config->stopbits         = USART_STOPBITS_1;
    4422:	2000      	movs	r0, #0
    4424:	729a      	strb	r2, [r3, #10]
	config->character_size   = USART_CHARACTER_SIZE_8BIT;
    4426:	72da      	strb	r2, [r3, #11]
	config->baudrate         = 9600;
    4428:	2496      	movs	r4, #150	; 0x96
    442a:	01a4      	lsls	r4, r4, #6
    442c:	621c      	str	r4, [r3, #32]
	config->receiver_enable  = true;
    442e:	2401      	movs	r4, #1
    4430:	2524      	movs	r5, #36	; 0x24
    4432:	555c      	strb	r4, [r3, r5]
	config->transmitter_enable = true;
    4434:	3501      	adds	r5, #1
    4436:	555c      	strb	r4, [r3, r5]
	config->clock_polarity_inverted = false;
    4438:	3425      	adds	r4, #37	; 0x25
    443a:	551a      	strb	r2, [r3, r4]
	config->use_external_clock = false;
    443c:	3401      	adds	r4, #1
    443e:	551a      	strb	r2, [r3, r4]
	config->ext_clock_freq   = 0;
    4440:	629a      	str	r2, [r3, #40]	; 0x28
	config->mux_setting      = USART_RX_1_TX_2_XCK_3;
    4442:	2488      	movs	r4, #136	; 0x88
    4444:	0364      	lsls	r4, r4, #13
    4446:	60dc      	str	r4, [r3, #12]
	config->run_in_standby   = false;
    4448:	242c      	movs	r4, #44	; 0x2c
    444a:	551a      	strb	r2, [r3, r4]
	config->generator_source = GCLK_GENERATOR_0;
	config->pinmux_pad0      = PINMUX_DEFAULT;
    444c:	631a      	str	r2, [r3, #48]	; 0x30
	config->pinmux_pad1      = PINMUX_DEFAULT;
    444e:	635a      	str	r2, [r3, #52]	; 0x34
	config->pinmux_pad2      = PINMUX_DEFAULT;
    4450:	639a      	str	r2, [r3, #56]	; 0x38
	config->pinmux_pad3      = PINMUX_DEFAULT;
    4452:	63da      	str	r2, [r3, #60]	; 0x3c
#ifdef FEATURE_USART_OVER_SAMPLE
	config->sample_adjustment     = USART_SAMPLE_ADJUSTMENT_7_8_9;
    4454:	615a      	str	r2, [r3, #20]
	config->sample_rate           = USART_SAMPLE_RATE_16X_ARITHMETIC;
    4456:	821a      	strh	r2, [r3, #16]
#endif
#ifdef FEATURE_USART_LIN_SLAVE
	config->lin_slave_enable      = false;
    4458:	76da      	strb	r2, [r3, #27]
	config->lin_header_delay = LIN_MASTER_HEADER_DELAY_0;
	config->lin_break_length = LIN_MASTER_BREAK_LENGTH_13_BIT;
#endif

#ifdef FEATURE_USART_IMMEDIATE_BUFFER_OVERFLOW_NOTIFICATION
	config->immediate_buffer_overflow_notification  = false;
    445a:	7618      	strb	r0, [r3, #24]
#endif
#ifdef FEATURE_USART_START_FRAME_DECTION
	config->start_frame_detection_enable            = false;
    445c:	7718      	strb	r0, [r3, #28]
#endif
#ifdef FEATURE_USART_IRDA
	config->encoding_format_enable                  = false;
    445e:	7658      	strb	r0, [r3, #25]
	config->receive_pulse_length                    = 19;
    4460:	2213      	movs	r2, #19
    4462:	769a      	strb	r2, [r3, #26]
	config->iso7816_config.inhibit_nack             = ISO7816_INHIBIT_NACK_DISABLE;
	config->iso7816_config.successive_recv_nack     = ISO7816_SUCCESSIVE_RECV_NACK_DISABLE;
	config->iso7816_config.max_iterations           = 7;
#endif
#ifdef FEATURE_USART_COLLISION_DECTION
	config->collision_detection_enable              = false;
    4464:	7758      	strb	r0, [r3, #29]
	UNUSED(port);
	/* Configure USART for unit test output */
	usart_get_config_defaults(&usart_conf);
	usart_conf.generator_source = GCLK_GENERATOR_3;
    4466:	2003      	movs	r0, #3
    4468:	321a      	adds	r2, #26
    446a:	5498      	strb	r0, [r3, r2]

	switch (cfg->bCharFormat) {
    446c:	790b      	ldrb	r3, [r1, #4]
    446e:	2b02      	cmp	r3, #2
    4470:	d102      	bne.n	4478 <uart_config+0x68>
	case CDC_STOP_BITS_2:
		usart_conf.stopbits = USART_STOPBITS_2;
    4472:	3213      	adds	r2, #19
    4474:	4b3e      	ldr	r3, [pc, #248]	; (4570 <uart_config+0x160>)
    4476:	729a      	strb	r2, [r3, #10]
		/* Default stop bit = 1 stop bit */
		usart_conf.stopbits = USART_STOPBITS_1;
		break;
	}

	switch (cfg->bParityType) {
    4478:	794b      	ldrb	r3, [r1, #5]
    447a:	2b01      	cmp	r3, #1
    447c:	d067      	beq.n	454e <uart_config+0x13e>
    447e:	2b02      	cmp	r3, #2
    4480:	d102      	bne.n	4488 <uart_config+0x78>
	case CDC_PAR_EVEN:
		usart_conf.parity = USART_PARITY_EVEN;
    4482:	2200      	movs	r2, #0
    4484:	4b3a      	ldr	r3, [pc, #232]	; (4570 <uart_config+0x160>)
    4486:	811a      	strh	r2, [r3, #8]
	default:
		usart_conf.parity = USART_PARITY_NONE;
		break;
	}

	switch(cfg->bDataBits) {
    4488:	798b      	ldrb	r3, [r1, #6]
    448a:	2b06      	cmp	r3, #6
    448c:	d068      	beq.n	4560 <uart_config+0x150>
    448e:	2b07      	cmp	r3, #7
    4490:	d06a      	beq.n	4568 <uart_config+0x158>
    4492:	2b05      	cmp	r3, #5
    4494:	d060      	beq.n	4558 <uart_config+0x148>
		usart_conf.character_size = USART_CHARACTER_SIZE_8BIT;
		break;
	}

	/* Options for USART. */
	usart_conf.baudrate = LE32_TO_CPU(cfg->dwDTERate);
    4496:	780a      	ldrb	r2, [r1, #0]
    4498:	784b      	ldrb	r3, [r1, #1]
    449a:	021b      	lsls	r3, r3, #8
    449c:	4313      	orrs	r3, r2
    449e:	788a      	ldrb	r2, [r1, #2]
    44a0:	0412      	lsls	r2, r2, #16
    44a2:	4313      	orrs	r3, r2
    44a4:	78ca      	ldrb	r2, [r1, #3]
    44a6:	0612      	lsls	r2, r2, #24
    44a8:	431a      	orrs	r2, r3
    44aa:	4b31      	ldr	r3, [pc, #196]	; (4570 <uart_config+0x160>)
    44ac:	621a      	str	r2, [r3, #32]
	usart_conf.mux_setting = CONF_USART_MUX_SETTING;
    44ae:	2280      	movs	r2, #128	; 0x80
    44b0:	0352      	lsls	r2, r2, #13
    44b2:	60da      	str	r2, [r3, #12]
	usart_conf.pinmux_pad0 = CONF_USART_PINMUX_PAD0;
    44b4:	4a2f      	ldr	r2, [pc, #188]	; (4574 <uart_config+0x164>)
    44b6:	631a      	str	r2, [r3, #48]	; 0x30
	usart_conf.pinmux_pad1 = CONF_USART_PINMUX_PAD1;
    44b8:	4a2f      	ldr	r2, [pc, #188]	; (4578 <uart_config+0x168>)
    44ba:	635a      	str	r2, [r3, #52]	; 0x34
	usart_conf.pinmux_pad2 = CONF_USART_PINMUX_PAD2;
    44bc:	2201      	movs	r2, #1
    44be:	4252      	negs	r2, r2
    44c0:	639a      	str	r2, [r3, #56]	; 0x38
	usart_conf.pinmux_pad3 = CONF_USART_PINMUX_PAD3;
    44c2:	63da      	str	r2, [r3, #60]	; 0x3c
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	/* Get a pointer to the hardware module instance */
	SercomUsart *const usart_hw = &(module->hw->USART);
    44c4:	4d2d      	ldr	r5, [pc, #180]	; (457c <uart_config+0x16c>)
    44c6:	682c      	ldr	r4, [r5, #0]

#if USART_CALLBACK_MODE == true
	/* Disable Global interrupt for module */
	system_interrupt_disable(_sercom_get_interrupt_vector(module->hw));
    44c8:	0020      	movs	r0, r4
    44ca:	4b2d      	ldr	r3, [pc, #180]	; (4580 <uart_config+0x170>)
    44cc:	4798      	blx	r3
 * \param[in] vector  Interrupt vector to disable
 */
static inline void system_interrupt_disable(
		const enum system_interrupt_vector vector)
{
	NVIC->ICER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    44ce:	231f      	movs	r3, #31
    44d0:	4018      	ands	r0, r3
    44d2:	3b1e      	subs	r3, #30
    44d4:	4083      	lsls	r3, r0
    44d6:	2280      	movs	r2, #128	; 0x80
    44d8:	492a      	ldr	r1, [pc, #168]	; (4584 <uart_config+0x174>)
    44da:	508b      	str	r3, [r1, r2]
	SercomUsart *const usart_hw = &(module->hw->USART);
    44dc:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    44de:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    44e0:	2b00      	cmp	r3, #0
    44e2:	d1fc      	bne.n	44de <uart_config+0xce>

	/* Wait until synchronization is complete */
	_usart_wait_for_sync(module);

	/* Disable USART module */
	usart_hw->CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    44e4:	6823      	ldr	r3, [r4, #0]
    44e6:	2202      	movs	r2, #2
    44e8:	4393      	bics	r3, r2
    44ea:	6023      	str	r3, [r4, #0]
	usart_disable(&usart_module_edbg);
	usart_init(&usart_module_edbg, CONF_USART_BASE, &usart_conf);
    44ec:	4d23      	ldr	r5, [pc, #140]	; (457c <uart_config+0x16c>)
    44ee:	4a20      	ldr	r2, [pc, #128]	; (4570 <uart_config+0x160>)
    44f0:	4925      	ldr	r1, [pc, #148]	; (4588 <uart_config+0x178>)
    44f2:	0028      	movs	r0, r5
    44f4:	4b25      	ldr	r3, [pc, #148]	; (458c <uart_config+0x17c>)
    44f6:	4798      	blx	r3
	SercomUsart *const usart_hw = &(module->hw->USART);
    44f8:	682c      	ldr	r4, [r5, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    44fa:	0020      	movs	r0, r4
    44fc:	4b20      	ldr	r3, [pc, #128]	; (4580 <uart_config+0x170>)
    44fe:	4798      	blx	r3
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    4500:	231f      	movs	r3, #31
    4502:	4018      	ands	r0, r3
    4504:	3b1e      	subs	r3, #30
    4506:	4083      	lsls	r3, r0
    4508:	4a1e      	ldr	r2, [pc, #120]	; (4584 <uart_config+0x174>)
    450a:	6013      	str	r3, [r2, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    450c:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    450e:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    4510:	2b00      	cmp	r3, #0
    4512:	d1fc      	bne.n	450e <uart_config+0xfe>
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    4514:	6823      	ldr	r3, [r4, #0]
    4516:	2202      	movs	r2, #2
    4518:	4313      	orrs	r3, r2
    451a:	6023      	str	r3, [r4, #0]
	usart_enable(&usart_module_edbg);

	/* Enable interrupts */
	usart_register_callback(&usart_module_edbg, usart_tx_callback,
    451c:	4c17      	ldr	r4, [pc, #92]	; (457c <uart_config+0x16c>)
    451e:	2200      	movs	r2, #0
    4520:	491b      	ldr	r1, [pc, #108]	; (4590 <uart_config+0x180>)
    4522:	0020      	movs	r0, r4
    4524:	4e1b      	ldr	r6, [pc, #108]	; (4594 <uart_config+0x184>)
    4526:	47b0      	blx	r6
	module->callback_enable_mask |= (1 << callback_type);
    4528:	2531      	movs	r5, #49	; 0x31
    452a:	5d63      	ldrb	r3, [r4, r5]
    452c:	2201      	movs	r2, #1
    452e:	4313      	orrs	r3, r2
    4530:	5563      	strb	r3, [r4, r5]
			USART_CALLBACK_BUFFER_TRANSMITTED);
	usart_enable_callback(&usart_module_edbg, USART_CALLBACK_BUFFER_TRANSMITTED);
	usart_register_callback(&usart_module_edbg, usart_rx_callback,
    4532:	2201      	movs	r2, #1
    4534:	4918      	ldr	r1, [pc, #96]	; (4598 <uart_config+0x188>)
    4536:	0020      	movs	r0, r4
    4538:	47b0      	blx	r6
    453a:	5d63      	ldrb	r3, [r4, r5]
    453c:	2202      	movs	r2, #2
    453e:	4313      	orrs	r3, r2
    4540:	5563      	strb	r3, [r4, r5]
			USART_CALLBACK_BUFFER_RECEIVED);
	usart_enable_callback(&usart_module_edbg, USART_CALLBACK_BUFFER_RECEIVED);
	usart_read_buffer_job(&usart_module_edbg, &rx_data, 1);
    4542:	2201      	movs	r2, #1
    4544:	4915      	ldr	r1, [pc, #84]	; (459c <uart_config+0x18c>)
    4546:	0020      	movs	r0, r4
    4548:	4b15      	ldr	r3, [pc, #84]	; (45a0 <uart_config+0x190>)
    454a:	4798      	blx	r3
}
    454c:	bd70      	pop	{r4, r5, r6, pc}
		usart_conf.parity = USART_PARITY_ODD;
    454e:	2280      	movs	r2, #128	; 0x80
    4550:	0192      	lsls	r2, r2, #6
    4552:	4b07      	ldr	r3, [pc, #28]	; (4570 <uart_config+0x160>)
    4554:	811a      	strh	r2, [r3, #8]
		break;
    4556:	e797      	b.n	4488 <uart_config+0x78>
		usart_conf.character_size = USART_CHARACTER_SIZE_5BIT;
    4558:	2205      	movs	r2, #5
    455a:	4b05      	ldr	r3, [pc, #20]	; (4570 <uart_config+0x160>)
    455c:	72da      	strb	r2, [r3, #11]
		break;
    455e:	e79a      	b.n	4496 <uart_config+0x86>
		usart_conf.character_size = USART_CHARACTER_SIZE_6BIT;
    4560:	2206      	movs	r2, #6
    4562:	4b03      	ldr	r3, [pc, #12]	; (4570 <uart_config+0x160>)
    4564:	72da      	strb	r2, [r3, #11]
		break;
    4566:	e796      	b.n	4496 <uart_config+0x86>
		usart_conf.character_size = USART_CHARACTER_SIZE_7BIT;
    4568:	2207      	movs	r2, #7
    456a:	4b01      	ldr	r3, [pc, #4]	; (4570 <uart_config+0x160>)
    456c:	72da      	strb	r2, [r3, #11]
		break;
    456e:	e792      	b.n	4496 <uart_config+0x86>
    4570:	20000728 	.word	0x20000728
    4574:	00160002 	.word	0x00160002
    4578:	00170002 	.word	0x00170002
    457c:	20000768 	.word	0x20000768
    4580:	000017f5 	.word	0x000017f5
    4584:	e000e100 	.word	0xe000e100
    4588:	42001400 	.word	0x42001400
    458c:	00001885 	.word	0x00001885
    4590:	000043b1 	.word	0x000043b1
    4594:	00001c55 	.word	0x00001c55
    4598:	0000435d 	.word	0x0000435d
    459c:	20000342 	.word	0x20000342
    45a0:	00001c8d 	.word	0x00001c8d

000045a4 <uart_open>:

void uart_open(uint8_t port)
{
    45a4:	b570      	push	{r4, r5, r6, lr}
	SercomUsart *const usart_hw = &(module->hw->USART);
    45a6:	4d0a      	ldr	r5, [pc, #40]	; (45d0 <uart_open+0x2c>)
    45a8:	682c      	ldr	r4, [r5, #0]
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    45aa:	0020      	movs	r0, r4
    45ac:	4b09      	ldr	r3, [pc, #36]	; (45d4 <uart_open+0x30>)
    45ae:	4798      	blx	r3
    45b0:	231f      	movs	r3, #31
    45b2:	4018      	ands	r0, r3
    45b4:	3b1e      	subs	r3, #30
    45b6:	4083      	lsls	r3, r0
    45b8:	4a07      	ldr	r2, [pc, #28]	; (45d8 <uart_open+0x34>)
    45ba:	6013      	str	r3, [r2, #0]
	SercomUsart *const usart_hw = &(module->hw->USART);
    45bc:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    45be:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    45c0:	2b00      	cmp	r3, #0
    45c2:	d1fc      	bne.n	45be <uart_open+0x1a>
	usart_hw->CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
    45c4:	6823      	ldr	r3, [r4, #0]
    45c6:	2202      	movs	r2, #2
    45c8:	4313      	orrs	r3, r2
    45ca:	6023      	str	r3, [r4, #0]
	UNUSED(port);

	usart_enable(&usart_module_edbg);
}
    45cc:	bd70      	pop	{r4, r5, r6, pc}
    45ce:	46c0      	nop			; (mov r8, r8)
    45d0:	20000768 	.word	0x20000768
    45d4:	000017f5 	.word	0x000017f5
    45d8:	e000e100 	.word	0xe000e100

000045dc <uart_close>:

void uart_close(uint8_t port)
{
    45dc:	b570      	push	{r4, r5, r6, lr}
	SercomUsart *const usart_hw = &(module->hw->USART);
    45de:	4d0a      	ldr	r5, [pc, #40]	; (4608 <uart_close+0x2c>)
    45e0:	682c      	ldr	r4, [r5, #0]
	system_interrupt_disable(_sercom_get_interrupt_vector(module->hw));
    45e2:	0020      	movs	r0, r4
    45e4:	4b09      	ldr	r3, [pc, #36]	; (460c <uart_close+0x30>)
    45e6:	4798      	blx	r3
	NVIC->ICER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    45e8:	231f      	movs	r3, #31
    45ea:	4018      	ands	r0, r3
    45ec:	3b1e      	subs	r3, #30
    45ee:	4083      	lsls	r3, r0
    45f0:	2280      	movs	r2, #128	; 0x80
    45f2:	4907      	ldr	r1, [pc, #28]	; (4610 <uart_close+0x34>)
    45f4:	508b      	str	r3, [r1, r2]
	SercomUsart *const usart_hw = &(module->hw->USART);
    45f6:	682a      	ldr	r2, [r5, #0]
	return (usart_hw->SYNCBUSY.reg);
    45f8:	69d3      	ldr	r3, [r2, #28]
	while (usart_is_syncing(module)) {
    45fa:	2b00      	cmp	r3, #0
    45fc:	d1fc      	bne.n	45f8 <uart_close+0x1c>
	usart_hw->CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
    45fe:	6823      	ldr	r3, [r4, #0]
    4600:	2202      	movs	r2, #2
    4602:	4393      	bics	r3, r2
    4604:	6023      	str	r3, [r4, #0]
	UNUSED(port);
	/* Close RS232 communication */
	usart_disable(&usart_module_edbg);
}
    4606:	bd70      	pop	{r4, r5, r6, pc}
    4608:	20000768 	.word	0x20000768
    460c:	000017f5 	.word	0x000017f5
    4610:	e000e100 	.word	0xe000e100

00004614 <__udivsi3>:
    4614:	2200      	movs	r2, #0
    4616:	0843      	lsrs	r3, r0, #1
    4618:	428b      	cmp	r3, r1
    461a:	d374      	bcc.n	4706 <__udivsi3+0xf2>
    461c:	0903      	lsrs	r3, r0, #4
    461e:	428b      	cmp	r3, r1
    4620:	d35f      	bcc.n	46e2 <__udivsi3+0xce>
    4622:	0a03      	lsrs	r3, r0, #8
    4624:	428b      	cmp	r3, r1
    4626:	d344      	bcc.n	46b2 <__udivsi3+0x9e>
    4628:	0b03      	lsrs	r3, r0, #12
    462a:	428b      	cmp	r3, r1
    462c:	d328      	bcc.n	4680 <__udivsi3+0x6c>
    462e:	0c03      	lsrs	r3, r0, #16
    4630:	428b      	cmp	r3, r1
    4632:	d30d      	bcc.n	4650 <__udivsi3+0x3c>
    4634:	22ff      	movs	r2, #255	; 0xff
    4636:	0209      	lsls	r1, r1, #8
    4638:	ba12      	rev	r2, r2
    463a:	0c03      	lsrs	r3, r0, #16
    463c:	428b      	cmp	r3, r1
    463e:	d302      	bcc.n	4646 <__udivsi3+0x32>
    4640:	1212      	asrs	r2, r2, #8
    4642:	0209      	lsls	r1, r1, #8
    4644:	d065      	beq.n	4712 <__udivsi3+0xfe>
    4646:	0b03      	lsrs	r3, r0, #12
    4648:	428b      	cmp	r3, r1
    464a:	d319      	bcc.n	4680 <__udivsi3+0x6c>
    464c:	e000      	b.n	4650 <__udivsi3+0x3c>
    464e:	0a09      	lsrs	r1, r1, #8
    4650:	0bc3      	lsrs	r3, r0, #15
    4652:	428b      	cmp	r3, r1
    4654:	d301      	bcc.n	465a <__udivsi3+0x46>
    4656:	03cb      	lsls	r3, r1, #15
    4658:	1ac0      	subs	r0, r0, r3
    465a:	4152      	adcs	r2, r2
    465c:	0b83      	lsrs	r3, r0, #14
    465e:	428b      	cmp	r3, r1
    4660:	d301      	bcc.n	4666 <__udivsi3+0x52>
    4662:	038b      	lsls	r3, r1, #14
    4664:	1ac0      	subs	r0, r0, r3
    4666:	4152      	adcs	r2, r2
    4668:	0b43      	lsrs	r3, r0, #13
    466a:	428b      	cmp	r3, r1
    466c:	d301      	bcc.n	4672 <__udivsi3+0x5e>
    466e:	034b      	lsls	r3, r1, #13
    4670:	1ac0      	subs	r0, r0, r3
    4672:	4152      	adcs	r2, r2
    4674:	0b03      	lsrs	r3, r0, #12
    4676:	428b      	cmp	r3, r1
    4678:	d301      	bcc.n	467e <__udivsi3+0x6a>
    467a:	030b      	lsls	r3, r1, #12
    467c:	1ac0      	subs	r0, r0, r3
    467e:	4152      	adcs	r2, r2
    4680:	0ac3      	lsrs	r3, r0, #11
    4682:	428b      	cmp	r3, r1
    4684:	d301      	bcc.n	468a <__udivsi3+0x76>
    4686:	02cb      	lsls	r3, r1, #11
    4688:	1ac0      	subs	r0, r0, r3
    468a:	4152      	adcs	r2, r2
    468c:	0a83      	lsrs	r3, r0, #10
    468e:	428b      	cmp	r3, r1
    4690:	d301      	bcc.n	4696 <__udivsi3+0x82>
    4692:	028b      	lsls	r3, r1, #10
    4694:	1ac0      	subs	r0, r0, r3
    4696:	4152      	adcs	r2, r2
    4698:	0a43      	lsrs	r3, r0, #9
    469a:	428b      	cmp	r3, r1
    469c:	d301      	bcc.n	46a2 <__udivsi3+0x8e>
    469e:	024b      	lsls	r3, r1, #9
    46a0:	1ac0      	subs	r0, r0, r3
    46a2:	4152      	adcs	r2, r2
    46a4:	0a03      	lsrs	r3, r0, #8
    46a6:	428b      	cmp	r3, r1
    46a8:	d301      	bcc.n	46ae <__udivsi3+0x9a>
    46aa:	020b      	lsls	r3, r1, #8
    46ac:	1ac0      	subs	r0, r0, r3
    46ae:	4152      	adcs	r2, r2
    46b0:	d2cd      	bcs.n	464e <__udivsi3+0x3a>
    46b2:	09c3      	lsrs	r3, r0, #7
    46b4:	428b      	cmp	r3, r1
    46b6:	d301      	bcc.n	46bc <__udivsi3+0xa8>
    46b8:	01cb      	lsls	r3, r1, #7
    46ba:	1ac0      	subs	r0, r0, r3
    46bc:	4152      	adcs	r2, r2
    46be:	0983      	lsrs	r3, r0, #6
    46c0:	428b      	cmp	r3, r1
    46c2:	d301      	bcc.n	46c8 <__udivsi3+0xb4>
    46c4:	018b      	lsls	r3, r1, #6
    46c6:	1ac0      	subs	r0, r0, r3
    46c8:	4152      	adcs	r2, r2
    46ca:	0943      	lsrs	r3, r0, #5
    46cc:	428b      	cmp	r3, r1
    46ce:	d301      	bcc.n	46d4 <__udivsi3+0xc0>
    46d0:	014b      	lsls	r3, r1, #5
    46d2:	1ac0      	subs	r0, r0, r3
    46d4:	4152      	adcs	r2, r2
    46d6:	0903      	lsrs	r3, r0, #4
    46d8:	428b      	cmp	r3, r1
    46da:	d301      	bcc.n	46e0 <__udivsi3+0xcc>
    46dc:	010b      	lsls	r3, r1, #4
    46de:	1ac0      	subs	r0, r0, r3
    46e0:	4152      	adcs	r2, r2
    46e2:	08c3      	lsrs	r3, r0, #3
    46e4:	428b      	cmp	r3, r1
    46e6:	d301      	bcc.n	46ec <__udivsi3+0xd8>
    46e8:	00cb      	lsls	r3, r1, #3
    46ea:	1ac0      	subs	r0, r0, r3
    46ec:	4152      	adcs	r2, r2
    46ee:	0883      	lsrs	r3, r0, #2
    46f0:	428b      	cmp	r3, r1
    46f2:	d301      	bcc.n	46f8 <__udivsi3+0xe4>
    46f4:	008b      	lsls	r3, r1, #2
    46f6:	1ac0      	subs	r0, r0, r3
    46f8:	4152      	adcs	r2, r2
    46fa:	0843      	lsrs	r3, r0, #1
    46fc:	428b      	cmp	r3, r1
    46fe:	d301      	bcc.n	4704 <__udivsi3+0xf0>
    4700:	004b      	lsls	r3, r1, #1
    4702:	1ac0      	subs	r0, r0, r3
    4704:	4152      	adcs	r2, r2
    4706:	1a41      	subs	r1, r0, r1
    4708:	d200      	bcs.n	470c <__udivsi3+0xf8>
    470a:	4601      	mov	r1, r0
    470c:	4152      	adcs	r2, r2
    470e:	4610      	mov	r0, r2
    4710:	4770      	bx	lr
    4712:	e7ff      	b.n	4714 <__udivsi3+0x100>
    4714:	b501      	push	{r0, lr}
    4716:	2000      	movs	r0, #0
    4718:	f000 f8f0 	bl	48fc <__aeabi_idiv0>
    471c:	bd02      	pop	{r1, pc}
    471e:	46c0      	nop			; (mov r8, r8)

00004720 <__aeabi_uidivmod>:
    4720:	2900      	cmp	r1, #0
    4722:	d0f7      	beq.n	4714 <__udivsi3+0x100>
    4724:	e776      	b.n	4614 <__udivsi3>
    4726:	4770      	bx	lr

00004728 <__divsi3>:
    4728:	4603      	mov	r3, r0
    472a:	430b      	orrs	r3, r1
    472c:	d47f      	bmi.n	482e <__divsi3+0x106>
    472e:	2200      	movs	r2, #0
    4730:	0843      	lsrs	r3, r0, #1
    4732:	428b      	cmp	r3, r1
    4734:	d374      	bcc.n	4820 <__divsi3+0xf8>
    4736:	0903      	lsrs	r3, r0, #4
    4738:	428b      	cmp	r3, r1
    473a:	d35f      	bcc.n	47fc <__divsi3+0xd4>
    473c:	0a03      	lsrs	r3, r0, #8
    473e:	428b      	cmp	r3, r1
    4740:	d344      	bcc.n	47cc <__divsi3+0xa4>
    4742:	0b03      	lsrs	r3, r0, #12
    4744:	428b      	cmp	r3, r1
    4746:	d328      	bcc.n	479a <__divsi3+0x72>
    4748:	0c03      	lsrs	r3, r0, #16
    474a:	428b      	cmp	r3, r1
    474c:	d30d      	bcc.n	476a <__divsi3+0x42>
    474e:	22ff      	movs	r2, #255	; 0xff
    4750:	0209      	lsls	r1, r1, #8
    4752:	ba12      	rev	r2, r2
    4754:	0c03      	lsrs	r3, r0, #16
    4756:	428b      	cmp	r3, r1
    4758:	d302      	bcc.n	4760 <__divsi3+0x38>
    475a:	1212      	asrs	r2, r2, #8
    475c:	0209      	lsls	r1, r1, #8
    475e:	d065      	beq.n	482c <__divsi3+0x104>
    4760:	0b03      	lsrs	r3, r0, #12
    4762:	428b      	cmp	r3, r1
    4764:	d319      	bcc.n	479a <__divsi3+0x72>
    4766:	e000      	b.n	476a <__divsi3+0x42>
    4768:	0a09      	lsrs	r1, r1, #8
    476a:	0bc3      	lsrs	r3, r0, #15
    476c:	428b      	cmp	r3, r1
    476e:	d301      	bcc.n	4774 <__divsi3+0x4c>
    4770:	03cb      	lsls	r3, r1, #15
    4772:	1ac0      	subs	r0, r0, r3
    4774:	4152      	adcs	r2, r2
    4776:	0b83      	lsrs	r3, r0, #14
    4778:	428b      	cmp	r3, r1
    477a:	d301      	bcc.n	4780 <__divsi3+0x58>
    477c:	038b      	lsls	r3, r1, #14
    477e:	1ac0      	subs	r0, r0, r3
    4780:	4152      	adcs	r2, r2
    4782:	0b43      	lsrs	r3, r0, #13
    4784:	428b      	cmp	r3, r1
    4786:	d301      	bcc.n	478c <__divsi3+0x64>
    4788:	034b      	lsls	r3, r1, #13
    478a:	1ac0      	subs	r0, r0, r3
    478c:	4152      	adcs	r2, r2
    478e:	0b03      	lsrs	r3, r0, #12
    4790:	428b      	cmp	r3, r1
    4792:	d301      	bcc.n	4798 <__divsi3+0x70>
    4794:	030b      	lsls	r3, r1, #12
    4796:	1ac0      	subs	r0, r0, r3
    4798:	4152      	adcs	r2, r2
    479a:	0ac3      	lsrs	r3, r0, #11
    479c:	428b      	cmp	r3, r1
    479e:	d301      	bcc.n	47a4 <__divsi3+0x7c>
    47a0:	02cb      	lsls	r3, r1, #11
    47a2:	1ac0      	subs	r0, r0, r3
    47a4:	4152      	adcs	r2, r2
    47a6:	0a83      	lsrs	r3, r0, #10
    47a8:	428b      	cmp	r3, r1
    47aa:	d301      	bcc.n	47b0 <__divsi3+0x88>
    47ac:	028b      	lsls	r3, r1, #10
    47ae:	1ac0      	subs	r0, r0, r3
    47b0:	4152      	adcs	r2, r2
    47b2:	0a43      	lsrs	r3, r0, #9
    47b4:	428b      	cmp	r3, r1
    47b6:	d301      	bcc.n	47bc <__divsi3+0x94>
    47b8:	024b      	lsls	r3, r1, #9
    47ba:	1ac0      	subs	r0, r0, r3
    47bc:	4152      	adcs	r2, r2
    47be:	0a03      	lsrs	r3, r0, #8
    47c0:	428b      	cmp	r3, r1
    47c2:	d301      	bcc.n	47c8 <__divsi3+0xa0>
    47c4:	020b      	lsls	r3, r1, #8
    47c6:	1ac0      	subs	r0, r0, r3
    47c8:	4152      	adcs	r2, r2
    47ca:	d2cd      	bcs.n	4768 <__divsi3+0x40>
    47cc:	09c3      	lsrs	r3, r0, #7
    47ce:	428b      	cmp	r3, r1
    47d0:	d301      	bcc.n	47d6 <__divsi3+0xae>
    47d2:	01cb      	lsls	r3, r1, #7
    47d4:	1ac0      	subs	r0, r0, r3
    47d6:	4152      	adcs	r2, r2
    47d8:	0983      	lsrs	r3, r0, #6
    47da:	428b      	cmp	r3, r1
    47dc:	d301      	bcc.n	47e2 <__divsi3+0xba>
    47de:	018b      	lsls	r3, r1, #6
    47e0:	1ac0      	subs	r0, r0, r3
    47e2:	4152      	adcs	r2, r2
    47e4:	0943      	lsrs	r3, r0, #5
    47e6:	428b      	cmp	r3, r1
    47e8:	d301      	bcc.n	47ee <__divsi3+0xc6>
    47ea:	014b      	lsls	r3, r1, #5
    47ec:	1ac0      	subs	r0, r0, r3
    47ee:	4152      	adcs	r2, r2
    47f0:	0903      	lsrs	r3, r0, #4
    47f2:	428b      	cmp	r3, r1
    47f4:	d301      	bcc.n	47fa <__divsi3+0xd2>
    47f6:	010b      	lsls	r3, r1, #4
    47f8:	1ac0      	subs	r0, r0, r3
    47fa:	4152      	adcs	r2, r2
    47fc:	08c3      	lsrs	r3, r0, #3
    47fe:	428b      	cmp	r3, r1
    4800:	d301      	bcc.n	4806 <__divsi3+0xde>
    4802:	00cb      	lsls	r3, r1, #3
    4804:	1ac0      	subs	r0, r0, r3
    4806:	4152      	adcs	r2, r2
    4808:	0883      	lsrs	r3, r0, #2
    480a:	428b      	cmp	r3, r1
    480c:	d301      	bcc.n	4812 <__divsi3+0xea>
    480e:	008b      	lsls	r3, r1, #2
    4810:	1ac0      	subs	r0, r0, r3
    4812:	4152      	adcs	r2, r2
    4814:	0843      	lsrs	r3, r0, #1
    4816:	428b      	cmp	r3, r1
    4818:	d301      	bcc.n	481e <__divsi3+0xf6>
    481a:	004b      	lsls	r3, r1, #1
    481c:	1ac0      	subs	r0, r0, r3
    481e:	4152      	adcs	r2, r2
    4820:	1a41      	subs	r1, r0, r1
    4822:	d200      	bcs.n	4826 <__divsi3+0xfe>
    4824:	4601      	mov	r1, r0
    4826:	4152      	adcs	r2, r2
    4828:	4610      	mov	r0, r2
    482a:	4770      	bx	lr
    482c:	e05d      	b.n	48ea <__divsi3+0x1c2>
    482e:	0fca      	lsrs	r2, r1, #31
    4830:	d000      	beq.n	4834 <__divsi3+0x10c>
    4832:	4249      	negs	r1, r1
    4834:	1003      	asrs	r3, r0, #32
    4836:	d300      	bcc.n	483a <__divsi3+0x112>
    4838:	4240      	negs	r0, r0
    483a:	4053      	eors	r3, r2
    483c:	2200      	movs	r2, #0
    483e:	469c      	mov	ip, r3
    4840:	0903      	lsrs	r3, r0, #4
    4842:	428b      	cmp	r3, r1
    4844:	d32d      	bcc.n	48a2 <__divsi3+0x17a>
    4846:	0a03      	lsrs	r3, r0, #8
    4848:	428b      	cmp	r3, r1
    484a:	d312      	bcc.n	4872 <__divsi3+0x14a>
    484c:	22fc      	movs	r2, #252	; 0xfc
    484e:	0189      	lsls	r1, r1, #6
    4850:	ba12      	rev	r2, r2
    4852:	0a03      	lsrs	r3, r0, #8
    4854:	428b      	cmp	r3, r1
    4856:	d30c      	bcc.n	4872 <__divsi3+0x14a>
    4858:	0189      	lsls	r1, r1, #6
    485a:	1192      	asrs	r2, r2, #6
    485c:	428b      	cmp	r3, r1
    485e:	d308      	bcc.n	4872 <__divsi3+0x14a>
    4860:	0189      	lsls	r1, r1, #6
    4862:	1192      	asrs	r2, r2, #6
    4864:	428b      	cmp	r3, r1
    4866:	d304      	bcc.n	4872 <__divsi3+0x14a>
    4868:	0189      	lsls	r1, r1, #6
    486a:	d03a      	beq.n	48e2 <__divsi3+0x1ba>
    486c:	1192      	asrs	r2, r2, #6
    486e:	e000      	b.n	4872 <__divsi3+0x14a>
    4870:	0989      	lsrs	r1, r1, #6
    4872:	09c3      	lsrs	r3, r0, #7
    4874:	428b      	cmp	r3, r1
    4876:	d301      	bcc.n	487c <__divsi3+0x154>
    4878:	01cb      	lsls	r3, r1, #7
    487a:	1ac0      	subs	r0, r0, r3
    487c:	4152      	adcs	r2, r2
    487e:	0983      	lsrs	r3, r0, #6
    4880:	428b      	cmp	r3, r1
    4882:	d301      	bcc.n	4888 <__divsi3+0x160>
    4884:	018b      	lsls	r3, r1, #6
    4886:	1ac0      	subs	r0, r0, r3
    4888:	4152      	adcs	r2, r2
    488a:	0943      	lsrs	r3, r0, #5
    488c:	428b      	cmp	r3, r1
    488e:	d301      	bcc.n	4894 <__divsi3+0x16c>
    4890:	014b      	lsls	r3, r1, #5
    4892:	1ac0      	subs	r0, r0, r3
    4894:	4152      	adcs	r2, r2
    4896:	0903      	lsrs	r3, r0, #4
    4898:	428b      	cmp	r3, r1
    489a:	d301      	bcc.n	48a0 <__divsi3+0x178>
    489c:	010b      	lsls	r3, r1, #4
    489e:	1ac0      	subs	r0, r0, r3
    48a0:	4152      	adcs	r2, r2
    48a2:	08c3      	lsrs	r3, r0, #3
    48a4:	428b      	cmp	r3, r1
    48a6:	d301      	bcc.n	48ac <__divsi3+0x184>
    48a8:	00cb      	lsls	r3, r1, #3
    48aa:	1ac0      	subs	r0, r0, r3
    48ac:	4152      	adcs	r2, r2
    48ae:	0883      	lsrs	r3, r0, #2
    48b0:	428b      	cmp	r3, r1
    48b2:	d301      	bcc.n	48b8 <__divsi3+0x190>
    48b4:	008b      	lsls	r3, r1, #2
    48b6:	1ac0      	subs	r0, r0, r3
    48b8:	4152      	adcs	r2, r2
    48ba:	d2d9      	bcs.n	4870 <__divsi3+0x148>
    48bc:	0843      	lsrs	r3, r0, #1
    48be:	428b      	cmp	r3, r1
    48c0:	d301      	bcc.n	48c6 <__divsi3+0x19e>
    48c2:	004b      	lsls	r3, r1, #1
    48c4:	1ac0      	subs	r0, r0, r3
    48c6:	4152      	adcs	r2, r2
    48c8:	1a41      	subs	r1, r0, r1
    48ca:	d200      	bcs.n	48ce <__divsi3+0x1a6>
    48cc:	4601      	mov	r1, r0
    48ce:	4663      	mov	r3, ip
    48d0:	4152      	adcs	r2, r2
    48d2:	105b      	asrs	r3, r3, #1
    48d4:	4610      	mov	r0, r2
    48d6:	d301      	bcc.n	48dc <__divsi3+0x1b4>
    48d8:	4240      	negs	r0, r0
    48da:	2b00      	cmp	r3, #0
    48dc:	d500      	bpl.n	48e0 <__divsi3+0x1b8>
    48de:	4249      	negs	r1, r1
    48e0:	4770      	bx	lr
    48e2:	4663      	mov	r3, ip
    48e4:	105b      	asrs	r3, r3, #1
    48e6:	d300      	bcc.n	48ea <__divsi3+0x1c2>
    48e8:	4240      	negs	r0, r0
    48ea:	b501      	push	{r0, lr}
    48ec:	2000      	movs	r0, #0
    48ee:	f000 f805 	bl	48fc <__aeabi_idiv0>
    48f2:	bd02      	pop	{r1, pc}

000048f4 <__aeabi_idivmod>:
    48f4:	2900      	cmp	r1, #0
    48f6:	d0f8      	beq.n	48ea <__divsi3+0x1c2>
    48f8:	e716      	b.n	4728 <__divsi3>
    48fa:	4770      	bx	lr

000048fc <__aeabi_idiv0>:
    48fc:	4770      	bx	lr
    48fe:	46c0      	nop			; (mov r8, r8)

00004900 <__ctzsi2>:
    4900:	4241      	negs	r1, r0
    4902:	4008      	ands	r0, r1
    4904:	211c      	movs	r1, #28
    4906:	2301      	movs	r3, #1
    4908:	041b      	lsls	r3, r3, #16
    490a:	4298      	cmp	r0, r3
    490c:	d301      	bcc.n	4912 <__ctzsi2+0x12>
    490e:	0c00      	lsrs	r0, r0, #16
    4910:	3910      	subs	r1, #16
    4912:	0a1b      	lsrs	r3, r3, #8
    4914:	4298      	cmp	r0, r3
    4916:	d301      	bcc.n	491c <__ctzsi2+0x1c>
    4918:	0a00      	lsrs	r0, r0, #8
    491a:	3908      	subs	r1, #8
    491c:	091b      	lsrs	r3, r3, #4
    491e:	4298      	cmp	r0, r3
    4920:	d301      	bcc.n	4926 <__ctzsi2+0x26>
    4922:	0900      	lsrs	r0, r0, #4
    4924:	3904      	subs	r1, #4
    4926:	a202      	add	r2, pc, #8	; (adr r2, 4930 <__ctzsi2+0x30>)
    4928:	5c10      	ldrb	r0, [r2, r0]
    492a:	1a40      	subs	r0, r0, r1
    492c:	4770      	bx	lr
    492e:	46c0      	nop			; (mov r8, r8)
    4930:	1d1d1c1b 	.word	0x1d1d1c1b
    4934:	1e1e1e1e 	.word	0x1e1e1e1e
    4938:	1f1f1f1f 	.word	0x1f1f1f1f
    493c:	1f1f1f1f 	.word	0x1f1f1f1f

00004940 <__aeabi_lmul>:
    4940:	b5f0      	push	{r4, r5, r6, r7, lr}
    4942:	46ce      	mov	lr, r9
    4944:	4647      	mov	r7, r8
    4946:	0415      	lsls	r5, r2, #16
    4948:	0c2d      	lsrs	r5, r5, #16
    494a:	002e      	movs	r6, r5
    494c:	b580      	push	{r7, lr}
    494e:	0407      	lsls	r7, r0, #16
    4950:	0c14      	lsrs	r4, r2, #16
    4952:	0c3f      	lsrs	r7, r7, #16
    4954:	4699      	mov	r9, r3
    4956:	0c03      	lsrs	r3, r0, #16
    4958:	437e      	muls	r6, r7
    495a:	435d      	muls	r5, r3
    495c:	4367      	muls	r7, r4
    495e:	4363      	muls	r3, r4
    4960:	197f      	adds	r7, r7, r5
    4962:	0c34      	lsrs	r4, r6, #16
    4964:	19e4      	adds	r4, r4, r7
    4966:	469c      	mov	ip, r3
    4968:	42a5      	cmp	r5, r4
    496a:	d903      	bls.n	4974 <__aeabi_lmul+0x34>
    496c:	2380      	movs	r3, #128	; 0x80
    496e:	025b      	lsls	r3, r3, #9
    4970:	4698      	mov	r8, r3
    4972:	44c4      	add	ip, r8
    4974:	464b      	mov	r3, r9
    4976:	4351      	muls	r1, r2
    4978:	4343      	muls	r3, r0
    497a:	0436      	lsls	r6, r6, #16
    497c:	0c36      	lsrs	r6, r6, #16
    497e:	0c25      	lsrs	r5, r4, #16
    4980:	0424      	lsls	r4, r4, #16
    4982:	4465      	add	r5, ip
    4984:	19a4      	adds	r4, r4, r6
    4986:	1859      	adds	r1, r3, r1
    4988:	1949      	adds	r1, r1, r5
    498a:	0020      	movs	r0, r4
    498c:	bc0c      	pop	{r2, r3}
    498e:	4690      	mov	r8, r2
    4990:	4699      	mov	r9, r3
    4992:	bdf0      	pop	{r4, r5, r6, r7, pc}

00004994 <__libc_init_array>:
    4994:	b570      	push	{r4, r5, r6, lr}
    4996:	2600      	movs	r6, #0
    4998:	4d0c      	ldr	r5, [pc, #48]	; (49cc <__libc_init_array+0x38>)
    499a:	4c0d      	ldr	r4, [pc, #52]	; (49d0 <__libc_init_array+0x3c>)
    499c:	1b64      	subs	r4, r4, r5
    499e:	10a4      	asrs	r4, r4, #2
    49a0:	42a6      	cmp	r6, r4
    49a2:	d109      	bne.n	49b8 <__libc_init_array+0x24>
    49a4:	2600      	movs	r6, #0
    49a6:	f000 f86f 	bl	4a88 <_init>
    49aa:	4d0a      	ldr	r5, [pc, #40]	; (49d4 <__libc_init_array+0x40>)
    49ac:	4c0a      	ldr	r4, [pc, #40]	; (49d8 <__libc_init_array+0x44>)
    49ae:	1b64      	subs	r4, r4, r5
    49b0:	10a4      	asrs	r4, r4, #2
    49b2:	42a6      	cmp	r6, r4
    49b4:	d105      	bne.n	49c2 <__libc_init_array+0x2e>
    49b6:	bd70      	pop	{r4, r5, r6, pc}
    49b8:	00b3      	lsls	r3, r6, #2
    49ba:	58eb      	ldr	r3, [r5, r3]
    49bc:	4798      	blx	r3
    49be:	3601      	adds	r6, #1
    49c0:	e7ee      	b.n	49a0 <__libc_init_array+0xc>
    49c2:	00b3      	lsls	r3, r6, #2
    49c4:	58eb      	ldr	r3, [r5, r3]
    49c6:	4798      	blx	r3
    49c8:	3601      	adds	r6, #1
    49ca:	e7f2      	b.n	49b2 <__libc_init_array+0x1e>
    49cc:	00004a94 	.word	0x00004a94
    49d0:	00004a94 	.word	0x00004a94
    49d4:	00004a94 	.word	0x00004a94
    49d8:	00004a98 	.word	0x00004a98

000049dc <memcpy>:
    49dc:	2300      	movs	r3, #0
    49de:	b510      	push	{r4, lr}
    49e0:	429a      	cmp	r2, r3
    49e2:	d100      	bne.n	49e6 <memcpy+0xa>
    49e4:	bd10      	pop	{r4, pc}
    49e6:	5ccc      	ldrb	r4, [r1, r3]
    49e8:	54c4      	strb	r4, [r0, r3]
    49ea:	3301      	adds	r3, #1
    49ec:	e7f8      	b.n	49e0 <memcpy+0x4>

000049ee <memset>:
    49ee:	0003      	movs	r3, r0
    49f0:	1882      	adds	r2, r0, r2
    49f2:	4293      	cmp	r3, r2
    49f4:	d100      	bne.n	49f8 <memset+0xa>
    49f6:	4770      	bx	lr
    49f8:	7019      	strb	r1, [r3, #0]
    49fa:	3301      	adds	r3, #1
    49fc:	e7f9      	b.n	49f2 <memset+0x4>
    49fe:	0000      	movs	r0, r0
    4a00:	42000800 	.word	0x42000800
    4a04:	42000c00 	.word	0x42000c00
    4a08:	42001000 	.word	0x42001000
    4a0c:	42001400 	.word	0x42001400
    4a10:	42001800 	.word	0x42001800
    4a14:	42001c00 	.word	0x42001c00
    4a18:	00001e52 	.word	0x00001e52
    4a1c:	00001e4e 	.word	0x00001e4e
    4a20:	00001e4e 	.word	0x00001e4e
    4a24:	00001eb0 	.word	0x00001eb0
    4a28:	00001eb0 	.word	0x00001eb0
    4a2c:	00001e66 	.word	0x00001e66
    4a30:	00001e58 	.word	0x00001e58
    4a34:	00001e6c 	.word	0x00001e6c
    4a38:	00001e9e 	.word	0x00001e9e
    4a3c:	00001fb8 	.word	0x00001fb8
    4a40:	00001f98 	.word	0x00001f98
    4a44:	00001f98 	.word	0x00001f98
    4a48:	00002024 	.word	0x00002024
    4a4c:	00001faa 	.word	0x00001faa
    4a50:	00001fc6 	.word	0x00001fc6
    4a54:	00001f9c 	.word	0x00001f9c
    4a58:	00001fd4 	.word	0x00001fd4
    4a5c:	00002014 	.word	0x00002014
    4a60:	00003574 	.word	0x00003574
    4a64:	00003582 	.word	0x00003582
    4a68:	0000361c 	.word	0x0000361c
    4a6c:	000036bc 	.word	0x000036bc
    4a70:	00003720 	.word	0x00003720

00004a74 <_usb_device_irq_bits>:
    4a74:	00080004 00800070 01000001 00000200     ....p...........

00004a84 <_usb_endpoint_irq_bits>:
    4a84:	60100c03                                ...`

00004a88 <_init>:
    4a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a8a:	46c0      	nop			; (mov r8, r8)
    4a8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    4a8e:	bc08      	pop	{r3}
    4a90:	469e      	mov	lr, r3
    4a92:	4770      	bx	lr

00004a94 <__init_array_start>:
    4a94:	000000dd 	.word	0x000000dd

00004a98 <_fini>:
    4a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4a9a:	46c0      	nop			; (mov r8, r8)
    4a9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    4a9e:	bc08      	pop	{r3}
    4aa0:	469e      	mov	lr, r3
    4aa2:	4770      	bx	lr

00004aa4 <__fini_array_start>:
    4aa4:	000000b5 	.word	0x000000b5
